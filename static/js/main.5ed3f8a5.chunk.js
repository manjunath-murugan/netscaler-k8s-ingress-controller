(this["webpackJsonpnetscaler-deployment-builder"]=this["webpackJsonpnetscaler-deployment-builder"]||[]).push([[0],{252:function(e,t,i){},402:function(e,t,i){e.exports=i(925)},407:function(e,t,i){},920:function(e,t,i){e.exports=i.p+"static/media/single.adbb155f.png"},921:function(e,t,i){e.exports=i.p+"static/media/dualtier.d3fbd47f.png"},922:function(e,t,i){e.exports=i.p+"static/media/multicluster.163e0e3b.png"},923:function(e,t,i){e.exports=i.p+"static/media/servicemesh.4c6e2edd.png"},925:function(e,t,i){"use strict";i.r(t);var r=i(0),s=i.n(r),n=i(49),o=i.n(n),a=(i(407),i(408),i(66)),l=i(67),c=i(70),p=i(71),d=(i(252),i(947)),u=i(949),g=i(943),m=i(944),f=function(e){Object(p.a)(i,e);var t=Object(c.a)(i);function i(){var e;Object(a.a)(this,i);for(var r=arguments.length,s=new Array(r),n=0;n<r;n++)s[n]=arguments[n];return(e=t.call.apply(t,[this].concat(s))).state={activeAccordionIndex:0,activeItem:0,selectedItem:""},e.handleAccordionClick=function(t,i){var r=i.index,s=e.state.activeAccordionIndex===r?-1:r;e.setState({selectedItem:"",activeAccordionIndex:s,activeItem:0})},e.handleItemClick=function(t,i){var r=i.index,s=i.name;console.log("Item click index= "+r+", name="+s);var n=e.state.activeAccordionIndex;e.setState({selectedItem:s,activeAccordionIndex:n,activeItem:r}),e.props.onClick(n,r)},e}return Object(l.a)(i,[{key:"render",value:function(){var e=this,t=this.state.activeAccordionIndex,i=this.state.selectedItem,r=-1,n=this.state.activeItem;return s.a.createElement(d.a,{as:u.a,vertical:!0,secondary:!0,fluid:!0,exclusive:!1,className:"global-left-nav"},this.props.config.map((function(o){return r++,n=-1,s.a.createElement(u.a.Item,{position:"left"},s.a.createElement(g.a,{position:"top center",trigger:s.a.createElement(d.a.Title,{active:t===r,content:s.a.createElement("span",null,o.groupTitle),index:r,onClick:e.handleAccordionClick,left:!0})},s.a.createElement(g.a.Header,null,o.groupTooltip),s.a.createElement(g.a.Content,null,s.a.createElement(m.a,{src:o.groupImage}))),o.forms&&s.a.createElement(d.a.Content,{active:t===r},o.forms.map((function(t){return n++,s.a.createElement(g.a,{position:"top center",trigger:s.a.createElement(u.a.Item,{index:n,key:t.title,name:t.title,active:i===t.title,onClick:e.handleItemClick},t.title)},t.itemTooltip)}))))})))}}]),i}(s.a.Component),S=i(952),y=i(945),b=i(950),P=i(946),h=i(951),C=i(953),N=i(382),x=i(383),I=i(167),v=i(45),A=i(381),D=i(377),E=i.n(D),w=i(948),T=i(941),k=i(378),O=Object(v.c)(A.a),L=function(e){Object(p.a)(r,e);var t=Object(c.a)(r);function r(e){var s;return Object(a.a)(this,r),(s=t.call(this,e)).downloadYaml=function(){var e=i(730),t=new File([s.props.yamlStr],"values.yaml",{type:"text/plain;charset=utf-8"});e.saveAs(t)},s.toYaml=s.toYaml.bind(Object(I.a)(s)),console.log("constructor: formData",s.props.formData),s}return Object(l.a)(r,[{key:"componentDidMount",value:function(){console.log("componentDidMount: formData",this.props.formData),console.log("componentDidMount: yamlStr",this.props.yamlStr),console.log("componentDidMount: formId",this.props.formId)}},{key:"toYaml",value:function(e){var t=e.formData;console.log("toYaml formData: "+Object(x.a)({},t)),t.adcSettings&&(t.nsncSettings&&t.nsncSettings["nsnc.enabled"]&&(t.nsncSettings["nsnc.nsIP"]=t.adcSettings["nsic.nsIP"],t.nsncSettings["nsnc.adcCredentialSecret"]=t.adcSettings["nsic.adcCredentialSecret"],t.nsncSettings["nsnc.license.accept"]="Yes"),t.ipamSettings&&t.ipamSettings["ipam.enabled"]?t.adcSettings["nsic.ipam"]=!0:t.adcSettings["nsic.ipam"]=!1,t.cpxSettings&&t.cpxSettings["cpx.enabled"]&&(t.cpxSettings["cpx.nsic.required"]=!0,t.cpxSettings["cpx.nsic.image"]=t.nsicSettings["nsic.image"],t.cpxSettings["cpx.nsic.pullPolicy"]=t.nsicSettings["nsic.pullPolicy"],t.cpxSettings["cpx.nsic.required"]=!0,t.cpxSettings["cpx.license.accept"]="Yes",t.platformSetting["nsic.openshift"]&&(t.platformSetting["cpx.openshift"]=!0),t.cpxSettings["cpx.logLevel"]=t.adcSettings["nsic.logLevel"])),t.ingressGatewaySettings&&t.ingressGatewaySettings["iaIngress.netscalerCPX"]&&(t.ingressGatewaySettings["iaIngress.ingressGateway.vserverIP"]="nsip"),t.ingressGatewaySettings&&!t.ingressGatewaySettings["iaIngress.netscalerCPX"]&&t.nsncSettings&&t.nsncSettings["nsnc.enabled"]&&(t.nsncSettings["nsnc.adcCredentialSecret"]="nslogin",t.nsncSettings["nsnc.license.accept"]="Yes"),t.gslbadcSettings&&t.gslbadcSettings["gslb.enabled"]&&(t.gslbplatformSetting&&(t.gslbplatformSetting["gslb.openshift"]?t.nsicSettings["nsic.openshift"]=!0:t.nsicSettings["nsic.openshift"]=!1),t.crdsSettings&&t.nsicSettings&&(t.crdsSettings["gslb.crds.install"]?(t.nsicSettings["nsic.crds.install"]=!0,t.crdsSettings["gslb.crds.retainOnDelete"]?t.nsicSettings["nsic.crds.retainOnDelete"]=!0:t.nsicSettings["nsic.crds.retainOnDelete"]=!1):t.nsicSettings["nsic.crds.install"]=!1));var i={};for(var r in t)for(var s in t[r]){var n=s.split("."),o=t[r][s];if(o){var a,l=i,c=Object(N.a)(n.slice(0,-1));try{for(c.s();!(a=c.n()).done;){var p=a.value;p in l||(l[p]={}),l=l[p]}}catch(j){c.e(j)}finally{c.f()}l[n.slice(-1)]=o}}if(t.ipamSettings&&!t.ipamSettings["ipam.enabled"]&&delete i.ipam,t.adcSettings&&t.nsoeConfig&&(t.nsoeConfig["nsic.nsoeConfig.required"]?(t.nsoeConfig["nsic.nsoeConfig.transactions.enable"]||delete i.nsic.nsoeConfig.transactions,t.nsoeConfig["nsic.nsoeConfig.timeseries.metrics.enable"]||delete i.nsic.nsoeConfig.timeseries.metrics,t.nsoeConfig["nsic.nsoeConfig.distributedTracing.enable"]||delete i.nsic.nsoeConfig.distributedTracings):delete i.nsic.nsoeConfig),t.cloudSettings&&(t.cloudSettings["cpx.aws"]||delete i.cpx.serviceAnnotations),t.cpxSettings&&t.cpxnsoeConfig&&(t.cpxnsoeConfig["cpx.nsoeConfig.required"]?(t.cpxnsoeConfig["cpx.nsoeConfig.transactions.enable"]||delete i.cpx.nsoeConfig.transactions,t.cpxnsoeConfig["cpx.nsoeConfig.timeseries.metrics.enable"]||delete i.cpx.nsoeConfig.timeseries.metrics,t.cpxnsoeConfig["cpx.nsoeConfig.distributedTracing.enable"]||delete i.cpx.nsoeConfig.distributedTracing):delete i.cpx.nsoeConfig),t.exporterSettings&&(i.nsic&&i.nsic.exporter&&!i.nsic.exporter.required&&delete i.nsic.exporter,i.cpx&&i.cpx.exporter&&!i.cpx.exporter.required&&delete i.cpx.exporter,i.iaIngress&&i.iaIngress.metricExporter&&!i.iaIngress.metricExporter.required&&delete i.iaIngress.metricExporter,i.iaEgress&&i.iaEgress.metricExporter&&!i.iaEgress.metricExporter.required&&delete i.iaEgress.metricExporter),t.nsncSettings&&!t.nsncSettings["nsnc.enabled"]&&delete i.nsnc,t.nsncSettings&&t.nsncSettings["nsnc.enabled"]&&t.nsicSettings&&delete i.nsic.nodeWatch,t.ingressGatewaySettings){if(!t.ingressGatewaySettings["iaIngress.netscalerCPX"]&&(delete i.iaIngress.ADMSettings,delete i.iaIngress.ingressGateway.image,delete i.iaIngress.ingressGateway.mgmtHttpPort,delete i.iaIngress.ingressGateway.mgmtHttpsPort,delete i.iaIngress.ingressGateway.httpNodePort,delete i.iaIngress.ingressGateway.httpsNodePort,delete i.iaIngress.ingressGateway.lightWeightCPX,t.ingressGatewaySettings["iaIngress.ingressGateway.tcpPort"]))for(var d in i.iaIngress.ingressGateway.tcpPort)i.iaIngress.ingressGateway.tcpPort[d]["Node Port"]&&delete i.iaIngress.ingressGateway.tcpPort[d]["Node Port"];if(t.ingressGatewaySettings["iaIngress.ingressGateway.secretVolume"]){var u=t.ingressGatewaySettings["iaIngress.ingressGateway.secretVolume"],g=[];for(var m in u){console.log(u[m]);var f={};u[m]["Volume Name"]&&(f.name=u[m]["Volume Name"]),u[m]["Secret Name"]&&(f.secretName=u[m]["Secret Name"]),u[m]["Mount Path"]&&(f.mountPath=u[m]["Mount Path"]),g.push(f)}i.iaIngress.ingressGateway.secretVolume=g}if(t.ingressGatewaySettings["iaIngress.ingressGateway.tcpPort"]){var S=t.ingressGatewaySettings["iaIngress.ingressGateway.tcpPort"],y=[];for(m in S){var b={};S[m]["Port Name"]&&(b.name=S[m]["Port Name"]),S[m]["Node Port"]&&(b.nodePort=S[m]["Node Port"]),S[m].Port&&(b.port=S[m].Port),S[m]["Target Port"]&&(b.targetPort=S[m]["Target Port"]),y.push(b)}i.iaIngress.ingressGateway.tcpPort=y}t.ingressGatewaySettings["iaIngres.netscalerCPX"]&&delete i.nsnc}if(t.nsoeSettings&&t.nsoeSettings["nsoe.enabled"]&&(t.nsoeSettings["nsoe.ns_tracing.enabled"]||delete i.nsoe.ns_tracing,t.nsoeSettings["nsoe.kafka.enabled"]||delete i.nsoe.kafka,t.nsoeSettings["nsoe.elasticsearch.enabled"]||delete i.nsoe.elasticsearch,t.nsoeSettings["nsoe.timeseries.enabled"]||delete i.nsoe.timeseries),t.nsoeSettings&&!t.nsoeSettings["nsoe.enabled"]&&delete i.nsoe,t.nsicSettings){var P=t.nsicSettings["nsic.ingressClass"],h=[];for(var C in P){var I=P[C];for(var v in I)I.hasOwnProperty(v)&&I[v]&&h.push(I[v])}i.nsic.ingressClass=h,i.nsic.logLevel=t.nsicSettings["nsic.logLevel"].logLevel}if(t.gslbnsicSettings&&(i.gslb.logLevel=t.gslbnsicSettings["gslb.logLevel"].logLevel),t.siteSettings&&t.siteSettings["gslb.sitedata"]){var A=t.siteSettings["gslb.sitedata"],D=[];for(m in A){var w={};A[m].siteName&&(w.siteName=A[m].siteName),A[m].secretName&&(w.secretName=A[m].secretName),A[m].siteIp&&(w.siteIp=A[m].siteIp),A[m].siteRegion&&(w.siteRegion=A[m].siteRegion),D.push(w)}i.gslb.sitedata=D}if(t.cpxDeploymentSettings){var T=t.cpxDeploymentSettings["cpx.ingressClass"],k=[];for(var O in T){var L=T[O];for(var M in L)L.hasOwnProperty(M)&&L[M]&&k.push(L[M])}i.cpx.ingressClass=k,i.cpx.logLevel=t.cpxDeploymentSettings["cpx.logLevel"].logLevel}if(t.adcSettings&&(i.nsic.nsProtocol=t.adcSettings["nsic.nsProtocol"].nsProtocol),t.nsicAdvancedSettings&&(t.nsicAdvancedSettings["nsic.nsicSettings.required"]?(console.log(t),i.nsic.nsicSettings.nsicConfig.NS_HTTP2_SERVER_SIDE=t.nsicAdvancedSettings["nsic.nsicSettings.nsicConfig.NS_HTTP2_SERVER_SIDE"].NS_HTTP2_SERVER_SIDE,i.nsic.nsicSettings.nsicConfig.NS_COOKIE_VERSION=t.nsicAdvancedSettings["nsic.nsicSettings.nsicConfig.NS_COOKIE_VERSION"].NS_COOKIE_VERSION):t.nsicAdvancedSettings["nsic.nsicSettings.required"]||delete i.nsic.nsicSettings),t.cpxnsicAdvancedSettings&&(t.cpxnsicAdvancedSettings["cpx.nsicSettings.required"]?(i.cpx.nsicSettings.nsicConfig.NS_HTTP2_SERVER_SIDE=t.cpxnsicAdvancedSettings["cpx.nsicSettings.nsicConfig.NS_HTTP2_SERVER_SIDE"].NS_HTTP2_SERVER_SIDE,i.cpx.nsicSettings.nsicConfig.NS_COOKIE_VERSION=t.cpxnsicAdvancedSettings["cpx.nsicSettings.nsicConfig.NS_COOKIE_VERSION"].NS_COOKIE_VERSION):t.nsicAdvancedSettings["cpx.nsicSettings.required"]||delete i.cpx.nsicSettings),t.gslbadcSettings&&(i.gslb.nsProtocol=t.gslbadcSettings["gslb.nsProtocol"].nsProtocol),t.gslbnsicSettings&&(i.gslb.pullPolicy=t.gslbnsicSettings["gslb.pullPolicy"].pullPolicy),t.cpxSettings&&(i.cpx.pullPolicy=t.cpxSettings["cpx.pullPolicy"].pullPolicy,i.cpx.nsic.pullPolicy=t.cpxSettings["cpx.nsic.pullPolicy"].pullPolicy),t.nsicSettings&&(t.nsicSettings["nsic.pullPolicy"]&&(i.nsic.pullPolicy=t.nsicSettings["nsic.pullPolicy"].pullPolicy),t.nsicSettings["cpx.nsic.pullPolicy"]&&(i.cpx.nsic.pullPolicy=t.nsicSettings["cpx.nsic.pullPolicy"].pullPolicy)),t.exporterSettings&&t.exporterSettings["nsic.exporter.required"]&&(i.nsic.exporter.pullPolicy=t.exporterSettings["nsic.exporter.pullPolicy"].pullPolicy),t.cpxexporterSettings&&t.cpxexporterSettings["cpx.exporter.required"]&&(i.cpx.exporter.pullPolicy=t.cpxexporterSettings["cpx.exporter.pullPolicy"].pullPolicy),t.nsncSettings&&t.nsncSettings["nsnc.enabled"]&&t.nsncSettings["nsnc.pullPolicy"]&&(i.nsnc.pullPolicy=t.nsncSettings["nsnc.pullPolicy"].pullPolicy),t.nsoeSettings&&t.nsoeSettings["nsoe.enabled"]&&t.nsoeSettings["nsoe.pullPolicy"]&&(i.nsoe.pullPolicy=t.nsoeSettings["nsoe.pullPolicy"].pullPolicy),t.ipamSettings&&t.ipamSettings["ipam.enabled"]&&(t.ipamSettings["ipam.pullPolicy"]&&(i.ipam.pullPolicy=t.ipamSettings["ipam.pullPolicy"].pullPolicy),t.ipamSettings["ipam.vipRange"])){var R="[",X=[];for(var _ in X=t.ipamSettings["ipam.vipRange"].indexOf(",")>-1?t.ipamSettings["ipam.vipRange"].split(","):[t.ipamSettings["ipam.vipRange"]])R=R+'"'+X[_]+'",';i.ipam.vipRange=R.slice(0,-1)+"]"}var V=E.a.safeDump(i);console.log("toYaml: "+V),this.props.setParentState(this.props.groupId,this.props.formId,t,V)}},{key:"copyYaml",value:function(e){var t=e;t.select(),t.setSelectionRange(0,99999),document.execCommand("copy")}},{key:"componentDidUpdate",value:function(e,t,i){console.log("componentDidUpdate prevProps=",e),console.log("componentDidUpdate currProps=",this.props)}},{key:"render",value:function(){var e,t=this;return s.a.createElement(s.a.Fragment,null,s.a.createElement(b.a.Column,{width:7,style:{height:"600px",overflow:"scroll"}},s.a.createElement(O,{schema:this.props.schema,noHtml5Validate:!0,formData:this.props.formData,liveValidate:!0,showErrorList:!1,uiSchema:this.props.uischema,onChange:this.toYaml,onSubmit:this.toYaml,onError:(e="errors",console.log.bind(console,e))},s.a.createElement("br",null))),s.a.createElement(b.a.Column,{width:9,style:{height:"600px",overflow:"scroll"}},s.a.createElement(h.a,null,"Values.yaml"),s.a.createElement(w.a,{language:"yaml",style:T.a},this.props.yamlStr),s.a.createElement(k.CopyToClipboard,{text:this.props.yamlStr,onCopy:function(){return t.setState({copied:!0})}},s.a.createElement("button",{className:"ui button"},s.a.createElement("i",{className:"copy icon"}),"Copy")),s.a.createElement("button",{className:"ui button",onClick:this.downloadYaml},s.a.createElement("i",{className:"download icon"}),"Download"),s.a.createElement("div",null,s.a.createElement(S.a,{vertical:!0},"Use the downloaded values.yaml with helm to install the NetScaler Cloud Native stack."),s.a.createElement(S.a,{inverted:!0},"helm repo add netscaler https://netscaler.github.io/netscaler-helm-charts/",s.a.createElement("br",null),'helm install "name" netscaler/citrix-cloud-native -f values.yaml ',s.a.createElement("br",null)))))}}]),r}(s.a.Component),M={properties:{adcSettings:{type:"object",title:"NetScaler ADC Settings",required:["nsic.nsIP","nsic.adcCredentialSecret"],properties:{"nsic.enabled":{type:"boolean",default:!0},"nsic.nsIP":{type:"string",title:"NetScaler ADC Management IP",format:"ipv4"},"nsic.nsPort":{type:"number",title:"Management Port for NetScaler ADC",default:443,maximum:65535,minimum:1},"nsic.nsProtocol":{type:"object",title:"NetScaler ADC Management Protocol",properties:{nsProtocol:{type:"string",default:"HTTPS",enum:["HTTPS","HTTP"]}}},"nsic.adcCredentialSecret":{type:"string",title:"Kubernetes Secret Name"}}},entity:{type:"object",title:"Entity related",properties:{"nsic.entityPrefix":{type:"string",title:"NetScaler ADC Entity Prefix",default:"k8s"},"nsic.defaultSSLCertSecret":{type:"string",title:"Default SSL Certificate"}}},platformSetting:{type:"object",title:"Platform Setting",properties:{"nsic.openshift":{type:"boolean",title:"Openshift",default:!1}}},nsicSettings:{type:"object",title:"NetScaler Ingress Controller Settings",properties:{"nsic.image":{type:"string",title:"NetScaler Ingress Controller Image",default:"quay.io/citrix/citrix-k8s-ingress-controller:1.9.20"},"nsic.pullPolicy":{type:"object",title:"Image Pull Policy",properties:{pullPolicy:{type:"string",default:"IfNotPresent",enum:["Always","IfNotPresent","Never"]}}},"nsic.kubernetesURL":{type:"string",title:"Kubernetes API-server URL",format:"url"},"nsic.license.accept":{type:"string",default:"Yes"},"nsic.ingressClass":{type:"array",title:"Ingress Classes for Controller",items:{type:"object",properties:{"Ingress Class:":{type:"string"}}}},"nsic.logLevel":{type:"object",title:"Ingress Controller Log Level",properties:{logLevel:{type:"string",default:"INFO",enum:["DEBUG","INFO","WARN","ERROR","TRACE"]}}}}},nsicAdvancedSettings:{type:"object",title:"NetScaler Ingress Controller Advanced Settings",properties:{"nsic.nsicSettings.required":{type:"boolean",title:"Use NetScaler Ingress Controller Advanced Settings",default:!1}},dependencies:{"nsic.nsicSettings.required":{oneOf:[{properties:{"nsic.nsicSettings.required":{const:!1}}},{properties:{"nsic.nsicSettings.required":{const:!0},"nsic.nsicSettings.nsicConfig.NS_HTTP2_SERVER_SIDE":{type:"object",title:"Enable HTTP2 in Server Side",properties:{NS_HTTP2_SERVER_SIDE:{type:"string",default:"OFF",enum:["ON","OFF"]}}},"nsic.nsicSettings.nsicConfig.NS_COOKIE_VERSION":{type:"object",title:"Persistence cookie version",properties:{NS_COOKIE_VERSION:{type:"string",default:"0",enum:["0","1"]}}}}}]}}},nodeSelectorSettings:{type:"object",title:"Node Selector Settings",properties:{"nsic.nodeSelector.key":{type:"string",title:"Key"},"nsic.nodeSelector.value":{type:"string",title:"Value"}}},crdsSettings:{type:"object",title:"NetScaler CRDs Settings",properties:{"nsic.crds.install":{type:"boolean",title:"Install NetScaler CRDs",default:!0}},dependencies:{"nsic.crds.install":{oneOf:[{properties:{"nsic.crds.install":{const:!1}}},{properties:{"nsic.crds.install":{const:!0},"nsic.crds.retainOnDelete":{type:"boolean",title:"Retain NetScaler CRDs on delete",default:!1}}}]}}},nsncSettings:{type:"object",title:"Routing Settings",required:["nsnc.vtepIP","nsnc.network","nsnc.vxlan.id","nsnc.vxlan.port"],properties:{"nsnc.enabled":{type:"boolean",title:"Deploy NetScaler Node Controller",default:!1}},dependencies:{"nsnc.enabled":{oneOf:[{properties:{"nsnc.enabled":{const:!1},"nsic.nodeWatch":{type:"boolean",title:"Node Watch",default:!1}}},{properties:{"nsnc.enabled":{const:!0},"nsnc.image":{type:"string",title:"NetScaler Node Controller Image",default:"quay.io/citrix/citrix-k8s-node-controller:2.0.0"},"nsnc.pullPolicy":{type:"object",title:"Image Pull Policy",properties:{pullPolicy:{type:"string",default:"IfNotPresent",enum:["Always","IfNotPresent","Never"]}}},"nsnc.vtepIP":{type:"string",title:"NetScaler ADC SNIP",format:"ipv4"},"nsnc.vxlan.id":{type:"number",title:"VxLAN ID",default:2,minimum:2,maximum:16777215},"nsnc.vxlan.port":{type:"number",title:"VxLAN Port",minimum:1,maximum:65434},"nsnc.network":{type:"string",title:"Network"}}}]}}},exporterSettings:{type:"object",title:"NetScaler ADC Metrics Exporter Settings",properties:{"nsic.exporter.required":{type:"boolean",title:"Deploy NetScaler ADC Metrics Exporter"}},dependencies:{"nsic.exporter.required":{oneOf:[{properties:{"nsic.exporter.required":{const:!1}}},{properties:{"nsic.exporter.required":{const:!0},"nsic.exporter.image":{type:"string",title:"NetScaler ADC Metrics Exporter Image",default:"quay.io/citrix/citrix-adc-metrics-exporter:1.4.6"},"nsic.exporter.pullPolicy":{type:"object",title:"Image Pull Policy",properties:{pullPolicy:{type:"string",default:"IfNotPresent",enum:["Always","IfNotPresent","Never"]}}},"nsic.exporter.ports.containerPort":{type:"number",title:"Exporter Container Port",default:8888,minimum:1,maximum:65535}}}]}}},nsoeConfig:{type:"object",title:"NetScaler Observability Exporter Config for NetScaler Ingress Controller",properties:{"nsic.nsoeConfig.required":{type:"boolean",title:"COE ConfigMap for NetScaler Ingress Controller",default:!1}},dependencies:{"nsic.nsoeConfig.required":{oneOf:[{properties:{"nsic.nsoeConfig.required":{const:!1}}},{properties:{"nsic.nsoeConfig.required":{const:!0},"nsic.nsoeConfig.endpoint.server":{type:"string",title:"DNS/IPAddress of the analytics server"},"nsic.nsoeConfig.timeseries.port":{type:"number",title:"Port number of timeseries endpoint of the analytics server.",default:30002,minimum:1,maximum:65535},"nsic.nsoeConfig.distributedTracing.enable":{type:"boolean",title:"Enable Tracing",default:!1},"nsic.nsoeConfig.timeseries.metrics.enable":{type:"boolean",title:"Enable sending metrics from NetScaler ADC to prometheus",default:!0},"nsic.nsoeConfig.timeseries.auditlogs.enable":{type:"boolean",title:"Export auditlog from NetScaler ADC",default:!0},"nsic.nsoeConfig.timeseries.events.enable":{type:"boolean",title:"Export events from NetScaler ADC",default:!0},"nsic.nsoeConfig.transactions.enable":{type:"boolean",title:"Export transactions from NetScaler ADC ",default:!0}},dependencies:{"nsic.nsoeConfig.transactions.enable":{oneOf:[{properties:{"nsic.nsoeConfig.transactions.enable":{const:!1}}},{properties:{"nsic.nsoeConfig.transactions.enable":{const:!0},"nsic.nsoeConfig.transactions.port":{type:"number",title:"Port number of transactional endpoint of analytics server",default:30001,minimum:1,maximum:65535}}}]},"nsic.nsoeConfig.timeseries.metrics.enable":{oneOf:[{properties:{"nsic.nsoeConfig.timeseries.metrics.enable":{const:!1}}},{properties:{"nsic.nsoeConfig.timeseries.metrics.enable":{const:!0},"nsic.nsoeConfig.timeseries.metrics.mode":{type:"string",title:"Mode of metric endpoint.",default:"prometheus"}}}]},"nsic.nsoeConfig.distributedTracing.enable":{oneOf:[{properties:{"nsic.nsoeConfig.distributedTracing.enable":{const:!1}}},{properties:{"nsic.nsoeConfig.distributedTracing.enable":{const:!0},"nsic.nsoeConfig.distributedTracing.samplingrate":{type:"number",title:"OpenTracing sampling rate",default:100,minimum:1,maximum:100}}}]}}}]}}},nsoeSettings:{type:"object",title:"NetScaler Observability Exporter Settings",properties:{"nsoe.enabled":{type:"boolean",title:"Deploy NetScaler Observability Exporter",default:!1}},dependencies:{"nsoe.enabled":{oneOf:[{properties:{"nsoe.enabled":{const:!1}}},{properties:{"nsoe.enabled":{const:!0},"nsoe.image":{type:"string",title:"NetScaler Observability Exporter",default:"quay.io/citrix/citrix-observability-exporter:1.2.001"},"nsoe.pullPolicy":{type:"object",title:"Image Pull Policy",properties:{pullPolicy:{type:"string",default:"IfNotPresent",enum:["Always","IfNotPresent","Never"]}}},"nsoe.transaction.nodePort":{type:"number",title:"Transaction NodePort",default:30001,minimum:1,maximum:65535},"nsoe.timeseries.enabled":{type:"boolean",title:"TimeSeries",default:!0},"nsoe.ns_tracing.enabled":{type:"boolean",title:"Tracing",default:!1},"nsoe.elasticsearch.enabled":{type:"boolean",title:"ElasticSearch",default:!1},"nsoe.kafka.enabled":{type:"boolean",title:"Kafka",default:!1}},dependencies:{"nsoe.ns_tracing.enabled":{oneOf:[{properties:{"nsoe.ns_tracing.enabled":{const:!1}}},{properties:{"nsoe.ns_tracing.enabled":{const:!0},"nsoe.ns_tracing.server":{type:"string",title:"Tracing Server",default:"zipkin:9411/api/v1/spans"}}}]},"nsoe.elasticsearch.enabled":{oneOf:[{properties:{"nsoe.elasticsearch.enabled":{const:!1}}},{properties:{"nsoe.elasticsearch.enabled":{const:!0},"nsoe.elasticsearch.server":{type:"string",title:"ElasticSearch Server EndPoint",default:"elasticsearch:9200"}}}]},"nsoe.kafka.enabled":{oneOf:[{properties:{"nsoe.kafka.enabled":{const:!1}}},{properties:{"nsoe.kafka.enabled":{const:!0},"nsoe.kafka.broker":{type:"string",title:"Kafka Broker"},"nsoe.kafka.topic":{type:"string",title:"Kafka Topic",default:"HTTP"}}}]},"nsoe.timeseries.enabled":{oneOf:[{properties:{"nsoe.timeseries.enabled":{const:!1}}},{properties:{"nsoe.timeseries.enabled":{const:!0},"nsoe.timeseries.nodePort":{type:"number",title:"Timeseries NodePort",default:30002,minimum:1,maximum:65535}}}]}}}]}}}}},R={adcSettings:{"nsic.enabled":{"ui:widget":"hidden"},"nsic.nsIP":{"ui:placeholder":"X.X.X.X","ui:autofocus":!0,"ui:description":"NetScaler ADC NSIP/SNIP, SNIP in case of HA (mgmt has to be enabled)"},"nsic.nsPort":{"ui:description":"NetScaler ADC Management Port"},"nsic.nsProtocol":{"ui:description":"Protocol used for NetScaler ADC Management"},"nsic.adcCredentialSecret":{"ui:description":"Create a Kubernetes secret for the credentials of NetScaler ADC MPX or VPX using the following command: <kubectl create secret generic nslogin --from-literal=username='username' --from-literal=password='password'>"}},entity:{"nsic.entityPrefix":{"ui:description":"Resources created on the NetScaler ADC will have this prefix in their name. Only alphanumeric string is valid."},"nsic.defaultSSLCertSecret":{"ui:description":"Kubernetes secret resource name which to be used as default SSL certificate in NetScaler ADC"}},platformSetting:{"ui:description":"Set to true if charts are being deployed in OpenShift environment","nsic.openshift":{"ui:description":"Openshift is set to true if charts are being deployed in OpenShift environment."}},nsicSettings:{"nsic.license.accept":{"ui:widget":"hidden"},"nsic.kubernetesURL":{"ui:description":"The kube-apiserver url that NetScaler Ingress Controller uses to register the events. If the value is not specified, CIC uses the internal kube-apiserver IP address."},"nsic.logLevel":{"ui:description":"Log Level for NetScaler Ingress Controller Logs"},"nsic.ingressClass":{"ui:description":"Ingress class ensures that a particular set of ingress resources would be processed by NetScaler Ingress Controller."},"nsic.image":{"ui:description":"NetScaler Ingress Controller image"},"nsic.pullPolicy":{"ui:description":"Image Pull Policy for NetScaler Ingress Controller Image Pull Policy"}},nsicAdvancedSettings:{"nsic.nsicSettings.nsicConfig.NS_HTTP2_SERVER_SIDE":{"ui:description":"Enables HTTP2 for NetScaler ADC service group configurations"},"nsic.nsicSettings.nsicConfig.NS_COOKIE_VERSION":{"ui:description":"Specify the persistence cookie version"}},crdsSettings:{"nsic.crds.retainOnDelete":{"ui:description":"if set to true, then NetScaler CRDs will not be deleted during helm delete"}},nsoeSettings:{"ui:description":"NetScaler Observability Exporter collects metrics and transactions from NetScaler ADCs and transforms them to suitable formats (such as JSON, AVRO) for supported endpoints. For info <https://github.com/citrix/citrix-observability-exporter>","nsoe.image":{"ui:description":"COE Image"},"nsoe.pullPolicy":{"ui:description":"COE Image pull policy"},"nsoe.timeseries.enabled":{"ui:description":"Set true to enable sending timeseries data to prometheus."},"nsoe.ns_tracing.server":{"ui:description":"The tracing server api endpoint."},"nsoe.transaction.nodePort":{"ui:description":"Specify the port used to expose COE service outside cluster for transaction endpoint."},"nsoe.elasticsearch.server":{"ui:description":"The Elasticsearch server api endpoint. Note: To use ElasticSearch make sure Kafka is disabled"},"nsoe.kafka.broker":{"ui:description":"The kafka broker IP or FQDN details. Note: To use Kafka make sure Elasticsearch is disabled"},"nsoe.kafka.topic":{"ui:description":"The kafka topic details to upload data"},"nsoe.timeseries.nodePort":{"ui:description":"Specify the port used to expose COE service outside cluster for timeseries endpoint."}},nsoeConfig:{"ui:description":"Select below settings to send metrics, events, transactions to NetScaler Observability Exporter from NetScaler ADC","nsic.nsoeConfig.endpoint.server":{"ui:description":"Specify the DNS or IP address of the analytics server (NetScaler Observability Exporter)"},"nsic.nsoeConfig.timeseries.metrics.mode":{"ui:widget":"hidden"}},nsncSettings:{"ui:description":"Choose anyone. Select Node Watch to automatically configure routes on the NetScaler ADC to point to the pod networks on the nodes. Select CNC to create network between the Kubernetes cluster and ingress device.","nsnc.vxlan.id":{"ui:description":"A unique VXLAN VNID to create a VXLAN overlay between Kubernetes cluster and the ingress devices. Note: Ensure that the VXLAN VNID that you use does not conflict with the Kubernetes cluster or NetScaler ADC VXLAN VNID. You can use the show vxlan command on your NetScaler ADC to view the VXLAN VNID"},"nsnc.vxlan.port":{"ui:description":"The VXLAN port that you want to use for the overlay. Note: Ensure that the VXLAN PORT that you use does not conflict with the Kubernetes cluster or NetScaler ADC VXLAN PORT. You can use the show vxlan command on your NetScaler ADC to view the VXLAN PORT. "},"nsnc.image":{"ui:description":"CNC Image"},"nsnc.pullPolicy":{"ui:description":"CNC image pull policy"},"nsnc.vtepIP":{"ui:description":"The Ingress NetScaler ADC SNIP. This IP address is used to establish an overlay network between the Kubernetes clusters."},"nsnc.network":{"ui:description":"The IP address range (for example, 192.128.1.0/24) that NetScaler node controller uses to configure the VTEP overlay end points on the Kubernetes nodes. Note: Ensure that the subnet that you provide is different from your Kubernetes cluster."},"nsic.nodeWatch":{"ui:description":"When checked, routes on the NetScaler ADC are automatically configured to point to the pod networks on the nodes"}},exporterSettings:{"ui:description":"NetScaler metrics exporter scrapes NetScaler ADC stats and exports them via HTTP to Prometheus. For info:<https://github.com/citrix/citrix-adc-metrics-exporter>","nsic.exporter.image":{"ui:description":"NetScaler ADC Metrics Exporter Image"},"nsic.exporter.pullPolicy":{"ui:description":"NetScaler ADC Metrics Exporter image pull policy"},"nsic.exporter.ports.containerPort":{"ui:description":"Specify on which port metrics collected by the exporter should be exposed. Agents like Prometheus will need to scrape this port of the container to collected metrics"}},nodeSelectorSettings:{"nsic.nodeSelector.key":{"ui:description":"Node label key to be used for nodeSelector option in NetScaler Ingress Controller deployment.."},"nsic.nodeSelector.value":{"ui:description":"Node label value to be used for nodeSelector option in NetScaler Ingress Controller deployment."}}},X={properties:{adcSettings:{type:"object",title:"NetScaler ADC Settings for Tier-1 VPX or MPX",required:["nsic.nsIP","nsic.adcCredentialSecret"],properties:{"nsic.enabled":{type:"boolean",default:!0},"nsic.nsIP":{type:"string",title:"NetScaler ADC Management IP",format:"ipv4"},"nsic.nsPort":{type:"number",title:"Management Port for NetScaler ADC",default:443,maximum:65535,minimum:1},"nsic.nsProtocol":{type:"object",title:"NetScaler ADC Management Protocol",properties:{nsProtocol:{type:"string",default:"HTTPS",enum:["HTTPS","HTTP"]}}},"nsic.adcCredentialSecret":{type:"string",title:"Kubernetes Secret Name"}}},entity:{type:"object",title:"Entity related Settings for Tier-1 VPX or MPX",properties:{"nsic.entityPrefix":{type:"string",title:"NetScaler ADC Entity Prefix",default:"k8s"},"nsic.defaultSSLCertSecret":{type:"string",title:"Default SSL Certificate"}}},nodeSelectorSettings:{type:"object",title:"Node Selector Settings Settings for Tier-1 Ingress",properties:{"nsic.nodeSelector.key":{type:"string",title:"Key"},"nsic.nodeSelector.value":{type:"string",title:"Value"}}},nsicSettings:{type:"object",title:"NetScaler Ingress Controller Settings",properties:{"nsic.image":{type:"string",title:"NetScaler Ingress Controller Image",default:"quay.io/citrix/citrix-k8s-ingress-controller:1.9.20"},"nsic.pullPolicy":{type:"object",title:"Image Pull Policy",properties:{pullPolicy:{type:"string",default:"IfNotPresent",enum:["Always","IfNotPresent","Never"]}}},"nsic.kubernetesURL":{type:"string",title:"Kubernetes API-server URL",format:"url"},"nsic.license.accept":{type:"string",default:"Yes"},"nsic.ingressClass":{type:"array",title:"Ingress Classes for Controller in Tier-1",items:{type:"object",properties:{"Ingress Class:":{type:"string"}}}},"nsic.logLevel":{type:"object",title:"Log Level settings for Tier-1 Ingress Controller",properties:{logLevel:{type:"string",default:"INFO",enum:["DEBUG","INFO","WARN","ERROR","TRACE"]}}},"nsic.ipam":{type:"boolean",default:!0}}},nsicAdvancedSettings:{type:"object",title:"Tier-1 NetScaler Ingress Controller Advanced Settings",properties:{"nsic.nsicSettings.required":{type:"boolean",title:"Use NetScaler Ingress Controller Advanced Settings",default:!1}},dependencies:{"nsic.nsicSettings.required":{oneOf:[{properties:{"nsic.nsicSettings.required":{const:!1}}},{properties:{"nsic.nsicSettings.required":{const:!0},"nsic.nsicSettings.nsicConfig.NS_HTTP2_SERVER_SIDE":{type:"object",title:"Enable HTTP2 in Server Side",properties:{NS_HTTP2_SERVER_SIDE:{type:"string",default:"OFF",enum:["ON","OFF"]}}},"nsic.nsicSettings.nsicConfig.NS_COOKIE_VERSION":{type:"object",title:"Persistence cookie version",properties:{NS_COOKIE_VERSION:{type:"string",default:"0",enum:["0","1"]}}}}}]}}},exporterSettings:{type:"object",title:"NetScaler ADC Metrics Exporter Settings for Tier-1 Ingress",properties:{"nsic.exporter.required":{type:"boolean",title:"Deploy NetScaler ADC Metrics Exporter"}},dependencies:{"nsic.exporter.required":{oneOf:[{properties:{"nsic.exporter.required":{const:!1}}},{properties:{"nsic.exporter.required":{const:!0},"nsic.exporter.image":{type:"string",title:"NetScaler ADC Metrics Exporter Image",default:"quay.io/citrix/citrix-adc-metrics-exporter:1.4.6"},"nsic.exporter.pullPolicy":{type:"object",title:"Image Pull Policy",properties:{pullPolicy:{type:"string",default:"IfNotPresent",enum:["Always","IfNotPresent","Never"]}}},"nsic.exporter.ports.containerPort":{type:"number",title:"Exporter Container Port",default:8888,minimum:1,maximum:65535}}}]}}},nsoeConfig:{type:"object",title:"NetScaler Observability Exporter Config for Tier-1 Ingress",properties:{"nsic.nsoeConfig.required":{type:"boolean",title:"COE ConfigMap for NetScaler Ingress Controller",default:!1}},dependencies:{"nsic.nsoeConfig.required":{oneOf:[{properties:{"nsic.nsoeConfig.required":{const:!1}}},{properties:{"nsic.nsoeConfig.required":{const:!0},"nsic.nsoeConfig.endpoint.server":{type:"string",title:"DNS/IPAddress of the analytics server"},"nsic.nsoeConfig.timeseries.port":{type:"number",title:"Port number of timeseries endpoint of the analytics server.",default:30002,minimum:1,maximum:65535},"nsic.nsoeConfig.distributedTracing.enable":{type:"boolean",title:"Enable Tracing",default:!1},"nsic.nsoeConfig.timeseries.metrics.enable":{type:"boolean",title:"Enable sending metrics from NetScaler ADC to prometheus",default:!0},"nsic.nsoeConfig.timeseries.auditlogs.enable":{type:"boolean",title:"Export auditlog from NetScaler ADC",default:!0},"nsic.nsoeConfig.timeseries.events.enable":{type:"boolean",title:"Export events from NetScaler ADC",default:!0},"nsic.nsoeConfig.transactions.enable":{type:"boolean",title:"Export transactions from NetScaler ADC ",default:!0}},dependencies:{"nsic.nsoeConfig.transactions.enable":{oneOf:[{properties:{"nsic.nsoeConfig.transactions.enable":{const:!1}}},{properties:{"nsic.nsoeConfig.transactions.enable":{const:!0},"nsic.nsoeConfig.transactions.port":{type:"number",title:"Port number of transactional endpoint of analytics server",default:30001,minimum:1,maximum:65535}}}]},"nsic.nsoeConfig.timeseries.metrics.enable":{oneOf:[{properties:{"nsic.nsoeConfig.timeseries.metrics.enable":{const:!1}}},{properties:{"nsic.nsoeConfig.timeseries.metrics.enable":{const:!0},"nsic.nsoeConfig.timeseries.metrics.mode":{type:"string",title:"Mode of metric endpoint.",default:"prometheus"}}}]},"nsic.nsoeConfig.distributedTracing.enable":{oneOf:[{properties:{"nsic.nsoeConfig.distributedTracing.enable":{const:!1}}},{properties:{"nsic.nsoeConfig.distributedTracing.enable":{const:!0},"nsic.nsoeConfig.distributedTracing.samplingrate":{type:"number",title:"OpenTracing sampling rate",default:100,minimum:1,maximum:100}}}]}}}]}}},nsncSettings:{type:"object",title:"Routing Settings for Tier-1 VPX or MPX",required:["nsnc.vtepIP","nsnc.network","nsnc.vxlan.id","nsnc.vxlan.port"],properties:{"nsnc.enabled":{type:"boolean",title:"Deploy NetScaler Node Controller",default:!1}},dependencies:{"nsnc.enabled":{oneOf:[{properties:{"nsnc.enabled":{const:!1},"nsic.nodeWatch":{type:"boolean",title:"Node Watch",default:!1}}},{properties:{"nsnc.enabled":{const:!0},"nsnc.image":{type:"string",title:"NetScaler Node Controller Image",default:"quay.io/citrix/citrix-k8s-node-controller:2.0.0"},"nsnc.pullPolicy":{type:"object",title:"Image Pull Policy",properties:{pullPolicy:{type:"string",default:"IfNotPresent",enum:["Always","IfNotPresent","Never"]}}},"nsnc.vtepIP":{type:"string",title:"NetScaler ADC SNIP",format:"ipv4"},"nsnc.vxlan.id":{type:"number",title:"VxLAN ID",default:2,minimum:2,maximum:16777215},"nsnc.vxlan.port":{type:"number",title:"VxLAN Port",minimum:1,maximum:65434},"nsnc.network":{type:"string",title:"Network"}}}]}}},cpxSettings:{type:"object",title:"Tier-2: NetScaler ADC CPX Settings",properties:{"cpx.enabled":{type:"boolean",title:"Enable CPX",default:!0},"cpx.image":{type:"string",title:"NetScaler ADC CPX Image",default:"quay.io/citrix/citrix-k8s-cpx-ingress:13.0-64.35"},"cpx.pullPolicy":{type:"object",title:"Image Pull Policy",properties:{pullPolicy:{type:"string",default:"IfNotPresent",enum:["Always","IfNotPresent","Never"]}}},"cpx.serviceType.nodePort.enabled":{type:"boolean",default:!0}}},entitySettings:{type:"object",title:"Entity Level Settings for NetScaler ADC CPX",properties:{"cpx.entityPrefix":{type:"string",title:"ADC Entity Prefix",default:"k8s"},"cpx.defaultSSLCertSecret":{type:"string",title:"Default SSL Certificate for CPX"}}},cpxDeploymentSettings:{type:"object",title:"Tier-2 Ingress Controller Settings",properties:{"cpx.serviceType.nodePort.httpPort":{type:"number",title:"Port for nodePort for HTTP",minimum:3e4,maximum:32e3},"cpx.serviceType.nodePort.httpsPort":{type:"number",title:"Port for nodePort for HTTPS",minimum:3e4,maximum:32e3},"cpx.ingressClass":{type:"array",title:"Ingress Classes for Controller in Tier-2",items:{type:"object",properties:{"Ingress Class:":{type:"string"}}}},"cpx.logLevel":{type:"object",title:"Log Level Settings for Ingress Controller in Tier-2",properties:{logLevel:{type:"string",default:"INFO",enum:["DEBUG","INFO","WARN","ERROR","TRACE"]}}}}},cpxnodeSelectorSettings:{type:"object",title:"NetScaler ADC Node Selector Settings for NetScaler ADC CPX",properties:{"cpx.nodeSelector.key":{type:"string",title:"Key"},"cpx.nodeSelector.value":{type:"string",title:"Value"}}},admSettings:{type:"object",title:"NetScaler ADM Settings for NetScaler ADC CPX",properties:{"cpx.ADMSettings.licenseServerIP":{type:"string",title:"License Server IP",format:"ipv4"},"cpx.ADMSettings.licenseServerPort":{type:"number",title:"License Server Port",minimum:1,maximum:65535,default:27e3},"cpx.ADMSettings.ADMIP":{type:"string",title:"ADM IP",format:"ipv4"},"cpx.ADMSettings.ADMFingerPrint":{type:"string",title:"ADM FingerPrint"},"cpx.ADMSettings.loginSecret":{type:"string",title:"Login Secret for ADM"},"cpx.ADMSettings.bandWidthLicense":{type:"boolean",title:"Set Bandwidth for CPX",default:!1},"cpx.ADMSettings.vCPULicense":{type:"boolean",title:"Set Cores for CPX",default:!1}},dependencies:{"cpx.ADMSettings.bandWidthLicense":{oneOf:[{properties:{"cpx.ADMSettings.bandWidthLicense":{const:!1}}},{properties:{"cpx.ADMSettings.bandWidthLicense":{const:!0},"cpx.ADMSettings.bandWidth":{type:"number",title:"Bandwidth",default:1e3},"cpx.ADMSettings.cpxCores":{type:"number",title:"Number of CPU Cores",default:1}}}]},"cpx.ADMSettings.vCPULicense":{oneOf:[{properties:{"cpx.ADMSettings.vCPULicense":{const:!1}}},{properties:{"cpx.ADMSettings.vCPULicense":{const:!0},"cpx.ADMSettings.cpxCores":{type:"number",title:"Number of CPU Cores",default:1}}}]}}},cpxnsicAdvancedSettings:{type:"object",title:"Tier-2 NetScaler Ingress Controller Advanced Settings",properties:{"cpx.nsicSettings.required":{type:"boolean",title:"Use NetScaler Ingress Controller Advanced Settings",default:!1}},dependencies:{"cpx.nsicSettings.required":{oneOf:[{properties:{"cpx.nsicSettings.required":{const:!1}}},{properties:{"cpx.nsicSettings.required":{const:!0},"cpx.nsicSettings.nsicConfig.NS_HTTP2_SERVER_SIDE":{type:"object",title:"Enable HTTP2 in Server Side",properties:{NS_HTTP2_SERVER_SIDE:{type:"string",default:"OFF",enum:["ON","OFF"]}}},"cpx.nsicSettings.nsicConfig.NS_COOKIE_VERSION":{type:"object",title:"Persistence cookie version",properties:{NS_COOKIE_VERSION:{type:"string",default:"0",enum:["0","1"]}}}}}]}}},cpxnsoeConfig:{type:"object",title:"NetScaler Observability Exporter Config for NetScaler ADC CPX",properties:{"cpx.nsoeConfig.required":{type:"boolean",title:"COE ConfigMap for Citrx CPX Ingress Controller",default:!1}},dependencies:{"cpx.nsoeConfig.required":{oneOf:[{properties:{"cpx.nsoeConfig.required":{const:!1}}},{properties:{"cpx.nsoeConfig.required":{const:!0},"cpx.nsoeConfig.endpoint.server":{type:"string",title:"DNS/IPAddress of the analytics server"},"cpx.nsoeConfig.timeseries.port":{type:"number",title:"Port number of timeseries endpoint of the analytics server.",default:30002,minimum:1,maximum:65535},"cpx.nsoeConfig.distributedTracing.enable":{type:"boolean",title:"Enable Tracing",default:!1},"cpx.nsoeConfig.timeseries.metrics.enable":{type:"boolean",title:"Enable sending metrics from NetScaler ADC to prometheus",default:!0},"cpx.nsoeConfig.timeseries.auditlogs.enable":{type:"boolean",title:"Export auditlog from NetScaler ADC",default:!0},"cpx.nsoeConfig.timeseries.events.enable":{type:"boolean",title:"Export events from NetScaler ADC",default:!0},"cpx.nsoeConfig.transactions.enable":{type:"boolean",title:"Export transactions from NetScaler ADC ",default:!0}},dependencies:{"cpx.nsoeConfig.transactions.enable":{oneOf:[{properties:{"cpx.nsoeConfig.transactions.enable":{const:!1}}},{properties:{"cpx.nsoeConfig.transactions.enable":{const:!0},"cpx.nsoeConfig.transactions.port":{type:"number",title:"Port number of transactional endpoint of analytics server",default:30001,minimum:1,maximum:65535}}}]},"cpx.nsoeConfig.timeseries.metrics.enable":{oneOf:[{properties:{"cpx.nsoeConfig.timeseries.metrics.enable":{const:!1}}},{properties:{"cpx.nsoeConfig.timeseries.metrics.enable":{const:!0},"cpx.nsoeConfig.timeseries.metrics.mode":{type:"string",title:"Mode of metric endpoint.",default:"prometheus"}}}]},"cpx.nsoeConfig.distributedTracing.enable":{oneOf:[{properties:{"cpx.nsoeConfig.distributedTracing.enable":{const:!1}}},{properties:{"cpx.nsoeConfig.distributedTracing.enable":{const:!0},"cpx.nsoeConfig.distributedTracing.samplingrate":{type:"number",title:"OpenTracing sampling rate",default:100}}}]}}}]}}},cpxexporterSettings:{type:"object",title:"NetScaler ADC Metrics Exporter Settings for NetScaler ADC CPX",properties:{"cpx.exporter.required":{type:"boolean",title:"Deploy NetScaler ADC Metrics Exporter for CPX"}},dependencies:{"cpx.exporter.required":{oneOf:[{properties:{"cpx.exporter.required":{const:!1}}},{properties:{"cpx.exporter.required":{const:!0},"cpx.exporter.image":{type:"string",title:"NetScaler ADC Metrics Exporter Image",default:"quay.io/citrix/citrix-adc-metrics-exporter:1.4.6"},"cpx.exporter.pullPolicy":{type:"object",title:"Image Pull Policy",properties:{pullPolicy:{type:"string",default:"IfNotPresent",enum:["Always","IfNotPresent","Never"]}}},"cpx.exporter.ports.containerPort":{type:"number",title:"Exporter Container Port",default:8888,minimum:1,maximum:65535}}}]}}},platformSetting:{type:"object",title:"Platform Setting",properties:{"nsic.openshift":{type:"boolean",title:"Openshift",default:!1}}},crdsSettings:{type:"object",title:"NetScaler CRDs Settings",properties:{"nsic.crds.install":{type:"boolean",title:"Install NetScaler CRDs",default:!0}},dependencies:{"nsic.crds.install":{oneOf:[{properties:{"nsic.crds.install":{const:!1}}},{properties:{"nsic.crds.install":{const:!0},"nsic.crds.retainOnDelete":{type:"boolean",title:"Retain NetScaler CRDs on delete",default:!1}}}]}}},nsoeSettings:{type:"object",title:"NetScaler Observability Exporter Settings",properties:{"nsoe.enabled":{type:"boolean",title:"Deploy NetScaler Observability Exporter?",default:!1}},dependencies:{"nsoe.enabled":{oneOf:[{properties:{"nsoe.enabled":{const:!1}}},{properties:{"nsoe.enabled":{const:!0},"nsoe.image":{type:"string",title:"NetScaler Observability Exporter",default:"quay.io/citrix/citrix-observability-exporter:1.2.001"},"nsoe.pullPolicy":{type:"object",title:"Image Pull Policy",properties:{pullPolicy:{type:"string",default:"IfNotPresent",enum:["Always","IfNotPresent","Never"]}}},"nsoe.transaction.nodePort":{type:"number",title:"Transaction NodePort",default:30001,minimum:1,maximum:65535},"nsoe.timeseries.enabled":{type:"boolean",title:"TimeSeries",default:!0},"nsoe.ns_tracing.enabled":{type:"boolean",title:"Tracing",default:!1},"nsoe.elasticsearch.enabled":{type:"boolean",title:"ElasticSearch",default:!1},"nsoe.kafka.enabled":{type:"boolean",title:"Kafka",default:!1}},dependencies:{"nsoe.ns_tracing.enabled":{oneOf:[{properties:{"nsoe.ns_tracing.enabled":{const:!1}}},{properties:{"nsoe.ns_tracing.enabled":{const:!0},"nsoe.ns_tracing.server":{type:"string",title:"Tracing Server",default:"zipkin:9411/api/v1/spans"}}}]},"nsoe.elasticsearch.enabled":{oneOf:[{properties:{"nsoe.elasticsearch.enabled":{const:!1}}},{properties:{"nsoe.elasticsearch.enabled":{const:!0},"nsoe.elasticsearch.server":{type:"string",title:"ElasticSearch Server EndPoint",default:"elasticsearch:9200"}}}]},"nsoe.kafka.enabled":{oneOf:[{properties:{"nsoe.kafka.enabled":{const:!1}}},{properties:{"nsoe.kafka.enabled":{const:!0},"nsoe.kafka.broker":{type:"string",title:"Kafka Broker"},"nsoe.kafka.topic":{type:"string",title:"Kafka Topic",default:"HTTP"}}}]},"nsoe.timeseries.enabled":{oneOf:[{properties:{"nsoe.timeseries.enabled":{const:!1}}},{properties:{"nsoe.timeseries.enabled":{const:!0},"nsoe.timeseries.nodePort":{type:"number",title:"Timeseries NodePort",default:30002,minimum:1,maximum:65535}}}]}}}]}}}}},_={adcSettings:{"nsic.enabled":{"ui:widget":"hidden"},"nsic.nsIP":{"ui:placeholder":"X.X.X.X","ui:autofocus":!0,"ui:description":"NetScaler ADC NSIP/SNIP, SNIP in case of HA (mgmt has to be enabled)"},"nsic.nsPort":{"ui:description":"NetScaler ADC Management Port"},"nsic.nsProtocol":{"ui:description":"Protocol used for NetScaler ADC Management"},"nsic.adcCredentialSecret":{"ui:description":"Create a Kubernetes secret for the credentials of NetScaler ADC MPX or VPX using the following command: <kubectl create secret generic nslogin --from-literal=username='username' --from-literal=password='password'>"}},entity:{"nsic.entityPrefix":{"ui:description":"Resources created on the NetScaler ADC will have this prefix in their name. Only alphanumeric string is valid."},"nsic.defaultSSLCertSecret":{"ui:description":"Kubernetes secret resource name which to be used as default SSL certificate in NetScaler ADC"}},platformSetting:{"ui:description":"Set to true if charts are being deployed in OpenShift environment","nsic.openshift":{"ui:description":"Openshift is set to true if charts are being deployed in OpenShift environment."}},nsicSettings:{"nsic.ipam":{"ui:widget":"hidden"},"nsic.license.accept":{"ui:widget":"hidden"},"nsic.kubernetesURL":{"ui:description":"The kube-apiserver url that NetScaler Ingress Controller uses to register the events. If the value is not specified, CIC uses the internal kube-apiserver IP address."},"nsic.logLevel":{"ui:description":"Log Level for NetScaler Ingress Controller Logs"},"nsic.ingressClass":{"ui:description":"Ingress class ensures that a particular set of ingress resources would be processed by NetScaler Ingress Controller."},"nsic.image":{"ui:description":"NetScaler Ingress Controller image"},"nsic.pullPolicy":{"ui:description":"Image Pull Policy for NetScaler Ingress Controller Image Pull Policy"}},nsicAdvancedSettings:{"nsic.nsicSettings.nsicConfig.NS_HTTP2_SERVER_SIDE":{"ui:description":"Enables HTTP2 for NetScaler ADC service group configurations"},"nsic.nsicSettings.nsicConfig.NS_COOKIE_VERSION":{"ui:description":"Specify the persistence cookie version"}},crdsSettings:{"nsic.crds.retainOnDelete":{"ui:description":"if set to true, then NetScaler CRDs will not be deleted during helm delete"}},cpxnsoeConfig:{"ui:description":"Select below settings to send metrics, events, transactions to NetScaler Observability Exporter from NetScaler ADC","cpx.nsoeConfig.endpoint.server":{"ui:description":"Specify the DNS or IP address of the analytics server (NetScaler Observability Exporter)"},"cpx.nsoeConfig.timeseries.metrics.mode":{"ui:widget":"hidden"}},nsoeConfig:{"ui:description":"Select below settings to send metrics, events, transactions to NetScaler Observability Exporter from NetScaler ADC","nsic.nsoeConfig.endpoint.server":{"ui:description":"Specify the DNS or IP address of the analytics server (NetScaler Observability Exporter)"},"nsic.nsoeConfig.timeseries.metrics.mode":{"ui:widget":"hidden"}},nsoeSettings:{"ui:description":"NetScaler Observability Exporter collects metrics and transactions from NetScaler ADCs and transforms them to suitable formats (such as JSON, AVRO) for supported endpoints. For info <https://github.com/citrix/citrix-observability-exporter>","nsoe.image":{"ui:description":"COE Image"},"nsoe.pullPolicy":{"ui:description":"COE Image pull policy"},"nsoe.timeseries.enabled":{"ui:description":"Set true to enable sending timeseries data to prometheus."},"nsoe.ns_tracing.server":{"ui:description":"The tracing server api endpoint."},"nsoe.transaction.nodePort":{"ui:description":"Specify the port used to expose COE service outside cluster for transaction endpoint."},"nsoe.elasticsearch.server":{"ui:description":"The Elasticsearch server api endpoint. Note: To use ElasticSearch make sure Kafka is disabled"},"nsoe.kafka.broker":{"ui:description":"The kafka broker IP or FQDN details. Note: To use Kafka make sure Elasticsearch is disabled"},"nsoe.kafka.topic":{"ui:description":"The kafka topic details to upload data"},"nsoe.timeseries.nodePort":{"ui:description":"Specify the port used to expose COE service outside cluster for timeseries endpoint."}},nsncSettings:{"ui:description":"Choose anyone. Select Node Watch to automatically configure routes on the NetScaler ADC to point to the pod networks on the nodes. Select CNC to create network between the Kubernetes cluster and ingress device.","nsnc.vxlan.id":{"ui:description":"A unique VXLAN VNID to create a VXLAN overlay between Kubernetes cluster and the ingress devices. Note: Ensure that the VXLAN VNID that you use does not conflict with the Kubernetes cluster or NetScaler ADC VXLAN VNID. You can use the show vxlan command on your NetScaler ADC to view the VXLAN VNID"},"nsnc.vxlan.port":{"ui:description":"The VXLAN port that you want to use for the overlay. Note: Ensure that the VXLAN PORT that you use does not conflict with the Kubernetes cluster or NetScaler ADC VXLAN PORT. You can use the show vxlan command on your NetScaler ADC to view the VXLAN PORT. "},"nsnc.image":{"ui:description":"CNC Image"},"nsnc.pullPolicy":{"ui:description":"CNC image pull policy"},"nsnc.vtepIP":{"ui:description":"The Ingress NetScaler ADC SNIP. This IP address is used to establish an overlay network between the Kubernetes clusters."},"nsnc.network":{"ui:description":"The IP address range (for example, 192.128.1.0/24) that NetScaler node controller uses to configure the VTEP overlay end points on the Kubernetes nodes. Note: Ensure that the subnet that you provide is different from your Kubernetes cluster."},"nsic.nodeWatch":{"ui:description":"When checked, routes on the NetScaler ADC are automatically configured to point to the pod networks on the nodes"}},cpxSettings:{"cpx.enabled":{"ui:widget":"hidden"},"cpx.license.accept":{"ui:widget":"hidden"},"cpx.image":{"ui:description":"CPX Image"},"cpx.pullPolicy":{"ui:description":"CPX Image Pull Policy"},"cpx.serviceType.nodePort.enabled":{"ui:widget":"hidden"}},entitySettings:{"cpx.entityPrefix":{"ui:description":"Resources created on the CPX will have this prefix in their name"},"cpx.defaultSSLCertSecret":{"ui:description":"Kubernetes secret resource name which to be used as default SSL certificate in NetScaler ADC."}},cpxexporterSettings:{"ui:description":"NetScaler metrics exporter scrapes NetScaler ADC stats and exports them via HTTP to Prometheus. For info:<https://github.com/citrix/citrix-adc-metrics-exporter>","cpx.exporter.image":{"ui:description":"NetScaler ADC Metrics Exporter Image"},"cpx.exporter.pullPolicy":{"ui:description":"NetScaler ADC Metrics Exporter image pull policy"},"cpx.exporter.ports.containerPort":{"ui:description":"Specify on which port metrics collected by the exporter should be exposed. Agents like Prometheus will need to scrape this port of the container to collected metrics"}},cpxdeploymentSettings:{"cpx.ingressClass":{"ui:description":"Ingress class ensures that a particular set of ingress resources would be processed by CIC."},"cpx.logLevel":{"ui:description":"Log Level for CIC Logs"},"cpx.serviceType.nodePort.httpPort":{"ui:description":"Specify the HTTP nodeport to be used for NodePort CPX service"},"cpx.serviceType.nodePort.httpsPort":{"ui:description":"Specify the HTTPS nodeport to be used for NodePort CPX service"}},nodeSelectorSettings:{"nsic.nodeSelector.key":{"ui:description":"Node label key to be used for nodeSelector option for CPX-CIC deployment."},"nsic.nodeSelector.value":{"ui:description":"Node label value to be used for nodeSelector option in CPX-CIC deployment."}},cpxnodeSelectorSettings:{"cpx.nodeSelector.key":{"ui:description":"Node label key to be used for nodeSelector option for CPX-CIC deployment."},"cpx.nodeSelector.value":{"ui:description":"Node label value to be used for nodeSelector option in CPX-CIC deployment."}},admSettings:{"cpx.ADMSettings.licenseServerIP":{"ui:description":"NetScaler Application Delivery Management (ADM) IP address to license NetScaler ADC CPX. For more information, see <https://developer-docs.citrix.com/projects/citrix-k8s-ingress-controller/en/latest/licensing/>"},"cpx.ADMSettings.licenseServerPort":{"ui:description":"License Server Port"},"cpx.ADMSettings.ADMIP":{"ui:description":"NetScaler Application Delivery Management (ADM) IP address for generating ServiceGraph"},"cpx.ADMSettings.ADMFingerPrint":{"ui:description":"NetScaler ADM FingerPrint"},"cpx.ADMSettings.loginSecret":{"ui:description":"The secret key to login to the ADM. Use 'kubectl create secret generic admlogin --from-literal=username=<adm-username> --from-literal=password=<adm-password> -n <namespace>'"},"cpx.ADMSettings.bandWidthLicense":{"ui:description":"Select to provide Bandwidth for CPX"},"cpx.ADMSettings.vCPULicense":{"ui:description":"Select to specify cores for CPX"},"cpx.ADMSettings.bandWidth":{"ui:description":"Provide bandwidth value in Mbps"},"cpx.ADMSettings.cpxCores":{"ui:description":"Number of Cores for CPX"}},cpxnsicAdvancedSettings:{"cpx.nsicSettings.nsicConfig.NS_HTTP2_SERVER_SIDE":{"ui:description":"Enables HTTP2 for NetScaler ADC service group configurations"},"cpx.nsicSettings.nsicConfig.NS_COOKIE_VERSION":{"ui:description":"Specify the persistence cookie version"}},exporterSettings:{"ui:description":"NetScaler metrics exporter scrapes NetScaler ADC stats and exports them via HTTP to Prometheus. For info:<https://github.com/citrix/citrix-adc-metrics-exporter>","nsic.exporter.image":{"ui:description":"NetScaler ADC Metrics Exporter Image"},"nsic.exporter.pullPolicy":{"ui:description":"NetScaler ADC Metrics Exporter image pull policy"},"nsic.exporter.ports.containerPort":{"ui:description":"Specify on which port metrics collected by the exporter should be exposed. Agents like Prometheus will need to scrape this port of the container to collected metrics"}}},V={properties:{adcSettings:{type:"object",title:"NetScaler ADC Settings for Tier-1 VPX or MPX",required:["nsic.nsIP","nsic.adcCredentialSecret"],properties:{"nsic.enabled":{type:"boolean",default:!0},"nsic.nsIP":{type:"string",title:"NetScaler ADC Management IP",format:"ipv4"},"nsic.nsPort":{type:"number",title:"Management Port for NetScaler ADC",default:443,maximum:65535,minimum:1},"nsic.nsProtocol":{type:"object",title:"NetScaler ADC Management Protocol",properties:{nsProtocol:{type:"string",default:"HTTPS",enum:["HTTPS","HTTP"]}}},"nsic.adcCredentialSecret":{type:"string",title:"Kubernetes Secret Name"}}},entity:{type:"object",title:"Entity related Settings for Tier-1 VPX or MPX",properties:{"nsic.entityPrefix":{type:"string",title:"NetScaler ADC Entity Prefix",default:"k8s"},"nsic.defaultSSLCertSecret":{type:"string",title:"Default SSL Certificate"}}},nodeSelectorSettings:{type:"object",title:"Node Selector Settings Settings for Tier-1 Ingress",properties:{"nsic.nodeSelector.key":{type:"string",title:"Key"},"nsic.nodeSelector.value":{type:"string",title:"Value"}}},nsicSettings:{type:"object",title:"NetScaler Ingress Controller Settings",properties:{"nsic.image":{type:"string",title:"NetScaler Ingress Controller Image",default:"quay.io/citrix/citrix-k8s-ingress-controller:1.9.20"},"nsic.pullPolicy":{type:"object",title:"Image Pull Policy",properties:{pullPolicy:{type:"string",default:"IfNotPresent",enum:["Always","IfNotPresent","Never"]}}},"nsic.kubernetesURL":{type:"string",title:"Kubernetes API-server URL",format:"url"},"nsic.license.accept":{type:"string",default:"Yes"},"nsic.ingressClass":{type:"array",title:"Ingress Classes for Controller in Tier-1",items:{type:"object",properties:{"Ingress Class:":{type:"string"}}}},"nsic.logLevel":{type:"object",title:"Log Level settings for Tier-1 Ingress Controller",properties:{logLevel:{type:"string",default:"INFO",enum:["DEBUG","INFO","WARN","ERROR","TRACE"]}}},"nsic.ipam":{type:"boolean",default:!0}}},nsicAdvancedSettings:{type:"object",title:"Tier-1 NetScaler Ingress Controller Advanced Settings",properties:{"nsic.nsicSettings.required":{type:"boolean",title:"Use NetScaler Ingress Controller Advanced Settings",default:!1}},dependencies:{"nsic.nsicSettings.required":{oneOf:[{properties:{"nsic.nsicSettings.required":{const:!1}}},{properties:{"nsic.nsicSettings.required":{const:!0},"nsic.nsicSettings.nsicConfig.NS_HTTP2_SERVER_SIDE":{type:"object",title:"Enable HTTP2 in Server Side",properties:{NS_HTTP2_SERVER_SIDE:{type:"string",default:"OFF",enum:["ON","OFF"]}}},"nsic.nsicSettings.nsicConfig.NS_COOKIE_VERSION":{type:"object",title:"Persistence cookie version",properties:{NS_COOKIE_VERSION:{type:"string",default:"0",enum:["0","1"]}}}}}]}}},exporterSettings:{type:"object",title:"NetScaler ADC Metrics Exporter Settings for Tier-1 Ingress",properties:{"nsic.exporter.required":{type:"boolean",title:"Deploy NetScaler ADC Metrics Exporter"}},dependencies:{"nsic.exporter.required":{oneOf:[{properties:{"nsic.exporter.required":{const:!1}}},{properties:{"nsic.exporter.required":{const:!0},"nsic.exporter.image":{type:"string",title:"NetScaler ADC Metrics Exporter Image",default:"quay.io/citrix/citrix-adc-metrics-exporter:1.4.6"},"nsic.exporter.pullPolicy":{type:"object",title:"Image Pull Policy",properties:{pullPolicy:{type:"string",default:"IfNotPresent",enum:["Always","IfNotPresent","Never"]}}},"nsic.exporter.ports.containerPort":{type:"number",title:"Exporter Container Port",default:8888,minimum:1,maximum:65535}}}]}}},nsoeConfig:{type:"object",title:"NetScaler Observability Exporter Config for Tier-1 Ingress",properties:{"nsic.nsoeConfig.required":{type:"boolean",title:"COE ConfigMap for NetScaler Ingress Controller",default:!1}},dependencies:{"nsic.nsoeConfig.required":{oneOf:[{properties:{"nsic.nsoeConfig.required":{const:!1}}},{properties:{"nsic.nsoeConfig.required":{const:!0},"nsic.nsoeConfig.endpoint.server":{type:"string",title:"DNS/IPAddress of the analytics server"},"nsic.nsoeConfig.timeseries.port":{type:"number",title:"Port number of timeseries endpoint of the analytics server.",default:30002,minimum:1,maximum:65535},"nsic.nsoeConfig.distributedTracing.enable":{type:"boolean",title:"Enable Tracing",default:!1},"nsic.nsoeConfig.timeseries.metrics.enable":{type:"boolean",title:"Enable sending metrics from NetScaler ADC to prometheus",default:!0},"nsic.nsoeConfig.timeseries.auditlogs.enable":{type:"boolean",title:"Export auditlog from NetScaler ADC",default:!0},"nsic.nsoeConfig.timeseries.events.enable":{type:"boolean",title:"Export events from NetScaler ADC",default:!0},"nsic.nsoeConfig.transactions.enable":{type:"boolean",title:"Export transactions from NetScaler ADC ",default:!0}},dependencies:{"nsic.nsoeConfig.transactions.enable":{oneOf:[{properties:{"nsic.nsoeConfig.transactions.enable":{const:!1}}},{properties:{"nsic.nsoeConfig.transactions.enable":{const:!0},"nsic.nsoeConfig.transactions.port":{type:"number",title:"Port number of transactional endpoint of analytics server",default:30001,minimum:1,maximum:65535}}}]},"nsic.nsoeConfig.timeseries.metrics.enable":{oneOf:[{properties:{"nsic.nsoeConfig.timeseries.metrics.enable":{const:!1}}},{properties:{"nsic.nsoeConfig.timeseries.metrics.enable":{const:!0},"nsic.nsoeConfig.timeseries.metrics.mode":{type:"string",title:"Mode of metric endpoint.",default:"prometheus"}}}]},"nsic.nsoeConfig.distributedTracing.enable":{oneOf:[{properties:{"nsic.nsoeConfig.distributedTracing.enable":{const:!1}}},{properties:{"nsic.nsoeConfig.distributedTracing.enable":{const:!0},"nsic.nsoeConfig.distributedTracing.samplingrate":{type:"number",title:"OpenTracing sampling rate",default:100,minimum:1,maximum:100}}}]}}}]}}},nsncSettings:{type:"object",title:"Routing Settings for Tier-1 VPX or MPX",required:["nsnc.vtepIP","nsnc.network","nsnc.vxlan.id","nsnc.vxlan.port"],properties:{"nsnc.enabled":{type:"boolean",title:"Deploy NetScaler Node Controller",default:!1}},dependencies:{"nsnc.enabled":{oneOf:[{properties:{"nsnc.enabled":{const:!1},"nsic.nodeWatch":{type:"boolean",title:"Node Watch",default:!1}}},{properties:{"nsnc.enabled":{const:!0},"nsnc.image":{type:"string",title:"NetScaler Node Controller Image",default:"quay.io/citrix/citrix-k8s-node-controller:2.0.0"},"nsnc.pullPolicy":{type:"object",title:"Image Pull Policy",properties:{pullPolicy:{type:"string",default:"IfNotPresent",enum:["Always","IfNotPresent","Never"]}}},"nsnc.vtepIP":{type:"string",title:"NetScaler ADC SNIP",format:"ipv4"},"nsnc.vxlan.id":{type:"number",title:"VxLAN ID",default:2,minimum:2,maximum:16777215},"nsnc.vxlan.port":{type:"number",title:"VxLAN Port",minimum:1,maximum:65434},"nsnc.network":{type:"string",title:"Network"}}}]}}},cpxSettings:{type:"object",title:"Tier-2: NetScaler ADC CPX Settings",properties:{"cpx.enabled":{type:"boolean",title:"Enable CPX",default:!0},"cpx.image":{type:"string",title:"NetScaler ADC CPX Image",default:"quay.io/citrix/citrix-k8s-cpx-ingress:13.0-64.35"},"cpx.pullPolicy":{type:"object",title:"Image Pull Policy",properties:{pullPolicy:{type:"string",default:"IfNotPresent",enum:["Always","IfNotPresent","Never"]}}},"cpx.serviceType.loadBalancer.enabled":{type:"boolean",default:!0}}},entitySettings:{type:"object",title:"Entity Level Settings for NetScaler ADC CPX",properties:{"cpx.entityPrefix":{type:"string",title:"ADC Entity Prefix",default:"k8s"},"cpx.defaultSSLCertSecret":{type:"string",title:"Default SSL Certificate for CPX"}}},cpxDeploymentSettings:{type:"object",title:"Tier-2 Ingress Controller Settings",properties:{"cpx.ingressClass":{type:"array",title:"Ingress Classes for Controller in Tier-2",items:{type:"object",properties:{"Ingress Class:":{type:"string"}}}},"cpx.logLevel":{type:"object",title:"Log Level Settings for Ingress Controller in Tier-2",properties:{logLevel:{type:"string",default:"INFO",enum:["DEBUG","INFO","WARN","ERROR","TRACE"]}}}}},cpxnodeSelectorSettings:{type:"object",title:"NetScaler ADC Node Selector Settings for NetScaler ADC CPX",properties:{"cpx.nodeSelector.key":{type:"string",title:"Key"},"cpx.nodeSelector.value":{type:"string",title:"Value"}}},admSettings:{type:"object",title:"NetScaler ADM Settings for NetScaler ADC CPX",properties:{"cpx.ADMSettings.licenseServerIP":{type:"string",title:"License Server IP",format:"ipv4"},"cpx.ADMSettings.licenseServerPort":{type:"number",title:"License Server Port",minimum:1,maximum:65535,default:27e3},"cpx.ADMSettings.ADMIP":{type:"string",title:"ADM IP",format:"ipv4"},"cpx.ADMSettings.ADMFingerPrint":{type:"string",title:"ADM FingerPrint"},"cpx.ADMSettings.loginSecret":{type:"string",title:"Login Secret for ADM"},"cpx.ADMSettings.bandWidthLicense":{type:"boolean",title:"Set Bandwidth for CPX",default:!1},"cpx.ADMSettings.vCPULicense":{type:"boolean",title:"Set Cores for CPX",default:!1}},dependencies:{"cpx.ADMSettings.bandWidthLicense":{oneOf:[{properties:{"cpx.ADMSettings.bandWidthLicense":{const:!1}}},{properties:{"cpx.ADMSettings.bandWidthLicense":{const:!0},"cpx.ADMSettings.bandWidth":{type:"number",title:"Bandwidth",default:1e3},"cpx.ADMSettings.cpxCores":{type:"number",title:"Number of CPU Cores",default:1}}}]},"cpx.ADMSettings.vCPULicense":{oneOf:[{properties:{"cpx.ADMSettings.vCPULicense":{const:!1}}},{properties:{"cpx.ADMSettings.vCPULicense":{const:!0},"cpx.ADMSettings.cpxCores":{type:"number",title:"Number of CPU Cores",default:1}}}]}}},cpxnsicAdvancedSettings:{type:"object",title:"Tier-2 NetScaler Ingress Controller Advanced Settings",properties:{"cpx.nsicSettings.required":{type:"boolean",title:"Use NetScaler Ingress Controller Advanced Settings",default:!1}},dependencies:{"cpx.nsicSettings.required":{oneOf:[{properties:{"cpx.nsicSettings.required":{const:!1}}},{properties:{"cpx.nsicSettings.required":{const:!0},"cpx.nsicSettings.nsicConfig.NS_HTTP2_SERVER_SIDE":{type:"object",title:"Enable HTTP2 in Server Side",properties:{NS_HTTP2_SERVER_SIDE:{type:"string",default:"OFF",enum:["ON","OFF"]}}},"cpx.nsicSettings.nsicConfig.NS_COOKIE_VERSION":{type:"object",title:"Persistence cookie version",properties:{NS_COOKIE_VERSION:{type:"string",default:"0",enum:["0","1"]}}}}}]}}},cloudSettings:{type:"object",title:"CPX Service Annotations for Cloud",properties:{"cpx.aws":{type:"boolean",title:"Deploying in AWS ?",default:!1}},dependencies:{"cpx.aws":{oneOf:[{properties:{"cpx.aws":{const:!1}}},{properties:{"cpx.aws":{const:!0},"cpx.sslCertManagedByAWS":{type:"boolean",title:"SSL Cert managed by AWS",default:!1},"cpx.serviceAnnotations.aws.sslCert":{type:"string",title:"ARN of the certificate to use for TLS/SSL"},"cpx.serviceAnnotations.aws.backendProtocol":{type:"string",title:"Protocol",default:"http"},"cpx.serviceAnnotations.aws.negotiationPolicy":{type:"string",title:"Predefined AWS SSL policy with HTTPS or SSL listeners for your Services on AWS"},"cpx.serviceAnnotations.aws.proxyProtocol":{type:"boolean",title:"Enable proxy protocol support",default:!1},"cpx.serviceAnnotations.aws.resourcesTags":{type:"string",title:"Tags for ELB"},"cpx.serviceAnnotations.aws.sslPorts":{type:"string",title:"AWS LB SSL Ports",default:"https"}}}]}}},cpxnsoeConfig:{type:"object",title:"NetScaler Observability Exporter Config for NetScaler ADC CPX",properties:{"cpx.nsoeConfig.required":{type:"boolean",title:"COE ConfigMap for Citrx CPX Ingress Controller",default:!1}},dependencies:{"cpx.nsoeConfig.required":{oneOf:[{properties:{"cpx.nsoeConfig.required":{const:!1}}},{properties:{"cpx.nsoeConfig.required":{const:!0},"cpx.nsoeConfig.endpoint.server":{type:"string",title:"DNS/IPAddress of the analytics server"},"cpx.nsoeConfig.timeseries.port":{type:"number",title:"Port number of timeseries endpoint of the analytics server.",default:30002,minimum:1,maximum:65535},"cpx.nsoeConfig.distributedTracing.enable":{type:"boolean",title:"Enable Tracing",default:!1},"cpx.nsoeConfig.timeseries.metrics.enable":{type:"boolean",title:"Enable sending metrics from NetScaler ADC to prometheus",default:!0},"cpx.nsoeConfig.timeseries.auditlogs.enable":{type:"boolean",title:"Export auditlog from NetScaler ADC",default:!0},"cpx.nsoeConfig.timeseries.events.enable":{type:"boolean",title:"Export events from NetScaler ADC",default:!0},"cpx.nsoeConfig.transactions.enable":{type:"boolean",title:"Export transactions from NetScaler ADC ",default:!0}},dependencies:{"cpx.nsoeConfig.transactions.enable":{oneOf:[{properties:{"cpx.nsoeConfig.transactions.enable":{const:!1}}},{properties:{"cpx.nsoeConfig.transactions.enable":{const:!0},"cpx.nsoeConfig.transactions.port":{type:"number",title:"Port number of transactional endpoint of analytics server",default:30001,minimum:1,maximum:65535}}}]},"cpx.nsoeConfig.timeseries.metrics.enable":{oneOf:[{properties:{"cpx.nsoeConfig.timeseries.metrics.enable":{const:!1}}},{properties:{"cpx.nsoeConfig.timeseries.metrics.enable":{const:!0},"cpx.nsoeConfig.timeseries.metrics.mode":{type:"string",title:"Mode of metric endpoint.",default:"prometheus"}}}]},"cpx.nsoeConfig.distributedTracing.enable":{oneOf:[{properties:{"cpx.nsoeConfig.distributedTracing.enable":{const:!1}}},{properties:{"cpx.nsoeConfig.distributedTracing.enable":{const:!0},"cpx.nsoeConfig.distributedTracing.samplingrate":{type:"number",title:"OpenTracing sampling rate",default:100}}}]}}}]}}},cpxexporterSettings:{type:"object",title:"NetScaler ADC Metrics Exporter Settings for NetScaler ADC CPX",properties:{"cpx.exporter.required":{type:"boolean",title:"Deploy NetScaler ADC Metrics Exporter for CPX"}},dependencies:{"cpx.exporter.required":{oneOf:[{properties:{"cpx.exporter.required":{const:!1}}},{properties:{"cpx.exporter.required":{const:!0},"cpx.exporter.image":{type:"string",title:"NetScaler ADC Metrics Exporter Image",default:"quay.io/citrix/citrix-adc-metrics-exporter:1.4.6"},"cpx.exporter.pullPolicy":{type:"object",title:"Image Pull Policy",properties:{pullPolicy:{type:"string",default:"IfNotPresent",enum:["Always","IfNotPresent","Never"]}}},"cpx.exporter.ports.containerPort":{type:"number",title:"Exporter Container Port",default:8888,minimum:1,maximum:65535}}}]}}},ipamSettings:{type:"object",title:"IPAM Settings",required:["ipam.vipRange"],properties:{"ipam.enabled":{type:"boolean",default:!0},"ipam.image":{type:"string",title:"NetScaler IPAM Controller Image",default:"quay.io/citrix/citrix-ipam-controller:0.0.1"},"ipam.pullPolicy":{type:"object",title:"Image Pull Policy",properties:{pullPolicy:{type:"string",default:"IfNotPresent",enum:["Always","IfNotPresent","Never"]}}},"ipam.vipRange":{type:"string",title:"VIP Range"}}},platformSetting:{type:"object",title:"Platform Setting",properties:{"nsic.openshift":{type:"boolean",title:"Openshift",default:!1}}},crdsSettings:{type:"object",title:"NetScaler CRDs Settings",properties:{"nsic.crds.install":{type:"boolean",title:"Install NetScaler CRDs",default:!0}},dependencies:{"nsic.crds.install":{oneOf:[{properties:{"nsic.crds.install":{const:!1}}},{properties:{"nsic.crds.install":{const:!0},"nsic.crds.retainOnDelete":{type:"boolean",title:"Retain NetScaler CRDs on delete",default:!1}}}]}}},nsoeSettings:{type:"object",title:"NetScaler Observability Exporter Settings",properties:{"nsoe.enabled":{type:"boolean",title:"Deploy NetScaler Observability Exporter?",default:!1}},dependencies:{"nsoe.enabled":{oneOf:[{properties:{"nsoe.enabled":{const:!1}}},{properties:{"nsoe.enabled":{const:!0},"nsoe.image":{type:"string",title:"NetScaler Observability Exporter",default:"quay.io/citrix/citrix-observability-exporter:1.2.001"},"nsoe.pullPolicy":{type:"object",title:"Image Pull Policy",properties:{pullPolicy:{type:"string",default:"IfNotPresent",enum:["Always","IfNotPresent","Never"]}}},"nsoe.transaction.nodePort":{type:"number",title:"Transaction NodePort",default:30001,minimum:1,maximum:65535},"nsoe.timeseries.enabled":{type:"boolean",title:"TimeSeries",default:!0},"nsoe.ns_tracing.enabled":{type:"boolean",title:"Tracing",default:!1},"nsoe.elasticsearch.enabled":{type:"boolean",title:"ElasticSearch",default:!1},"nsoe.kafka.enabled":{type:"boolean",title:"Kafka",default:!1}},dependencies:{"nsoe.ns_tracing.enabled":{oneOf:[{properties:{"nsoe.ns_tracing.enabled":{const:!1}}},{properties:{"nsoe.ns_tracing.enabled":{const:!0},"nsoe.ns_tracing.server":{type:"string",title:"Tracing Server",default:"zipkin:9411/api/v1/spans"}}}]},"nsoe.elasticsearch.enabled":{oneOf:[{properties:{"nsoe.elasticsearch.enabled":{const:!1}}},{properties:{"nsoe.elasticsearch.enabled":{const:!0},"nsoe.elasticsearch.server":{type:"string",title:"ElasticSearch Server EndPoint",default:"elasticsearch:9200"}}}]},"nsoe.kafka.enabled":{oneOf:[{properties:{"nsoe.kafka.enabled":{const:!1}}},{properties:{"nsoe.kafka.enabled":{const:!0},"nsoe.kafka.broker":{type:"string",title:"Kafka Broker"},"nsoe.kafka.topic":{type:"string",title:"Kafka Topic",default:"HTTP"}}}]},"nsoe.timeseries.enabled":{oneOf:[{properties:{"nsoe.timeseries.enabled":{const:!1}}},{properties:{"nsoe.timeseries.enabled":{const:!0},"nsoe.timeseries.nodePort":{type:"number",title:"Timeseries NodePort",default:30002,minimum:1,maximum:65535}}}]}}}]}}}}},j={adcSettings:{"nsic.enabled":{"ui:widget":"hidden"},"nsic.nsIP":{"ui:placeholder":"X.X.X.X","ui:autofocus":!0,"ui:description":"NetScaler ADC NSIP/SNIP, SNIP in case of HA (mgmt has to be enabled)"},"nsic.nsPort":{"ui:description":"NetScaler ADC Management Port"},"nsic.nsProtocol":{"ui:description":"Protocol used for NetScaler ADC Management"},"nsic.adcCredentialSecret":{"ui:description":"Create a Kubernetes secret for the credentials of NetScaler ADC MPX or VPX using the following command: <kubectl create secret generic nslogin --from-literal=username='username' --from-literal=password='password'>"}},entity:{"nsic.entityPrefix":{"ui:description":"Resources created on the NetScaler ADC will have this prefix in their name. Only alphanumeric string is valid."},"nsic.defaultSSLCertSecret":{"ui:description":"Kubernetes secret resource name which to be used as default SSL certificate in NetScaler ADC"}},platformSetting:{"ui:description":"Set to true if charts are being deployed in OpenShift environment","nsic.openshift":{"ui:description":"Openshift is set to true if charts are being deployed in OpenShift environment."}},nsicSettings:{"nsic.ipam":{"ui:widget":"hidden"},"nsic.license.accept":{"ui:widget":"hidden"},"nsic.kubernetesURL":{"ui:description":"The kube-apiserver url that NetScaler Ingress Controller uses to register the events. If the value is not specified, CIC uses the internal kube-apiserver IP address."},"nsic.logLevel":{"ui:description":"Log Level for NetScaler Ingress Controller Logs"},"nsic.ingressClass":{"ui:description":"Ingress class ensures that a particular set of ingress resources would be processed by NetScaler Ingress Controller."},"nsic.image":{"ui:description":"NetScaler Ingress Controller image"},"nsic.pullPolicy":{"ui:description":"Image Pull Policy for NetScaler Ingress Controller Image Pull Policy"}},nsicAdvancedSettings:{"nsic.nsicSettings.nsicConfig.NS_HTTP2_SERVER_SIDE":{"ui:description":"Enables HTTP2 for NetScaler ADC service group configurations"},"nsic.nsicSettings.nsicConfig.NS_COOKIE_VERSION":{"ui:description":"Specify the persistence cookie version"}},crdsSettings:{"nsic.crds.retainOnDelete":{"ui:description":"if set to true, then NetScaler CRDs will not be deleted during helm delete"}},nsoeConfig:{"ui:description":"Select below settings to send metrics, events, transactions to NetScaler Observability Exporter from NetScaler ADC","nsic.nsoeConfig.endpoint.server":{"ui:description":"Specify the DNS or IP address of the analytics server (NetScaler Observability Exporter)"},"nsic.nsoeConfig.timeseries.metrics.mode":{"ui:widget":"hidden"}},cpxnsoeConfig:{"ui:description":"Select below settings to send metrics, events, transactions to NetScaler Observability Exporter from NetScaler ADC","cpx.nsoeConfig.endpoint.server":{"ui:description":"Specify the DNS or IP address of the analytics server (NetScaler Observability Exporter)"},"cpx.nsoeConfig.timeseries.metrics.mode":{"ui:widget":"hidden"}},nsoeSettings:{"ui:description":"NetScaler Observability Exporter collects metrics and transactions from NetScaler ADCs and transforms them to suitable formats (such as JSON, AVRO) for supported endpoints. For info <https://github.com/citrix/citrix-observability-exporter>","nsoe.image":{"ui:description":"COE Image"},"nsoe.pullPolicy":{"ui:description":"COE Image pull policy"},"nsoe.timeseries.enabled":{"ui:description":"Set true to enable sending timeseries data to prometheus."},"nsoe.ns_tracing.server":{"ui:description":"The tracing server api endpoint."},"nsoe.transaction.nodePort":{"ui:description":"Specify the port used to expose COE service outside cluster for transaction endpoint."},"nsoe.elasticsearch.server":{"ui:description":"The Elasticsearch server api endpoint. Note: To use ElasticSearch make sure Kafka is disabled"},"nsoe.kafka.broker":{"ui:description":"The kafka broker IP or FQDN details. Note: To use Kafka make sure Elasticsearch is disabled"},"nsoe.kafka.topic":{"ui:description":"The kafka topic details to upload data"},"nsoe.timeseries.nodePort":{"ui:description":"Specify the port used to expose COE service outside cluster for timeseries endpoint."}},nsncSettings:{"ui:description":"Choose anyone. Select Node Watch to automatically configure routes on the NetScaler ADC to point to the pod networks on the nodes. Select CNC to create network between the Kubernetes cluster and ingress device.","nsnc.vxlan.id":{"ui:description":"A unique VXLAN VNID to create a VXLAN overlay between Kubernetes cluster and the ingress devices. Note: Ensure that the VXLAN VNID that you use does not conflict with the Kubernetes cluster or NetScaler ADC VXLAN VNID. You can use the show vxlan command on your NetScaler ADC to view the VXLAN VNID"},"nsnc.vxlan.port":{"ui:description":"The VXLAN port that you want to use for the overlay. Note: Ensure that the VXLAN PORT that you use does not conflict with the Kubernetes cluster or NetScaler ADC VXLAN PORT. You can use the show vxlan command on your NetScaler ADC to view the VXLAN PORT. "},"nsnc.image":{"ui:description":"CNC Image"},"nsnc.pullPolicy":{"ui:description":"CNC image pull policy"},"nsnc.vtepIP":{"ui:description":"The Ingress NetScaler ADC SNIP. This IP address is used to establish an overlay network between the Kubernetes clusters."},"nsnc.network":{"ui:description":"The IP address range (for example, 192.128.1.0/24) that NetScaler node controller uses to configure the VTEP overlay end points on the Kubernetes nodes. Note: Ensure that the subnet that you provide is different from your Kubernetes cluster."},"nsic.nodeWatch":{"ui:description":"When checked, routes on the NetScaler ADC are automatically configured to point to the pod networks on the nodes"}},cpxSettings:{"cpx.enabled":{"ui:widget":"hidden"},"cpx.license.accept":{"ui:widget":"hidden"},"cpx.entityPrefix":{"ui:description":"Resources created on the CPX will have this prefix in their name"},"cpx.defaultSSLCertSecret":{"ui:description":"Kubernetes secret resource name which to be used as default SSL certificate in NetScaler ADC."},"cpx.image":{"ui:description":"CPX Image"},"cpx.pullPolicy":{"ui:description":"CPX Image Pull Policy"},"cpx.serviceType.loadBalancer.enabled":{"ui:widget":"hidden"}},cpxexporterSettings:{"ui:description":"NetScaler metrics exporter scrapes NetScaler ADC stats and exports them via HTTP to Prometheus. For info:<https://github.com/citrix/citrix-adc-metrics-exporter>","cpx.exporter.image":{"ui:description":"NetScaler ADC Metrics Exporter Image"},"cpx.exporter.pullPolicy":{"ui:description":"NetScaler ADC Metrics Exporter image pull policy"},"cpx.exporter.ports.containerPort":{"ui:description":"Specify on which port metrics collected by the exporter should be exposed. Agents like Prometheus will need to scrape this port of the container to collected metrics"}},cpxdeploymentSettings:{"cpx.ingressClass":{"ui:description":"Ingress class ensures that a particular set of ingress resources would be processed by CIC."},"cpx.logLevel":{"ui:description":"Log Level for CIC Logs"}},nodeSelectorSettings:{"nsic.nodeSelector.key":{"ui:description":"Node label key to be used for nodeSelector option for CPX-CIC deployment."},"nsic.nodeSelector.value":{"ui:description":"Node label value to be used for nodeSelector option in CPX-CIC deployment."}},cpxnodeSelectorSettings:{"cpx.nodeSelector.key":{"ui:description":"Node label key to be used for nodeSelector option for CPX-CIC deployment."},"cpx.nodeSelector.value":{"ui:description":"Node label value to be used for nodeSelector option in CPX-CIC deployment."}},admSettings:{"cpx.ADMSettings.licenseServerIP":{"ui:description":"NetScaler Application Delivery Management (ADM) IP address to license NetScaler ADC CPX. For more information, see <https://developer-docs.citrix.com/projects/citrix-k8s-ingress-controller/en/latest/licensing/>"},"cpx.ADMSettings.licenseServerPort":{"ui:description":"License Server Port"},"cpx.ADMSettings.ADMIP":{"ui:description":"NetScaler Application Delivery Management (ADM) IP address for generating ServiceGraph"},"cpx.ADMSettings.ADMFingerPrint":{"ui:description":"NetScaler ADM FingerPrint"},"cpx.ADMSettings.loginSecret":{"ui:description":"The secret key to login to the ADM. Use 'kubectl create secret generic admlogin --from-literal=username=<adm-username> --from-literal=password=<adm-password> -n <namespace>'"},"cpx.ADMSettings.bandWidthLicense":{"ui:description":"Select to provide Bandwidth for CPX"},"cpx.ADMSettings.vCPULicense":{"ui:description":"Select to specify cores for CPX"},"cpx.ADMSettings.bandWidth":{"ui:description":"Provide bandwidth value in Mbps"},"cpx.ADMSettings.cpxCores":{"ui:description":"Number of Cores for CPX"}},cpxnsicAdvancedSettings:{"cpx.nsicSettings.nsicConfig.NS_HTTP2_SERVER_SIDE":{"ui:description":"Enables HTTP2 for NetScaler ADC service group configurations"},"cpx.nsicSettings.nsicConfig.NS_COOKIE_VERSION":{"ui:description":"Specify the persistence cookie version"}},exporterSettings:{"ui:description":"NetScaler metrics exporter scrapes NetScaler ADC stats and exports them via HTTP to Prometheus. For info:<https://github.com/citrix/citrix-adc-metrics-exporter>","nsic.exporter.image":{"ui:description":"NetScaler ADC Metrics Exporter Image"},"nsic.exporter.pullPolicy":{"ui:description":"NetScaler ADC Metrics Exporter image pull policy"},"nsic.exporter.ports.containerPort":{"ui:description":"Specify on which port metrics collected by the exporter should be exposed. Agents like Prometheus will need to scrape this port of the container to collected metrics"}},ipamSettings:{"ipam.enabled":{"ui:widget":"hidden"},"ipam.image":{"ui:description":"IPAM Image"},"ipam.pullPolicy":{"ui:description":"IPAM image pull policy"},"ipam.vipRange":{"ui:description":"This variable allows you to define the IP address range. You can either define IP address range or an IP address range associated with a unique name. NetScaler IPAM controller assigns the IP address from this IP address range to the service of type LoadBalancer. Please provide comma separated values if you want to use mutiple IP Ranges."}},entitySettings:{"cpx.entityPrefix":{"ui:description":"Resources created on the CPX will have this prefix in their name"},"cpx.defaultSSLCertSecret":{"ui:description":"Kubernetes secret resource name which to be used as default SSL certificate in NetScaler ADC."}},cloudSettings:{"cpx.serviceAnnotations.awsLB.sslCert":{"ui:description":"Specify the ARN of the certificate to use for TLS/SSL support on a cluster running on AWS."},"cpx.serviceAnnotations.awsLB.backendProtocol":{"ui:description":"Specify which protocol the Pod uses on a cluster running on AWS."},"cpx.serviceAnnotations.awsLB.negotiationPolicy":{"ui:description":"Name of the any Predefined AWS SSL policy with HTTPS or SSL listeners for your Services on AWS."},"cpx.serviceAnnotations.awsLB.proxyProtocol":{"ui:description":"Set this parameter to enable PROXY protocol support for clusters running on AWS"},"cpx.serviceAnnotations.awsLB.resourcesTags":{"ui:description":"A comma-separated list of key-value pairs which will be recorded as additional tags in the ELB on AWS."},"cpx.serviceAnnotations.awsLB.sslPorts":{"ui:description":"Specify which ports exposed by Pods would use the SSL certificate on a cluster running on AWS."}}},q={properties:{ipamSettings:{type:"object",title:"IPAM Settings",required:["ipam.vipRange"],properties:{"ipam.enabled":{type:"boolean",title:"ipam",default:!0},"ipam.image":{type:"string",title:"NetScaler IPAM Controller Image",default:"quay.io/citrix/citrix-ipam-controller:0.0.1"},"ipam.pullPolicy":{type:"object",title:"Image Pull Policy",properties:{pullPolicy:{type:"string",default:"IfNotPresent",enum:["Always","IfNotPresent","Never"]}}},"ipam.vipRange":{type:"string",title:"VIP Range"}}}}},K={ipamSettings:{"ipam.enabled":{"ui:widget":"hidden"},"ipam.image":{"ui:description":"IPAM Image"},"ipam.pullPolicy":{"ui:description":"IPAM image pull policy"},"ipam.vipRange":{"ui:description":"This variable allows you to define the IP address range. You can either define IP address range or an IP address range associated with a unique name. NetScaler IPAM controller assigns the IP address from this IP address range to the service of type LoadBalancer. Please provide comma separated values if you want to use mutiple IP Ranges. To know more how to set VIP Range refer <https://developer-docs.citrix.com/projects/citrix-k8s-ingress-controller/en/latest/network/type_loadbalancer>"}}},H={properties:{nsncSettings:{type:"object",title:"NetScaler Node Controller Settings",required:["nsnc.nsIP","nsnc.vtepIP","nsnc.adcCredentialSecret","nsnc.network","nsnc.vxlan.id","nsnc.vxlan.port"],properties:{"nsnc.enabled":{type:"boolean",title:"nsnc enable",default:!0},"nsnc.image":{type:"string",title:"NetScaler Node Controller Image",default:"quay.io/citrix/citrix-k8s-node-controller:2.0.0"},"nsnc.pullPolicy":{type:"object",title:"Image Pull Policy",properties:{pullPolicy:{type:"string",default:"IfNotPresent",enum:["Always","IfNotPresent","Never"]}}},"nsnc.license.accept":{type:"string",title:"Accept License",default:"Yes"},"nsnc.nsIP":{type:"string",title:"NetScaler ADC IP"},"nsnc.vtepIP":{type:"string",title:"NetScaler ADC SNIP",format:"ipv4"},"nsnc.adcCredentialSecret":{type:"string",title:"Secret Name"},"nsnc.vxlan.id":{type:"number",title:"VxLAN ID",default:2,minimum:2,maximum:16777215},"nsnc.vxlan.port":{type:"number",title:"VxLAN Port",minimum:1,maximum:65434},"nsnc.network":{type:"string",title:"Network"}}}}},G={nsncSettings:{"ui:description":"NetScaler Node Controller creates network between the Kubernetes cluster and ingress device. For info:  https://github.com/citrix/citrix-k8s-node-controller","nsnc.enabled":{"ui:widget":"hidden"},"nsnc.vxlan.id":{"ui:description":"A unique VXLAN VNID to create a VXLAN overlay between Kubernetes cluster and the ingress devices. Note: Ensure that the VXLAN VNID that you use does not conflict with the Kubernetes cluster or NetScaler ADC VXLAN VNID. You can use the show vxlan command on your NetScaler ADC to view the VXLAN VNID"},"nsnc.vxlan.port":{"ui:description":"The VXLAN port that you want to use for the overlay. Note: Ensure that the VXLAN PORT that you use does not conflict with the Kubernetes cluster or NetScaler ADC VXLAN PORT. You can use the show vxlan command on your NetScaler ADC to view the VXLAN PORT. "},"nsnc.image":{"ui:description":"CNC Image"},"nsnc.pullPolicy":{"ui:description":"CNC image pull policy"},"nsnc.license.accept":{"ui:widget":"hidden"},"nsnc.vtepIP":{"ui:description":"The Ingress NetScaler ADC SNIP. This IP address is used to establish an overlay network between the Kubernetes clusters."},"nsnc.network":{"ui:description":"The IP address range (for example, 192.128.1.0/24) that NetScaler node controller uses to configure the VTEP overlay end points on the Kubernetes nodes. Note: Ensure that the subnet that you provide is different from your Kubernetes cluster."},"nsnc.nsIP":{"ui:description":"The IP address of the NetScaler ADC device VPX or MPX"},"nsnc.adcCredentialSecret":{"ui:description":"Create a Kubernetes secret for the credentials of NetScaler ADC MPX or VPX using the following command: <kubectl create secret generic nslogin --from-literal=username='username' --from-literal=password='password'>"}}},F={properties:{nsoeSettings:{type:"object",title:"NetScaler Observability Exporter Settings",properties:{"nsoe.enabled":{type:"boolean",title:"NetScaler Observability Exporter Required",default:!0},"nsoe.image":{type:"string",title:"NetScaler Observability Exporter",default:"quay.io/citrix/citrix-observability-exporter:1.2.001"},"nsoe.pullPolicy":{type:"object",title:"Image Pull Policy",properties:{pullPolicy:{type:"string",default:"IfNotPresent",enum:["Always","IfNotPresent","Never"]}}},"nsoe.transaction.nodePort":{type:"number",title:"Transaction NodePort",default:30001,min:3e4,max:32e3},"nsoe.timeseries.enabled":{type:"boolean",title:"Enable TimeSeries",default:!0},"nsoe.ns_tracing.enabled":{type:"boolean",title:"Enable Tracing",default:!1},"nsoe.elasticsearch.enabled":{type:"boolean",title:"Enable ElasticSearch",default:!1},"nsoe.kafka.enabled":{type:"boolean",title:"Kafka",default:!1}},dependencies:{"nsoe.timeseries.enabled":{oneOf:[{properties:{"nsoe.timeseries.enabled":{const:!1}}},{properties:{"nsoe.timeseries.enabled":{const:!0},"nsoe.timeseries.nodePort":{type:"number",title:"Timeseries NodePort",default:30002,minimum:3e4,maximum:32e3}}}]},"nsoe.ns_tracing.enabled":{oneOf:[{properties:{"nsoe.ns_tracing.enabled":{const:!1}}},{properties:{"nsoe.ns_tracing.enabled":{const:!0},"nsoe.ns_tracing.server":{type:"string",title:"Tracing Server",default:"zipkin:9411/api/v1/spans"}}}]},"nsoe.elasticsearch.enabled":{oneOf:[{properties:{"nsoe.elasticsearch.enabled":{const:!1}}},{properties:{"nsoe.elasticsearch.enabled":{const:!0},"nsoe.elasticsearch.server":{type:"string",title:"ElasticSearch Server EndPoint",default:"elasticsearch:9200"}}}]},"nsoe.kafka.enabled":{oneOf:[{properties:{"nsoe.kafka.enabled":{const:!1}}},{properties:{"nsoe.kafka.enabled":{const:!0},"nsoe.kafka.broker":{type:"string",title:"Kafka Broker"},"nsoe.kafka.topic":{type:"string",title:"Kafka Topic",default:"HTTP"}}}]}}}}},W={nsoeSettings:{"ui:description":"NetScaler Observability Exporter collects metrics and transactions from NetScaler ADCs and transforms them to suitable formats (such as JSON, AVRO) for supported endpoints. For info <https://github.com/citrix/citrix-observability-exporter>","nsoe.enabled":{"ui:widget":"hidden"},"nsoe.image":{"ui:description":"COE Image"},"nsoe.pullPolicy":{"ui:description":"COE Image pull policy"},"nsoe.timeseries.enabled":{"ui:description":"Set true to enable sending timeseries data to prometheus."},"nsoe.ns_tracing.server":{"ui:description":"The tracing server api endpoint."},"nsoe.transaction.nodePort":{"ui:description":"Specify the port used to expose COE service outside cluster for transaction endpoint."},"nsoe.elasticsearch.server":{"ui:description":"The Elasticsearch server api endpoint. Note: To use ElasticSearch make sure Kafka is disabled"},"nsoe.kafka.broker":{"ui:description":"The kafka broker IP or FQDN details. Note: To use Kafka make sure Elasticsearch is disabled"},"nsoe.kafka.topic":{"ui:description":"The kafka topic details to upload data"},"nsoe.timeseries.nodePort":{"ui:description":"Specify the port used to expose COE service outside cluster for timeseries endpoint."}}},U={properties:{adcSettings:{type:"object",title:"NetScaler ADC Settings",required:["nsic.nsIP","nsic.adcCredentialSecret"],properties:{"nsic.enabled":{type:"boolean",default:!0},"nsic.nsIP":{type:"string",title:"NetScaler ADC Management IP",format:"ipv4"},"nsic.nsPort":{type:"number",title:"Management Port for NetScaler ADC",default:443,maximum:65535,minimum:1},"nsic.nsProtocol":{type:"object",title:"NetScaler ADC Management Protocol",properties:{nsProtocol:{type:"string",default:"HTTPS",enum:["HTTPS","HTTP"]}}},"nsic.adcCredentialSecret":{type:"string",title:"Kubernetes Secret Name"}}},entity:{type:"object",title:"Entity related",properties:{"nsic.entityPrefix":{type:"string",title:"NetScaler ADC Entity Prefix",default:"k8s"},"nsic.defaultSSLCertSecret":{type:"string",title:"Default SSL Certificate"}}},platformSetting:{type:"object",title:"Platform Setting",properties:{"nsic.openshift":{type:"boolean",title:"Openshift",default:!1}}},nsicSettings:{type:"object",title:"NetScaler Ingress Controller Settings",properties:{"nsic.image":{type:"string",title:"NetScaler Ingress Controller Image",default:"quay.io/citrix/citrix-k8s-ingress-controller:1.9.20"},"nsic.pullPolicy":{type:"object",title:"Image Pull Policy",properties:{pullPolicy:{type:"string",default:"IfNotPresent",enum:["Always","IfNotPresent","Never"]}}},"nsic.kubernetesURL":{type:"string",title:"Kubernetes API-server URL",format:"url"},"nsic.license.accept":{type:"string",default:"Yes"},"nsic.ingressClass":{type:"array",title:"Ingress Classes for Controller",items:{type:"object",properties:{"Ingress Class:":{type:"string"}}}},"nsic.logLevel":{type:"object",title:"Ingress Controller Log Level",properties:{logLevel:{type:"string",default:"INFO",enum:["DEBUG","INFO","WARN","ERROR","TRACE"]}}},"nsic.ipam":{type:"boolean",default:!0}}},nsicAdvancedSettings:{type:"object",title:"NetScaler Ingress Controller Advanced Settings",properties:{"nsic.nsicSettings.required":{type:"boolean",title:"Use NetScaler Ingress Controller Advanced Settings",default:!1}},dependencies:{"nsic.nsicSettings.required":{oneOf:[{properties:{"nsic.nsicSettings.required":{const:!1}}},{properties:{"nsic.nsicSettings.required":{const:!0},"nsic.nsicSettings.nsicConfig.NS_HTTP2_SERVER_SIDE":{type:"object",title:"Enable HTTP2 in Server Side",properties:{NS_HTTP2_SERVER_SIDE:{type:"string",default:"OFF",enum:["ON","OFF"]}}},"nsic.nsicSettings.nsicConfig.NS_COOKIE_VERSION":{type:"object",title:"Persistence cookie version",properties:{NS_COOKIE_VERSION:{type:"string",default:"0",enum:["0","1"]}}}}}]}}},nodeSelectorSettings:{type:"object",title:"Node Selector Settings",properties:{"nsic.nodeSelector.key":{type:"string",title:"Key"},"nsic.nodeSelector.value":{type:"string",title:"Value"}}},crdsSettings:{type:"object",title:"NetScaler CRDs Settings",properties:{"nsic.crds.install":{type:"boolean",title:"Install NetScaler CRDs",default:!0}},dependencies:{"nsic.crds.install":{oneOf:[{properties:{"nsic.crds.install":{const:!1}}},{properties:{"nsic.crds.install":{const:!0},"nsic.crds.retainOnDelete":{type:"boolean",title:"Retain NetScaler CRDs on delete",default:!1}}}]}}},ipamSettings:{type:"object",title:"IPAM Settings",required:["ipam.vipRange"],properties:{"ipam.enabled":{type:"boolean",default:!0},"ipam.image":{type:"string",title:"NetScaler IPAM Controller Image",default:"quay.io/citrix/citrix-ipam-controller:0.0.1"},"ipam.pullPolicy":{type:"object",title:"Image Pull Policy",properties:{pullPolicy:{type:"string",default:"IfNotPresent",enum:["Always","IfNotPresent","Never"]}}},"ipam.vipRange":{type:"string",title:"VIP Range"}}},nsncSettings:{type:"object",title:"Routing Settings",required:["nsnc.vtepIP","nsnc.network","nsnc.vxlan.id","nsnc.vxlan.port"],properties:{"nsnc.enabled":{type:"boolean",title:"Deploy NetScaler Node Controller",default:!1}},dependencies:{"nsnc.enabled":{oneOf:[{properties:{"nsnc.enabled":{const:!1},"nsic.nodeWatch":{type:"boolean",title:"Node Watch",default:!1}}},{properties:{"nsnc.enabled":{const:!0},"nsnc.image":{type:"string",title:"NetScaler Node Controller Image",default:"quay.io/citrix/citrix-k8s-node-controller:2.0.0"},"nsnc.pullPolicy":{type:"object",title:"Image Pull Policy",properties:{pullPolicy:{type:"string",default:"IfNotPresent",enum:["Always","IfNotPresent","Never"]}}},"nsnc.vtepIP":{type:"string",title:"NetScaler ADC SNIP",format:"ipv4"},"nsnc.vxlan.id":{type:"number",title:"VxLAN ID",default:2,minimum:2,maximum:16777215},"nsnc.vxlan.port":{type:"number",title:"VxLAN Port",minimum:1,maximum:65434},"nsnc.network":{type:"string",title:"Network"}}}]}}},exporterSettings:{type:"object",title:"NetScaler ADC Metrics Exporter Settings",properties:{"nsic.exporter.required":{type:"boolean",title:"Deploy NetScaler ADC Metrics Exporter"}},dependencies:{"nsic.exporter.required":{oneOf:[{properties:{"nsic.exporter.required":{const:!1}}},{properties:{"nsic.exporter.required":{const:!0},"nsic.exporter.image":{type:"string",title:"NetScaler ADC Metrics Exporter Image",default:"quay.io/citrix/citrix-adc-metrics-exporter:1.4.6"},"nsic.exporter.pullPolicy":{type:"object",title:"Image Pull Policy",properties:{pullPolicy:{type:"string",default:"IfNotPresent",enum:["Always","IfNotPresent","Never"]}}},"nsic.exporter.ports.containerPort":{type:"number",title:"Exporter Container Port",default:8888,minimum:1,maximum:65535}}}]}}},nsoeConfig:{type:"object",title:"NetScaler Observability Exporter Config for NetScaler Ingress Controller",properties:{"nsic.nsoeConfig.required":{type:"boolean",title:"COE ConfigMap for NetScaler Ingress Controller",default:!1}},dependencies:{"nsic.nsoeConfig.required":{oneOf:[{properties:{"nsic.nsoeConfig.required":{const:!1}}},{properties:{"nsic.nsoeConfig.required":{const:!0},"nsic.nsoeConfig.endpoint.server":{type:"string",title:"DNS/IPAddress of the analytics server"},"nsic.nsoeConfig.timeseries.port":{type:"number",title:"Port number of timeseries endpoint of the analytics server.",default:30002,minimum:1,maximum:65535},"nsic.nsoeConfig.distributedTracing.enable":{type:"boolean",title:"Enable Tracing",default:!1},"nsic.nsoeConfig.timeseries.metrics.enable":{type:"boolean",title:"Enable sending metrics from NetScaler ADC to prometheus",default:!0},"nsic.nsoeConfig.timeseries.auditlogs.enable":{type:"boolean",title:"Export auditlog from NetScaler ADC",default:!0},"nsic.nsoeConfig.timeseries.events.enable":{type:"boolean",title:"Export events from NetScaler ADC",default:!0},"nsic.nsoeConfig.transactions.enable":{type:"boolean",title:"Export transactions from NetScaler ADC ",default:!0}},dependencies:{"nsic.nsoeConfig.transactions.enable":{oneOf:[{properties:{"nsic.nsoeConfig.transactions.enable":{const:!1}}},{properties:{"nsic.nsoeConfig.transactions.enable":{const:!0},"nsic.nsoeConfig.transactions.port":{type:"number",title:"Port number of transactional endpoint of analytics server",default:30001,minimum:1,maximum:65535}}}]},"nsic.nsoeConfig.timeseries.metrics.enable":{oneOf:[{properties:{"nsic.nsoeConfig.timeseries.metrics.enable":{const:!1}}},{properties:{"nsic.nsoeConfig.timeseries.metrics.enable":{const:!0},"nsic.nsoeConfig.timeseries.metrics.mode":{type:"string",title:"Mode of metric endpoint.",default:"prometheus"}}}]},"nsic.nsoeConfig.distributedTracing.enable":{oneOf:[{properties:{"nsic.nsoeConfig.distributedTracing.enable":{const:!1}}},{properties:{"nsic.nsoeConfig.distributedTracing.enable":{const:!0},"nsic.nsoeConfig.distributedTracing.samplingrate":{type:"number",title:"OpenTracing sampling rate",default:100,minimum:1,maximum:100}}}]}}}]}}},nsoeSettings:{type:"object",title:"NetScaler Observability Exporter Settings",properties:{"nsoe.enabled":{type:"boolean",title:"Deploy NetScaler Observability Exporter",default:!1}},dependencies:{"nsoe.enabled":{oneOf:[{properties:{"nsoe.enabled":{const:!1}}},{properties:{"nsoe.enabled":{const:!0},"nsoe.image":{type:"string",title:"NetScaler Observability Exporter",default:"quay.io/citrix/citrix-observability-exporter:1.2.001"},"nsoe.pullPolicy":{type:"object",title:"Image Pull Policy",properties:{pullPolicy:{type:"string",default:"IfNotPresent",enum:["Always","IfNotPresent","Never"]}}},"nsoe.transaction.nodePort":{type:"number",title:"Transaction NodePort",default:30001,minimum:1,maximum:65535},"nsoe.timeseries.enabled":{type:"boolean",title:"TimeSeries",default:!0},"nsoe.ns_tracing.enabled":{type:"boolean",title:"Tracing",default:!1},"nsoe.elasticsearch.enabled":{type:"boolean",title:"ElasticSearch",default:!1},"nsoe.kafka.enabled":{type:"boolean",title:"Kafka",default:!1}},dependencies:{"nsoe.ns_tracing.enabled":{oneOf:[{properties:{"nsoe.ns_tracing.enabled":{const:!1}}},{properties:{"nsoe.ns_tracing.enabled":{const:!0},"nsoe.ns_tracing.server":{type:"string",title:"Tracing Server",default:"zipkin:9411/api/v1/spans"}}}]},"nsoe.elasticsearch.enabled":{oneOf:[{properties:{"nsoe.elasticsearch.enabled":{const:!1}}},{properties:{"nsoe.elasticsearch.enabled":{const:!0},"nsoe.elasticsearch.server":{type:"string",title:"ElasticSearch Server EndPoint",default:"elasticsearch:9200"}}}]},"nsoe.kafka.enabled":{oneOf:[{properties:{"nsoe.kafka.enabled":{const:!1}}},{properties:{"nsoe.kafka.enabled":{const:!0},"nsoe.kafka.broker":{type:"string",title:"Kafka Broker"},"nsoe.kafka.topic":{type:"string",title:"Kafka Topic",default:"HTTP"}}}]},"nsoe.timeseries.enabled":{oneOf:[{properties:{"nsoe.timeseries.enabled":{const:!1}}},{properties:{"nsoe.timeseries.enabled":{const:!0},"nsoe.timeseries.nodePort":{type:"number",title:"Timeseries NodePort",default:30002,minimum:1,maximum:65535}}}]}}}]}}}}},B={adcSettings:{"nsic.enabled":{"ui:widget":"hidden"},"nsic.nsIP":{"ui:placeholder":"X.X.X.X","ui:autofocus":!0,"ui:description":"NetScaler ADC NSIP/SNIP, SNIP in case of HA (mgmt has to be enabled)"},"nsic.nsPort":{"ui:description":"NetScaler ADC Management Port"},"nsic.nsProtocol":{"ui:description":"Protocol used for NetScaler ADC Management"},"nsic.adcCredentialSecret":{"ui:description":"Create a Kubernetes secret for the credentials of NetScaler ADC MPX or VPX using the following command: <kubectl create secret generic nslogin --from-literal=username='username' --from-literal=password='password'>"}},entity:{"nsic.entityPrefix":{"ui:description":"Resources created on the NetScaler ADC will have this prefix in their name. Only alphanumeric string is valid."},"nsic.defaultSSLCertSecret":{"ui:description":"Kubernetes secret resource name which to be used as default SSL certificate in NetScaler ADC"}},platformSetting:{"ui:description":"Set to true if charts are being deployed in OpenShift environment","nsic.openshift":{"ui:description":"Openshift is set to true if charts are being deployed in OpenShift environment."}},nsicSettings:{"nsic.license.accept":{"ui:widget":"hidden"},"nsic.ipam":{"ui:widget":"hidden"},"nsic.kubernetesURL":{"ui:description":"The kube-apiserver url that NetScaler Ingress Controller uses to register the events. If the value is not specified, CIC uses the internal kube-apiserver IP address."},"nsic.logLevel":{"ui:description":"Log Level for NetScaler Ingress Controller Logs"},"nsic.ingressClass":{"ui:description":"Ingress class ensures that a particular set of ingress resources would be processed by NetScaler Ingress Controller."},"nsic.image":{"ui:description":"NetScaler Ingress Controller image"},"nsic.pullPolicy":{"ui:description":"Image Pull Policy for NetScaler Ingress Controller Image Pull Policy"}},nsicAdvancedSettings:{"nsic.nsicSettings.nsicConfig.NS_HTTP2_SERVER_SIDE":{"ui:description":"Enables HTTP2 for NetScaler ADC service group configurations"},"nsic.nsicSettings.nsicConfig.NS_COOKIE_VERSION":{"ui:description":"Specify the persistence cookie version"}},crdsSettings:{"nsic.crds.retainOnDelete":{"ui:description":"if set to true, then NetScaler CRDs will not be deleted during helm delete"}},nsoeSettings:{"ui:description":"NetScaler Observability Exporter collects metrics and transactions from NetScaler ADCs and transforms them to suitable formats (such as JSON, AVRO) for supported endpoints. For info <https://github.com/citrix/citrix-observability-exporter>","nsoe.image":{"ui:description":"COE Image"},"nsoe.pullPolicy":{"ui:description":"COE Image pull policy"},"nsoe.timeseries.enabled":{"ui:description":"Set true to enable sending timeseries data to prometheus."},"nsoe.ns_tracing.server":{"ui:description":"The tracing server api endpoint."},"nsoe.transaction.nodePort":{"ui:description":"Specify the port used to expose COE service outside cluster for transaction endpoint."},"nsoe.elasticsearch.server":{"ui:description":"The Elasticsearch server api endpoint. Note: To use ElasticSearch make sure Kafka is disabled"},"nsoe.kafka.broker":{"ui:description":"The kafka broker IP or FQDN details. Note: To use Kafka make sure Elasticsearch is disabled"},"nsoe.kafka.topic":{"ui:description":"The kafka topic details to upload data"},"nsoe.timeseries.nodePort":{"ui:description":"Specify the port used to expose COE service outside cluster for timeseries endpoint."}},nsoeConfig:{"ui:description":"Select below settings to send metrics, events, transactions to NetScaler Observability Exporter from NetScaler ADC","nsic.nsoeConfig.endpoint.server":{"ui:description":"Specify the DNS or IP address of the analytics server (NetScaler Observability Exporter)"},"nsic.nsoeConfig.timeseries.metrics.mode":{"ui:widget":"hidden"}},nsncSettings:{"ui:description":"Choose anyone. Select Node Watch to automatically configure routes on the NetScaler ADC to point to the pod networks on the nodes. Select CNC to create network between the Kubernetes cluster and ingress device.","nsnc.vxlan.id":{"ui:description":"A unique VXLAN VNID to create a VXLAN overlay between Kubernetes cluster and the ingress devices. Note: Ensure that the VXLAN VNID that you use does not conflict with the Kubernetes cluster or NetScaler ADC VXLAN VNID. You can use the show vxlan command on your NetScaler ADC to view the VXLAN VNID"},"nsnc.vxlan.port":{"ui:description":"The VXLAN port that you want to use for the overlay. Note: Ensure that the VXLAN PORT that you use does not conflict with the Kubernetes cluster or NetScaler ADC VXLAN PORT. You can use the show vxlan command on your NetScaler ADC to view the VXLAN PORT. "},"nsnc.image":{"ui:description":"CNC Image"},"nsnc.pullPolicy":{"ui:description":"CNC image pull policy"},"nsnc.vtepIP":{"ui:description":"The Ingress NetScaler ADC SNIP. This IP address is used to establish an overlay network between the Kubernetes clusters."},"nsnc.network":{"ui:description":"The IP address range (for example, 192.128.1.0/24) that NetScaler node controller uses to configure the VTEP overlay end points on the Kubernetes nodes. Note: Ensure that the subnet that you provide is different from your Kubernetes cluster."},"nsic.nodeWatch":{"ui:description":"When checked, routes on the NetScaler ADC are automatically configured to point to the pod networks on the nodes"}},exporterSettings:{"ui:description":"NetScaler metrics exporter scrapes NetScaler ADC stats and exports them via HTTP to Prometheus. For info:<https://github.com/citrix/citrix-adc-metrics-exporter>","nsic.exporter.image":{"ui:description":"NetScaler ADC Metrics Exporter Image"},"nsic.exporter.pullPolicy":{"ui:description":"NetScaler ADC Metrics Exporter image pull policy"},"nsic.exporter.ports.containerPort":{"ui:description":"Specify on which port metrics collected by the exporter should be exposed. Agents like Prometheus will need to scrape this port of the container to collected metrics"}},nodeSelectorSettings:{"nsic.nodeSelector.key":{"ui:description":"Node label key to be used for nodeSelector option in NetScaler Ingress Controller deployment.."},"nsic.nodeSelector.value":{"ui:description":"Node label value to be used for nodeSelector option in NetScaler Ingress Controller deployment."}},ipamSettings:{"ipam.enabled":{"ui:widget":"hidden"},"ipam.image":{"ui:description":"IPAM Image"},"ipam.pullPolicy":{"ui:description":"IPAM image pull policy"},"ipam.vipRange":{"ui:description":"This variable allows you to define the IP address range. You can either define IP address range or an IP address range associated with a unique name. NetScaler IPAM controller assigns the IP address from this IP address range to the service of type LoadBalancer. Please provide comma separated values if you want to use mutiple IP Ranges."}}},Y={properties:{xDSAdaptoSettings:{type:"object",title:"NetScaler xDS Adaptor Settings",properties:{"iaIngress.enabled":{type:"boolean",title:"iaIngress",default:!0},"iaIngress.xDSAdaptor.image":{type:"string",title:"NetScaler xDS Adaptor Image",default:"quay.io/citrix/citrix-xds-adaptor:0.9.5"},"iaIngress.pullPolicy":{type:"object",title:"NetScaler xDS Adaptor Image Pull Policy",properties:{pullPolicy:{type:"string",default:"IfNotPresent",enum:["Always","IfNotPresent","Never"]}}},"iaIngress.xDSAdaptor.proxyType":{type:"string",title:"Proxy Type",default:"router"},"iaIngress.xDSAdaptor.secureConnect":{type:"boolean",title:"secureConnect",default:!0}}},ingressGatewaySettings:{type:"object",title:"NetScaler ADC as IngressGateway",required:["iaIngress.ingressGateway.vserverIP","iaIngress.ingressGateway.netscalerUrl"],properties:{"iaIngress.netscalerCPX":{type:"boolean",title:"Deploy NetScaler ADC CPX as Ingress Gateway",default:!1},"iaIngress.ingressGateway.secretVolume":{type:"array",title:"Secret Volume Information",items:{type:"object",properties:{"Volume Name":{type:"string"},"Secret Name":{type:"string"},"Mount Path":{type:"string"}}}},"iaIngress.ingressGateway.label":{type:"string",title:"Label for NetScaler IngressGateway ",default:"citrix-ingressgateway"}},dependencies:{"iaIngress.netscalerCPX":{oneOf:[{properties:{"iaIngress.netscalerCPX":{const:!1},"iaIngress.ingressGateway.tcpPort":{type:"array",title:"TCP Port Details",items:{type:"object",properties:{"Port Name":{type:"string"},Port:{type:"string"},"Target Port":{type:"string"}}}},"iaIngress.ingressGateway.vserverIP":{type:"string",title:"NetScaler ADC VIP",default:"x.x.x.x"},"iaIngress.ingressGateway.netscalerUrl":{type:"string",title:"NetScaler ADC URL",default:""},"iaIngress.ingressGateway.adcServerName":{type:"string",title:"NetScaler ADC ServerName"},"iaIngress.ingressGateway.netProfile":{type:"string",title:"Netprofile for NetScaler ADC"}}},{properties:{"iaIngress.netscalerCPX":{const:!0},"iaIngress.ingressGateway.tcpPort":{type:"array",title:"TCP Port Details",items:{type:"object",properties:{"Port Name":{type:"string"},"Node Port":{type:"string"},Port:{type:"string"},"Target Port":{type:"string"}}}},"iaIngress.ingressGateway.image":{type:"string",title:"NetScaler ADC CPX Image ",default:"quay.io/citrix/citrix-k8s-cpx-ingress:13.0-64.35"},"iaIngress.ingressGateway.EULA":{type:"boolean",title:"EULA",default:!0},"iaIngress.ingressGateway.mgmtHttpPort":{type:"number",title:"NetScaler ADC CPX Mgmt HTTP Port",default:10080,minimum:1,maximum:65535},"iaIngress.ingressGateway.mgmtHttpsPort":{type:"number",title:"NetScaler ADC CPX Mgmt HTTPSPort",default:10443,minimum:1,maximum:65535},"iaIngress.ingressGateway.httpNodePort":{type:"number",title:"HTTP Node Port for NetScaler CPX ",default:30180,minimum:1,maximum:65535},"iaIngress.ingressGateway.httpsNodePort":{type:"number",title:"HTTPS Node Port for NetScaler CPX ",default:31443,minimum:1,maximum:65535},"iaIngress.ingressGateway.lightWeightCPX":{type:"string",title:"Deploy Light Weight NetScaler ADC CPX",default:"1"},"iaIngress.ADMSettings.ADMIP":{type:"string",title:"NetScaler ADM IP",format:"ipv4"},"iaIngress.ADMSettings.ADMFingerPrint":{type:"string",title:"NetScaler ADM FingerPrint"},"iaIngress.ADMSettings.licenseServerIP":{type:"string",title:"License Server IP",format:"ipv4"},"iaIngress.ADMSettings.bandWidthLicense":{type:"boolean",title:"Apply Bandwidth Based License",default:!1}},dependencies:{"iaIngress.ADMSettings.bandWidthLicense":{oneOf:[{properties:{"iaIngress.ADMSettings.bandWidthLicense":{const:!1}}},{properties:{"iaIngress.ADMSettings.bandWidthLicense":{const:!0},"iaIngress.ADMSettings.bandWidth":{type:"number",title:"Bandwidth value in Mbps",default:1e3,minimum:1e3}}}]}}}]}}},istioPilotSettings:{type:"object",title:"Istio Pilot Settings",properties:{"iaIngress.istioPilot.name":{type:"string",title:"Name",default:"istiod"},"iaIngress.istioPilot.namespace":{type:"string",title:"Namespace of Istio Pilot",default:"istio-system"},"iaIngress.istioPilot.secureGrpcPort":{type:"number",title:"Secure gRPS Port",default:15012},"iaIngress.istioPilot.insecureGrpcPort":{type:"number",title:"Insecure gRPC Port",default:15010},"iaIngress.istioPilot.SAN":{type:"string",title:"SAN",default:""}}},certProviderSettings:{type:"object",title:"Certificate Provider",properties:{"iaIngress.certProvider.caAddr":{type:"string",title:"CA Cert Address",default:"istiod.istio-system.svc"},"iaIngress.certProvider.caPort":{type:"number",title:"CA Port listening for CSR",default:15012},"iaIngress.certProvider.trustDomain":{type:"string",title:"Trust domain",default:"cluster.local"},"iaIngress.certProvider.certTTLinHours":{type:"number",title:"TTL for Certificates in Hours",default:720},"iaIngress.certProvider.clusterId":{type:"string",title:"Cluster ID",default:"Kubernetes"}}},exporterSettings:{type:"object",title:"NetScaler ADC Metrics Exporter Settings",properties:{"iaIngress.metricExporter.required":{type:"boolean",title:"Deploy NetScaler ADC Metrics Exporter",default:!1}},dependencies:{"iaIngress.metricExporter.required":{oneOf:[{properties:{"iaIngress.metricExporter.required":{const:!1}}},{properties:{"iaIngress.metricExporter.required":{const:!0},"iaIngress.metricExporter.image":{type:"string",title:"NetScaler ADC Metrics Exporter Image",default:"quay.io/citrix/citrix-adc-metrics-exporter:1.4.6"},"iaIngress.metricExporter.pullPolicy":{type:"object",title:"Image Pull Policy",properties:{pullPolicy:{type:"string",default:"IfNotPresent",enum:["Always","IfNotPresent","Never"]}}},"iaIngress.metricExporter.ports.containerPort":{type:"number",title:"Exporter Container Port",default:8888,minimum:1,maximum:65535}}}]}}},nsncSettings:{type:"object",title:"NetScaler Node Controller Settings for NetScaler ADC VPX/MPX",required:["nsnc.nsIP","nsnc.vtepIP","nsnc.network","nsnc.vxlan.id","nsnc.vxlan.port"],properties:{"nsnc.enabled":{type:"boolean",title:"Deploy NetScaler Node Controller",default:!1}},dependencies:{"nsnc.enabled":{oneOf:[{properties:{"nsnc.enabled":{const:!1}}},{properties:{"nsnc.enabled":{const:!0},"nsnc.image":{type:"string",title:"NetScaler Node Controller Image",default:"quay.io/citrix/citrix-k8s-node-controller:2.0.0"},"nsnc.pullPolicy":{type:"object",title:"Image Pull Policy",properties:{pullPolicy:{type:"string",default:"IfNotPresent",enum:["Always","IfNotPresent","Never"]}}},"nsnc.nsIP":{type:"string",title:"NetScaler ADC IP"},"nsnc.vtepIP":{type:"string",title:"NetScaler ADC SNIP",format:"ipv4"},"nsnc.vxlan.id":{type:"number",title:"VxLAN ID",default:2,minimum:2,maximum:16777215},"nsnc.vxlan.port":{type:"number",title:"VxLAN Port",minimum:1,maximum:65434},"nsnc.network":{type:"string",title:"Network"}}}]}}}}},J={xDSAdaptoSettings:{"iaIngress.enabled":{"ui:widget":"hidden"},"iaIngress.xDSAdaptor.proxyType":{"ui:widget":"hidden"},"iaIngress.xDSAdaptor.image":{"ui:description":"NetScaler ADC xDS Adaptor Image"},"iaIngress.xDSAdaptor.secureConnect":{"ui:description":"When set to true, xDS-adaptor establishes secure gRPC channel with Istio Pilot"}},ingressGatewaySettings:{"iaIngress.ingressGateway.lightWeightCPX":{"ui:widget":"hidden"},"iaIngress.ingressGateway.secretVolume":{"ui:description":"A map of user defined volumes to be mounted using Kubernetes secrets."},"iaIngress.ingressGateway.label":{"ui:description":"Custom label for the Ingress Gateway service"},"iaIngress.ingressGateway.tcpPort":{"ui:description":"For exposing multiple TCP ingress"},"iaIngress.ingressGateway.vserverIP":{"ui:description":"Virtual server IP address on NetScaler ADC VPX/MPX"},"iaIngress.ingressGateway.netscalerUrl":{"ui:description":"URL or IP address of the NetScaler ADC which Istio-adaptor configures "},"iaIngress.ingressGateway.adcServerName":{"ui:description":"NetScaler ADC ServerName used in the NetScaler ADC certificate"},"iaIngress.ingressGateway.netProfile":{"ui:description":"Network profile name used by NetScaler Node Controller to configure NetScaler ADC VPX or MPX which is deployed as Ingress Gateway"},"iaIngress.ingressGateway.image":{"ui:description":"NetScaler ADC CPX Image"},"iaIngress.ingressGateway.EULA":{"ui:widget":"hidden"},"iaIngress.ingressGateway.mgmtHttpPort":{"ui:description":"Management port of the NetScaler ADC CPX"},"iaIngress.ingressGateway.mgmtHttpsPort":{"ui:description":"Secure Management port of the NetScaler ADC CPX"},"iaIngress.ingressGateway.httpNodePort":{"ui:description":"Port on host machine which is used to expose HTTP port (80) of NetScaler ADC CPX"},"iaIngress.ingressGateway.httpsNodePort":{"ui:description":"Port on host machine which is used to expose HTTPS port (443) of NetScaler ADC CPX"},"iaIngress.ADMSettings.ADMIP":{"ui:description":"NetScaler Application Delivery Management (ADM) IP address"},"iaIngress.ADMSettings.ADMFingerPrint":{"ui:description":"NetScaler Application Delivery Management (ADM) FingerPrint. For more information, visit <https://docs.citrix.com/en-us/citrix-application-delivery-management-service/application-analytics-and-management/service-graph.html>"},"iaIngress.ADMSettings.licenseServerIP":{"ui:description":"NetScaler License Server IP address"},"iaIngress.ADMSettings.licenseServerPort":{"ui:description":"NetScaler License Server {Port}"},"iaIngress.ADMSettings.bandWidthLicense":{"ui:description":"To specify bandwidth based licensing"},"iaIngress.ADMSettings.bandWidth":{"ui:description":"Desired bandwidth capacity to be set for NetScaler ADC CPX in Mbps\t"}},certProviderSettings:{"iaIngress.certProvider.clusterId":{"ui:widget":"hidden"},"iaIngress.certProvider.caAddr":{"ui:description":"Certificate Authority (CA) address issuing certificate to application"},"iaIngress.certProvider.caPort":{"ui:description":"Certificate Authority (CA) port issuing certificate to application"},"iaIngress.certProvider.trustDomain":{"ui:description":"SPIFFE Trust Domain"},"iaIngress.certProvider.certTTLinHours":{"ui:description":"Validity of certificate generated by xds-adaptor and signed by Istiod (Istio Citadel) in hours. Default is 30 days validity"}},nsoeSettings:{"iaIngress.nsoe.nsoeURL":{"ui:description":" Name of NetScaler Observability Exporter Service in the form of ' . '"}},exporterSettings:{"ui:description":"NetScaler metrics exporter scrapes NetScaler ADC stats and exports them via HTTP to Prometheus. For info:<https://github.com/citrix/citrix-adc-metrics-exporter>","iaIngress.metricExporter.image":{"ui:description":"NetScaler ADC Metrics Exporter Image"},"iaIngress.metricExporter.pullPolicy":{"ui:description":"NetScaler ADC Metrics Exporter image pull policy"},"iaIngress.metricExporter.ports.containerPort":{"ui:description":"Specify on which port metrics collected by the exporter should be exposed. Agents like Prometheus will need to scrape this port of the container to collected metrics"}},istioPilotSettings:{"iaIngress.istioPilot.name":{"ui:description":"Name of the Istio Pilot (Istiod) service"},"iaIngress.istioPilot.namespace":{"ui:description":"Namespace where Istio Pilot is running"},"iaIngress.istioPilot.secureGrpcPort":{"ui:description":"Secure GRPC port where Istiod (Istio Pilot) is listening (default setting)"},"iaIngress.istioPilot.insecureGrpcPort":{"ui:description":"Insecure GRPC port where Istio Pilot is listening"},"iaIngress.istioPilot.SAN":{"ui:description":"Subject alternative name for Istio Pilot which is the secure production identity framework for everyone (SPIFFE) ID of Istio Pilot"}},nsncSettings:{"ui:description":"NetScaler Node Controller creates network between the Kubernetes cluster and NetScaler ADC/VPX. For info: <https://github.com/citrix/citrix-k8s-node-controller>","nsnc.vxlan.id":{"ui:description":"A unique VXLAN VNID to create a VXLAN overlay between Kubernetes cluster and the ingress devices. Note: Ensure that the VXLAN VNID that you use does not conflict with the Kubernetes cluster or NetScaler ADC VXLAN VNID. You can use the show vxlan command on your NetScaler ADC to view the VXLAN VNID"},"nsnc.vxlan.port":{"ui:description":"The VXLAN port that you want to use for the overlay. Note: Ensure that the VXLAN PORT that you use does not conflict with the Kubernetes cluster or NetScaler ADC VXLAN PORT. You can use the show vxlan command on your NetScaler ADC to view the VXLAN PORT. "},"nsnc.image":{"ui:description":"CNC Image"},"nsnc.pullPolicy":{"ui:description":"CNC image pull policy"},"nsnc.vtepIP":{"ui:description":"SNIP of NetScaler ADC VPX or MPX"},"nsnc.network":{"ui:description":"The IP address range (for example, 192.128.1.0/24) that NetScaler node controller uses to configure the VTEP overlay end points on the Kubernetes nodes. Note: Ensure that the subnet that you provide is different from your Kubernetes cluster."},"nsnc.nsIP":{"ui:description":"The Management IP address of the NetScaler ADC device VPX or MPX"}}},z={properties:{xDSAdaptoSettings:{type:"object",title:"NetScaler xDS Adaptor Settings",properties:{"iaSidecar.enabled":{type:"boolean",title:"iaSidecar",default:!0},"iaSidecar.xDSAdaptor.image":{type:"string",title:"NetScaler xDS Adaptor Image",default:"quay.io/citrix/citrix-xds-adaptor:0.9.5"},"iaSidecar.pullPolicy":{type:"object",title:"NetScaler xDS Adaptor Image Pull Policy",properties:{pullPolicy:{type:"string",default:"IfNotPresent",enum:["Always","IfNotPresent","Never"]}}},"iaSidecar.xDSAdaptor.proxyType":{type:"string",title:"Proxy Type",default:"router"},"iaSidecar.xDSAdaptor.secureConnect":{type:"boolean",title:"secureConnect",default:!0}}},cpxProxySettings:{type:"object",title:"NetScaler ADC CPX as Sidecar Proxy Settings",properties:{"iaSidecar.cpxProxy.netscalerUrl":{type:"string",title:"NetScaler ADC URL",default:"http://127.0.0.1"},"iaSidecar.cpxProxy.image":{type:"string",title:"NetScaler ADC CPX Image ",default:"quay.io/citrix/citrix-k8s-cpx-ingress:13.0-64.35"},"iaSidecar.cpxProxy.EULA":{type:"boolean",title:"EULA",default:!0},"iaSidecar.cpxProxy.mgmtHttpPort":{type:"number",title:"NetScaler ADC CPX Mgmt HTTP Port",default:10080,minimum:1,maximum:65535},"iaSidecar.cpxProxy.mgmtHttpsPort":{type:"number",title:"NetScaler ADC CPX Mgmt HTTPSPort",default:10443,minimum:1,maximum:65535},"iaSidecar.cpxProxy.httpNodePort":{type:"number",title:"HTTP Node Port for NetScaler CPX ",default:30180,minimum:1,maximum:65535},"iaSidecar.cpxProxy.httpsNodePort":{type:"number",title:"HTTPS Node Port for NetScaler CPX ",default:31443,minimum:1,maximum:65535},"iaSidecar.cpxProxy.lightWeightCPX":{type:"string",title:"Deploy Light Weight NetScaler ADC CPX",default:"1"},"iaSidecar.ADMSettings.ADMIP":{type:"string",title:"NetScaler ADM IP",format:"ipv4"},"iaSidecar.ADMSettings.ADMFingerPrint":{type:"string",title:"NetScaler ADM FingerPrint"},"iaSidecar.ADMSettings.licenseServerIP":{type:"string",title:"License Server IP",format:"ipv4"},"iaSidecar.ADMSettings.bandWidthLicense":{type:"boolean",title:"Apply Bandwidth Based License",default:!1}},dependencies:{"iaSidecar.ADMSettings.bandWidthLicense":{oneOf:[{properties:{"iaSidecar.ADMSettings.bandWidthLicense":{const:!1}}},{properties:{"iaSidecar.ADMSettings.bandWidthLicense":{const:!0},"iaSidecar.ADMSettings.bandWidth":{type:"number",title:"Bandwidth value in Mbps",default:1e3,minimum:1e3}}}]}}},cpxnsoeSettings:{type:"object",title:"Coe Settings",properties:{"iaSidecar.nsoe.nsoeURL":{type:"string",title:"COE URL"}}},istioPilotSettings:{type:"object",title:"Istio Pilot Settings",properties:{"iaSidecar.istioPilot.name":{type:"string",title:"Name",default:"istiod"},"iaSidecar.istioPilot.namespace":{type:"string",title:"Namespace of Istio Pilot",default:"istio-system"},"iaSidecar.istioPilot.secureGrpcPort":{type:"number",title:"Secure gRPS Port",default:15012},"iaSidecar.istioPilot.insecureGrpcPort":{type:"number",title:"Insecure gRPC Port",default:15010},"iaSidecar.istioPilot.SAN":{type:"string",title:"SAN",default:""}}},certProviderSettings:{type:"object",title:"Certificate Provider",properties:{"iaSidecar.certProvider.caAddr":{type:"string",title:"CA Cert Address",default:"istiod.istio-system.svc"},"iaSidecar.certProvider.caPort":{type:"number",title:"Port to connect with CA Authority",default:15012},"iaSidecar.certProvider.trustDomain":{type:"string",title:"Trust domain",default:"cluster.local"},"iaSidecar.certProvider.certTTLinHours":{type:"number",title:"TTL for Certificates",default:720},"iaSidecar.certProvider.clusterId":{type:"string",title:"Cluster",default:"Kubernetes"}}},sidecarWebHookSettings:{type:"object",title:"SideCar Webhook Settings",properties:{"iaSidecar.sidecarWebHook.webhookImage":{type:"string",title:"Sidecar Webhook Image",default:"gcr.io/istio-release/sidecar_injector"},"iaSidecar.sidecarWebHook.webhookImageVersion":{type:"string",title:"Sidecar Webhook Image Version",default:"1.0.0"},"iaSidecar.sidecarWebHook.imagePullPolicy":{type:"string",title:"Sidecar Image Pull Policy",default:"IfNotPresent"},"iaSidecar.webhook.injectionLabelName":{type:"string",title:"Sidecar Injection Label",default:"cpx-injection"}}},nsoeSettings:{type:"object",title:"NetScaler Observability Exporter Settings",properties:{"nsoe.enabled":{type:"boolean",title:"Deploy NetScaler Observability Exporter",default:!1}},dependencies:{"nsoe.enabled":{oneOf:[{properties:{"nsoe.enabled":{const:!1}}},{properties:{"nsoe.enabled":{const:!0},"nsoe.image":{type:"string",title:"NetScaler Observability Exporter",default:"quay.io/citrix/citrix-observability-exporter:1.2.001"},"nsoe.pullPolicy":{type:"object",title:"Image Pull Policy",properties:{pullPolicy:{type:"string",default:"IfNotPresent",enum:["Always","IfNotPresent","Never"]}}},"nsoe.transaction.nodePort":{type:"number",title:"Transaction NodePort",default:30001,minimum:1,maximum:65535},"nsoe.timeseries.enabled":{type:"boolean",title:"TimeSeries",default:!0},"nsoe.ns_tracing.enabled":{type:"boolean",title:"Tracing",default:!1},"nsoe.elasticsearch.enabled":{type:"boolean",title:"ElasticSearch",default:!1},"nsoe.kafka.enabled":{type:"boolean",title:"Kafka",default:!1}},dependencies:{"nsoe.ns_tracing.enabled":{oneOf:[{properties:{"nsoe.ns_tracing.enabled":{const:!1}}},{properties:{"nsoe.ns_tracing.enabled":{const:!0},"nsoe.ns_tracing.server":{type:"string",title:"Tracing Server",default:"zipkin:9411/api/v1/spans"}}}]},"nsoe.elasticsearch.enabled":{oneOf:[{properties:{"nsoe.elasticsearch.enabled":{const:!1}}},{properties:{"nsoe.elasticsearch.enabled":{const:!0},"nsoe.elasticsearch.server":{type:"string",title:"ElasticSearch Server EndPoint",default:"elasticsearch:9200"}}}]},"nsoe.kafka.enabled":{oneOf:[{properties:{"nsoe.kafka.enabled":{const:!1}}},{properties:{"nsoe.kafka.enabled":{const:!0},"nsoe.kafka.broker":{type:"string",title:"Kafka Broker"},"nsoe.kafka.topic":{type:"string",title:"Kafka Topic",default:"HTTP"}}}]},"nsoe.timeseries.enabled":{oneOf:[{properties:{"nsoe.timeseries.enabled":{const:!1}}},{properties:{"nsoe.timeseries.enabled":{const:!0},"nsoe.timeseries.nodePort":{type:"number",title:"Timeseries NodePort",default:30002,minimum:1,maximum:65535}}}]}}}]}}}}},Q={sidecarWebHookSettings:{"iaSidecar.sidecarWebHook.webhookImage":{"ui:widget":"hidden"},"iaSidecar.sidecarWebHook.webhookImageVersion":{"ui:widget":"hidden"},"iaSidecar.sidecarWebHook.imagePullPolicy":{"ui:widget":"hidden"},"iaSidecar.webhook.injectionLabelName":{"ui:description":"Label of namespace where automatic NetScaler ADC CPX sidecar injection is required"}},xDSAdaptoSettings:{"iaSidecar.enabled":{"ui:widget":"hidden"},"iaSidecar.xDSAdaptor.proxyType":{"ui:widget":"hidden"},"iaSidecar.xDSAdaptor.image":{"ui:description":"NetScaler ADC xDS Adaptor Image"},"iaSidecar.xDSAdaptor.secureConnect":{"ui:description":"When set to true, xDS-adaptor establishes secure gRPC channel with Istio Pilot"}},cpxProxySettings:{"iaSidecar.cpxProxy.netscalerUrl":{"ui:widget":"hidden"},"iaSidecar.cpxProxy.lightWeightCPX":{"ui:widget":"hidden"},"iaSidecar.cpxProxy.image":{"ui:description":"NetScaler ADC CPX Image"},"iaSidecar.cpxProxy.EULA":{"ui:widget":"hidden"},"iaSidecar.cpxProxy.mgmtHttpPort":{"ui:description":"Management port of the NetScaler ADC CPX"},"iaSidecar.cpxProxy.mgmtHttpsPort":{"ui:description":"Secure Management port of the NetScaler ADC CPX"},"iaSidecar.cpxProxy.httpNodePort":{"ui:description":"Port on host machine which is used to expose HTTP port (80) of NetScaler ADC CPX"},"iaSidecar.cpxProxy.httpsNodePort":{"ui:description":"Port on host machine which is used to expose HTTPS port (443) of NetScaler ADC CPX"},"iaSidecar.ADMSettings.ADMIP":{"ui:description":"NetScaler Application Delivery Management (ADM) IP address"},"iaSidecar.ADMSettings.ADMFingerPrint":{"ui:description":"NetScaler Application Delivery Management (ADM) FingerPrint. For more information, visit <https://docs.citrix.com/en-us/citrix-application-delivery-management-service/application-analytics-and-management/service-graph.html>"},"iaSidecar.ADMSettings.licenseServerIP":{"ui:description":"NetScaler License Server IP address"},"iaSidecar.ADMSettings.licenseServerPort":{"ui:description":"NetScaler License Server {Port}"},"iaSidecar.ADMSettings.bandWidthLicense":{"ui:description":"To specify bandwidth based licensing"},"iaSidecar.ADMSettings.bandWidth":{"ui:description":"Desired bandwidth capacity to be set for NetScaler ADC CPX in Mbps\t"}},certProviderSettings:{"iaSidecar.certProvider.clusterId":{"ui:widget":"hidden"},"iaSidecar.certProvider.caAddr":{"ui:description":"Certificate Authority (CA) address issuing certificate to application"},"iaSidecar.certProvider.caPort":{"ui:description":"Certificate Authority (CA) port issuing certificate to application"},"iaSidecar.certProvider.trustDomain":{"ui:description":"SPIFFE Trust Domain"},"iaSidecar.certProvider.certTTLinHours":{"ui:description":"Validity of certificate generated by xds-adaptor and signed by Istiod (Istio Citadel) in hours. Default is 30 days validity"}},cpxnsoeSettings:{"iaSidecar.nsoe.nsoeURL":{"ui:description":" Name of NetScaler Observability Exporter Service in the form of ' . '"}},istioPilotSettings:{"iaSidecar.istioPilot.name":{"ui:description":"Name of the Istio Pilot (Istiod) service"},"iaSidecar.istioPilot.namespace":{"ui:description":"Namespace where Istio Pilot is running"},"iaSidecar.istioPilot.secureGrpcPort":{"ui:description":"Secure GRPC port where Istiod (Istio Pilot) is listening (default setting)"},"iaSidecar.istioPilot.insecureGrpcPort":{"ui:description":"Insecure GRPC port where Istio Pilot is listening"},"iaSidecar.istioPilot.SAN":{"ui:description":"Subject alternative name for Istio Pilot which is the secure production identity framework for everyone (SPIFFE) ID of Istio Pilot"}},nsoeSettings:{"ui:description":"NetScaler Observability Exporter collects metrics and transactions from NetScaler ADCs and transforms them to suitable formats (such as JSON, AVRO) for supported endpoints. For info <https://github.com/citrix/citrix-observability-exporter>","nsoe.enabled":{},"nsoe.image":{"ui:description":"COE Image"},"nsoe.pullPolicy":{"ui:description":"COE Image pull policy"},"nsoe.timeseries.enabled":{"ui:description":"Set true to enable sending timeseries data to prometheus."},"nsoe.ns_tracing.server":{"ui:description":"The tracing server api endpoint."},"nsoe.transaction.nodePort":{"ui:description":"Specify the port used to expose COE service outside cluster for transaction endpoint."},"nsoe.elasticsearch.server":{"ui:description":"The Elasticsearch server api endpoint. Note: To use ElasticSearch make sure Kafka is disabled"},"nsoe.kafka.broker":{"ui:description":"The kafka broker IP details"},"nsoe.kafka.topic":{"ui:description":"The kafka topic details to upload data"},"nsoe.timeseries.nodePort":{"ui:description":"Specify the port used to expose COE service outside cluster for timeseries endpoint."}}},$={properties:{adcSettings:{type:"object",title:"NetScaler ADC Settings for Tier-1 VPX or MPX",required:["nsic.nsIP","nsic.adcCredentialSecret"],properties:{"nsic.enabled":{type:"boolean",default:!0},"nsic.nsIP":{type:"string",title:"NetScaler ADC Management IP",format:"ipv4"},"nsic.nsPort":{type:"number",title:"Management Port for NetScaler ADC",default:443,maximum:65535,minimum:1},"nsic.nsProtocol":{type:"object",title:"NetScaler ADC Management Protocol",properties:{nsProtocol:{type:"string",default:"HTTPS",enum:["HTTPS","HTTP"]}}},"nsic.adcCredentialSecret":{type:"string",title:"Kubernetes Secret Name"}}},entity:{type:"object",title:"Entity related Settings for Tier-1 VPX or MPX",properties:{"nsic.entityPrefix":{type:"string",title:"NetScaler ADC Entity Prefix",default:"k8s"},"nsic.defaultSSLCertSecret":{type:"string",title:"Default SSL Certificate"}}},nodeSelectorSettings:{type:"object",title:"Node Selector Settings Settings for Tier-1 Ingress",properties:{"nsic.nodeSelector.key":{type:"string",title:"Key"},"nsic.nodeSelector.value":{type:"string",title:"Value"}}},nsicSettings:{type:"object",title:"NetScaler Ingress Controller Settings",properties:{"nsic.image":{type:"string",title:"NetScaler Ingress Controller Image",default:"quay.io/citrix/citrix-k8s-ingress-controller:1.9.20"},"nsic.pullPolicy":{type:"object",title:"Image Pull Policy",properties:{pullPolicy:{type:"string",default:"IfNotPresent",enum:["Always","IfNotPresent","Never"]}}},"nsic.kubernetesURL":{type:"string",title:"Kubernetes API-server URL",format:"url"},"nsic.license.accept":{type:"string",default:"Yes"},"nsic.ingressClass":{type:"array",title:"Ingress Classes for Controller in Tier-1",items:{type:"object",properties:{"Ingress Class:":{type:"string"}}}},"nsic.logLevel":{type:"object",title:"Log Level settings for Tier-1 Ingress Controller",properties:{logLevel:{type:"string",default:"INFO",enum:["DEBUG","INFO","WARN","ERROR","TRACE"]}}},"nsic.ipam":{type:"boolean",default:!0}}},nsicAdvancedSettings:{type:"object",title:"NetScaler Ingress Controller Advanced Settings",properties:{"nsicSettings.required":{type:"boolean",title:"Use NetScaler Ingress Controller Advanced Settings",default:!1}},dependencies:{"nsicSettings.required":{oneOf:[{properties:{"nsicSettings.required":{const:!1}}},{properties:{"nsicSettings.required":{const:!0},"nsicSettings.nsicConfig.NS_HTTP2_SERVER_SIDE":{type:"object",title:"Enable HTTP2 in Server Side",properties:{NS_HTTP2_SERVER_SIDE:{type:"string",default:"OFF",enum:["ON","OFF"]}}},"nsicSettings.nsicConfig.NS_COOKIE_VERSION":{type:"object",title:"Persistence cookie version",properties:{NS_COOKIE_VERSION:{type:"string",default:"0",enum:["0","1"]}}}}}]}}},exporterSettings:{type:"object",title:"NetScaler ADC Metrics Exporter Settings for Tier-1 Ingress",properties:{"nsic.exporter.required":{type:"boolean",title:"Deploy NetScaler ADC Metrics Exporter"}},dependencies:{"nsic.exporter.required":{oneOf:[{properties:{"nsic.exporter.required":{const:!1}}},{properties:{"nsic.exporter.required":{const:!0},"nsic.exporter.image":{type:"string",title:"NetScaler ADC Metrics Exporter Image",default:"quay.io/citrix/citrix-adc-metrics-exporter:1.4.6"},"nsic.exporter.pullPolicy":{type:"object",title:"Image Pull Policy",properties:{pullPolicy:{type:"string",default:"IfNotPresent",enum:["Always","IfNotPresent","Never"]}}},"nsic.exporter.ports.containerPort":{type:"number",title:"Exporter Container Port",default:8888,minimum:1,maximum:65535}}}]}}},nsoeConfig:{type:"object",title:"NetScaler Observability Exporter Config for Tier-1 Ingress",properties:{"nsic.nsoeConfig.required":{type:"boolean",title:"COE ConfigMap for NetScaler Ingress Controller",default:!1}},dependencies:{"nsic.nsoeConfig.required":{oneOf:[{properties:{"nsic.nsoeConfig.required":{const:!1}}},{properties:{"nsic.nsoeConfig.required":{const:!0},"nsic.nsoeConfig.endpoint.server":{type:"string",title:"DNS/IPAddress of the analytics server"},"nsic.nsoeConfig.timeseries.port":{type:"number",title:"Port number of timeseries endpoint of the analytics server.",default:30002,minimum:1,maximum:65535},"nsic.nsoeConfig.distributedTracing.enable":{type:"boolean",title:"Enable Tracing",default:!1},"nsic.nsoeConfig.timeseries.metrics.enable":{type:"boolean",title:"Enable sending metrics from NetScaler ADC to prometheus",default:!0},"nsic.nsoeConfig.timeseries.auditlogs.enable":{type:"boolean",title:"Export auditlog from NetScaler ADC",default:!0},"nsic.nsoeConfig.timeseries.events.enable":{type:"boolean",title:"Export events from NetScaler ADC",default:!0},"nsic.nsoeConfig.transactions.enable":{type:"boolean",title:"Export transactions from NetScaler ADC ",default:!0}},dependencies:{"nsic.nsoeConfig.transactions.enable":{oneOf:[{properties:{"nsic.nsoeConfig.transactions.enable":{const:!1}}},{properties:{"nsic.nsoeConfig.transactions.enable":{const:!0},"nsic.nsoeConfig.transactions.port":{type:"number",title:"Port number of transactional endpoint of analytics server",default:30001,minimum:1,maximum:65535}}}]},"nsic.nsoeConfig.timeseries.metrics.enable":{oneOf:[{properties:{"nsic.nsoeConfig.timeseries.metrics.enable":{const:!1}}},{properties:{"nsic.nsoeConfig.timeseries.metrics.enable":{const:!0},"nsic.nsoeConfig.timeseries.metrics.mode":{type:"string",title:"Mode of metric endpoint.",default:"prometheus"}}}]},"nsic.nsoeConfig.distributedTracing.enable":{oneOf:[{properties:{"nsic.nsoeConfig.distributedTracing.enable":{const:!1}}},{properties:{"nsic.nsoeConfig.distributedTracing.enable":{const:!0},"nsic.nsoeConfig.distributedTracing.samplingrate":{type:"number",title:"OpenTracing sampling rate",default:100,minimum:1,maximum:100}}}]}}}]}}},nsncSettings:{type:"object",title:"Routing Settings for Tier-1 VPX or MPX",required:["nsnc.vtepIP","nsnc.network","nsnc.vxlan.id","nsnc.vxlan.port"],properties:{"nsnc.enabled":{type:"boolean",title:"Deploy NetScaler Node Controller",default:!1}},dependencies:{"nsnc.enabled":{oneOf:[{properties:{"nsnc.enabled":{const:!1},"nsic.nodeWatch":{type:"boolean",title:"Node Watch",default:!1}}},{properties:{"nsnc.enabled":{const:!0},"nsnc.image":{type:"string",title:"NetScaler Node Controller Image",default:"quay.io/citrix/citrix-k8s-node-controller:2.0.0"},"nsnc.pullPolicy":{type:"object",title:"Image Pull Policy",properties:{pullPolicy:{type:"string",default:"IfNotPresent",enum:["Always","IfNotPresent","Never"]}}},"nsnc.vtepIP":{type:"string",title:"NetScaler ADC SNIP",format:"ipv4"},"nsnc.vxlan.id":{type:"number",title:"VxLAN ID",default:2,minimum:2,maximum:16777215},"nsnc.vxlan.port":{type:"number",title:"VxLAN Port",minimum:1,maximum:65434},"nsnc.network":{type:"string",title:"Network"}}}]}}},cpxSettings:{type:"object",title:"Tier-2: NetScaler ADC CPX Settings",properties:{"cpx.enabled":{type:"boolean",title:"Enable CPX",default:!0},"cpx.image":{type:"string",title:"NetScaler ADC CPX Image",default:"quay.io/citrix/citrix-k8s-cpx-ingress:13.0-64.35"},"cpx.pullPolicy":{type:"object",title:"Image Pull Policy",properties:{pullPolicy:{type:"string",default:"IfNotPresent",enum:["Always","IfNotPresent","Never"]}}}}},entitySettings:{type:"object",title:"Entity Level Settings for NetScaler ADC CPX",properties:{"cpx.entityPrefix":{type:"string",title:"ADC Entity Prefix",default:"k8s"},"cpx.defaultSSLCertSecret":{type:"string",title:"Default SSL Certificate for CPX"}}},cpxDeploymentSettings:{type:"object",title:"Tier-2 Ingress Controller Settings",properties:{"cpx.ingressClass":{type:"array",title:"Ingress Classes for Controller in Tier-2",items:{type:"object",properties:{"Ingress Class:":{type:"string"}}}},"cpx.logLevel":{type:"object",title:"Log Level Settings for Ingress Controller in Tier-2",properties:{logLevel:{type:"string",default:"INFO",enum:["DEBUG","INFO","WARN","ERROR","TRACE"]}}}}},cpxnsicAdvancedSettings:{type:"object",title:"Tier-2 NetScaler Ingress Controller Advanced Settings",properties:{"cpx.nsicSettings.required":{type:"boolean",title:"Use NetScaler Ingress Controller Advanced Settings",default:!1}},dependencies:{"cpx.nsicSettings.required":{oneOf:[{properties:{"cpx.nsicSettings.required":{const:!1}}},{properties:{"cpx.nsicSettings.required":{const:!0},"cpx.nsicSettings.nsicConfig.NS_HTTP2_SERVER_SIDE":{type:"object",title:"Enable HTTP2 in Server Side",properties:{NS_HTTP2_SERVER_SIDE:{type:"string",default:"OFF",enum:["ON","OFF"]}}},"cpx.nsicSettings.nsicConfig.NS_COOKIE_VERSION":{type:"object",title:"Persistence cookie version",properties:{NS_COOKIE_VERSION:{type:"string",default:"0",enum:["0","1"]}}}}}]}}},cpxnodeSelectorSettings:{type:"object",title:"NetScaler ADC Node Selector Settings for NetScaler ADC CPX",properties:{"cpx.nodeSelector.key":{type:"string",title:"Key"},"cpx.nodeSelector.value":{type:"string",title:"Value"}}},admSettings:{type:"object",title:"NetScaler ADM Settings for NetScaler ADC CPX",properties:{"cpx.ADMSettings.licenseServerIP":{type:"string",title:"License Server IP",format:"ipv4"},"cpx.ADMSettings.licenseServerPort":{type:"number",title:"License Server Port",minimum:1,maximum:65535,default:27e3},"cpx.ADMSettings.ADMIP":{type:"string",title:"ADM IP",format:"ipv4"},"cpx.ADMSettings.ADMFingerPrint":{type:"string",title:"ADM FingerPrint"},"cpx.ADMSettings.loginSecret":{type:"string",title:"Login Secret for ADM"},"cpx.ADMSettings.bandWidthLicense":{type:"boolean",title:"Set Bandwidth for CPX",default:!1},"cpx.ADMSettings.vCPULicense":{type:"boolean",title:"Set Cores for CPX",default:!1}},dependencies:{"cpx.ADMSettings.bandWidthLicense":{oneOf:[{properties:{"cpx.ADMSettings.bandWidthLicense":{const:!1}}},{properties:{"cpx.ADMSettings.bandWidthLicense":{const:!0},"cpx.ADMSettings.bandWidth":{type:"number",title:"Bandwidth",default:1e3},"cpx.ADMSettings.cpxCores":{type:"number",title:"Number of CPU Cores",default:1}}}]},"cpx.ADMSettings.vCPULicense":{oneOf:[{properties:{"cpx.ADMSettings.vCPULicense":{const:!1}}},{properties:{"cpx.ADMSettings.vCPULicense":{const:!0},"cpx.ADMSettings.cpxCores":{type:"number",title:"Number of CPU Cores",default:1}}}]}}},cpxnsoeConfig:{type:"object",title:"NetScaler Observability Exporter Config for NetScaler ADC CPX",properties:{"cpx.nsoeConfig.required":{type:"boolean",title:"COE ConfigMap for Citrx CPX Ingress Controller",default:!1}},dependencies:{"cpx.nsoeConfig.required":{oneOf:[{properties:{"cpx.nsoeConfig.required":{const:!1}}},{properties:{"cpx.nsoeConfig.required":{const:!0},"cpx.nsoeConfig.endpoint.server":{type:"string",title:"DNS/IPAddress of the analytics server"},"cpx.nsoeConfig.timeseries.port":{type:"number",title:"Port number of timeseries endpoint of the analytics server.",default:30002,minimum:1,maximum:65535},"cpx.nsoeConfig.distributedTracing.enable":{type:"boolean",title:"Enable Tracing",default:!1},"cpx.nsoeConfig.timeseries.metrics.enable":{type:"boolean",title:"Enable sending metrics from NetScaler ADC to prometheus",default:!0},"cpx.nsoeConfig.timeseries.auditlogs.enable":{type:"boolean",title:"Export auditlog from NetScaler ADC",default:!0},"cpx.nsoeConfig.timeseries.events.enable":{type:"boolean",title:"Export events from NetScaler ADC",default:!0},"cpx.nsoeConfig.transactions.enable":{type:"boolean",title:"Export transactions from NetScaler ADC ",default:!0}},dependencies:{"cpx.nsoeConfig.transactions.enable":{oneOf:[{properties:{"cpx.nsoeConfig.transactions.enable":{const:!1}}},{properties:{"cpx.nsoeConfig.transactions.enable":{const:!0},"cpx.nsoeConfig.transactions.port":{type:"number",title:"Port number of transactional endpoint of analytics server",default:30001,minimum:1,maximum:65535}}}]},"cpx.nsoeConfig.timeseries.metrics.enable":{oneOf:[{properties:{"cpx.nsoeConfig.timeseries.metrics.enable":{const:!1}}},{properties:{"cpx.nsoeConfig.timeseries.metrics.enable":{const:!0},"cpx.nsoeConfig.timeseries.metrics.mode":{type:"string",title:"Mode of metric endpoint.",default:"prometheus"}}}]},"cpx.nsoeConfig.distributedTracing.enable":{oneOf:[{properties:{"cpx.nsoeConfig.distributedTracing.enable":{const:!1}}},{properties:{"cpx.nsoeConfig.distributedTracing.enable":{const:!0},"cpx.nsoeConfig.distributedTracing.samplingrate":{type:"number",title:"OpenTracing sampling rate",default:100}}}]}}}]}}},cpxexporterSettings:{type:"object",title:"NetScaler ADC Metrics Exporter Settings for NetScaler ADC CPX",properties:{"cpx.exporter.required":{type:"boolean",title:"Deploy NetScaler ADC Metrics Exporter for CPX"}},dependencies:{"cpx.exporter.required":{oneOf:[{properties:{"cpx.exporter.required":{const:!1}}},{properties:{"cpx.exporter.required":{const:!0},"cpx.exporter.image":{type:"string",title:"NetScaler ADC Metrics Exporter Image",default:"quay.io/citrix/citrix-adc-metrics-exporter:1.4.6"},"cpx.exporter.pullPolicy":{type:"object",title:"Image Pull Policy",properties:{pullPolicy:{type:"string",default:"IfNotPresent",enum:["Always","IfNotPresent","Never"]}}},"cpx.exporter.ports.containerPort":{type:"number",title:"Exporter Container Port",default:8888,minimum:1,maximum:65535}}}]}}},platformSetting:{type:"object",title:"Platform Setting",properties:{"nsic.openshift":{type:"boolean",title:"Openshift",default:!1}}},crdsSettings:{type:"object",title:"NetScaler CRDs Settings",properties:{"nsic.crds.install":{type:"boolean",title:"Install NetScaler CRDs",default:!0}},dependencies:{"nsic.crds.install":{oneOf:[{properties:{"nsic.crds.install":{const:!1}}},{properties:{"nsic.crds.install":{const:!0},"nsic.crds.retainOnDelete":{type:"boolean",title:"Retain NetScaler CRDs on delete",default:!1}}}]}}},nsoeSettings:{type:"object",title:"NetScaler Observability Exporter Settings",properties:{"nsoe.enabled":{type:"boolean",title:"Deploy NetScaler Observability Exporter?",default:!1}},dependencies:{"nsoe.enabled":{oneOf:[{properties:{"nsoe.enabled":{const:!1}}},{properties:{"nsoe.enabled":{const:!0},"nsoe.image":{type:"string",title:"NetScaler Observability Exporter",default:"quay.io/citrix/citrix-observability-exporter:1.2.001"},"nsoe.pullPolicy":{type:"object",title:"Image Pull Policy",properties:{pullPolicy:{type:"string",default:"IfNotPresent",enum:["Always","IfNotPresent","Never"]}}},"nsoe.transaction.nodePort":{type:"number",title:"Transaction NodePort",default:30001,minimum:1,maximum:65535},"nsoe.timeseries.enabled":{type:"boolean",title:"TimeSeries",default:!0},"nsoe.ns_tracing.enabled":{type:"boolean",title:"Tracing",default:!1},"nsoe.elasticsearch.enabled":{type:"boolean",title:"ElasticSearch",default:!1},"nsoe.kafka.enabled":{type:"boolean",title:"Kafka",default:!1}},dependencies:{"nsoe.ns_tracing.enabled":{oneOf:[{properties:{"nsoe.ns_tracing.enabled":{const:!1}}},{properties:{"nsoe.ns_tracing.enabled":{const:!0},"nsoe.ns_tracing.server":{type:"string",title:"Tracing Server",default:"zipkin:9411/api/v1/spans"}}}]},"nsoe.elasticsearch.enabled":{oneOf:[{properties:{"nsoe.elasticsearch.enabled":{const:!1}}},{properties:{"nsoe.elasticsearch.enabled":{const:!0},"nsoe.elasticsearch.server":{type:"string",title:"ElasticSearch Server EndPoint",default:"elasticsearch:9200"}}}]},"nsoe.kafka.enabled":{oneOf:[{properties:{"nsoe.kafka.enabled":{const:!1}}},{properties:{"nsoe.kafka.enabled":{const:!0},"nsoe.kafka.broker":{type:"string",title:"Kafka Broker"},"nsoe.kafka.topic":{type:"string",title:"Kafka Topic",default:"HTTP"}}}]},"nsoe.timeseries.enabled":{oneOf:[{properties:{"nsoe.timeseries.enabled":{const:!1}}},{properties:{"nsoe.timeseries.enabled":{const:!0},"nsoe.timeseries.nodePort":{type:"number",title:"Timeseries NodePort",default:30002,minimum:1,maximum:65535}}}]}}}]}}}}},Z={adcSettings:{"nsic.enabled":{"ui:widget":"hidden"},"nsic.nsIP":{"ui:placeholder":"X.X.X.X","ui:autofocus":!0,"ui:description":"NetScaler ADC NSIP/SNIP, SNIP in case of HA (mgmt has to be enabled)"},"nsic.nsPort":{"ui:description":"NetScaler ADC Management Port"},"nsic.nsProtocol":{"ui:description":"Protocol used for NetScaler ADC Management"},"nsic.adcCredentialSecret":{"ui:description":"Create a Kubernetes secret for the credentials of NetScaler ADC MPX or VPX using the following command: <kubectl create secret generic nslogin --from-literal=username='username' --from-literal=password='password'>"}},entity:{"nsic.entityPrefix":{"ui:description":"Resources created on the NetScaler ADC will have this prefix in their name. Only alphanumeric string is valid."},"nsic.defaultSSLCertSecret":{"ui:description":"Kubernetes secret resource name which to be used as default SSL certificate in NetScaler ADC"}},platformSetting:{"ui:description":"Set to true if charts are being deployed in OpenShift environment","nsic.openshift":{"ui:description":"Openshift is set to true if charts are being deployed in OpenShift environment."}},nsicSettings:{"nsic.ipam":{"ui:widget":"hidden"},"nsic.license.accept":{"ui:widget":"hidden"},"nsic.kubernetesURL":{"ui:description":"The kube-apiserver url that NetScaler Ingress Controller uses to register the events. If the value is not specified, CIC uses the internal kube-apiserver IP address."},"nsic.logLevel":{"ui:description":"Log Level for NetScaler Ingress Controller Logs"},"nsic.ingressClass":{"ui:description":"Ingress class ensures that a particular set of ingress resources would be processed by NetScaler Ingress Controller."},"nsic.image":{"ui:description":"NetScaler Ingress Controller image"},"nsic.pullPolicy":{"ui:description":"Image Pull Policy for NetScaler Ingress Controller Image Pull Policy"}},nsicAdvancedSettings:{"nsic.nsicSettings.nsicConfig.NS_HTTP2_SERVER_SIDE":{"ui:description":"Enables HTTP2 for NetScaler ADC service group configurations"},"nsic.nsicSettings.nsicConfig.NS_COOKIE_VERSION":{"ui:description":"Specify the persistence cookie version"}},crdsSettings:{"nsic.crds.retainOnDelete":{"ui:description":"if set to true, then NetScaler CRDs will not be deleted during helm delete"}},nsoeConfig:{"ui:description":"Select below settings to send metrics, events, transactions to NetScaler Observability Exporter from NetScaler ADC","nsic.nsoeConfig.endpoint.server":{"ui:description":"Specify the DNS or IP address of the analytics server (NetScaler Observability Exporter)"},"nsic.nsoeConfig.timeseries.metrics.mode":{"ui:widget":"hidden"}},cpxnsoeConfig:{"ui:description":"Select below settings to send metrics, events, transactions to NetScaler Observability Exporter from NetScaler ADC","cpx.nsoeConfig.endpoint.server":{"ui:description":"Specify the DNS or IP address of the analytics server (NetScaler Observability Exporter)"},"cpx.nsoeConfig.timeseries.metrics.mode":{"ui:widget":"hidden"}},nsoeSettings:{"ui:description":"NetScaler Observability Exporter collects metrics and transactions from NetScaler ADCs and transforms them to suitable formats (such as JSON, AVRO) for supported endpoints. For info <https://github.com/citrix/citrix-observability-exporter>","nsoe.image":{"ui:description":"COE Image"},"nsoe.pullPolicy":{"ui:description":"COE Image pull policy"},"nsoe.timeseries.enabled":{"ui:description":"Set true to enable sending timeseries data to prometheus."},"nsoe.ns_tracing.server":{"ui:description":"The tracing server api endpoint."},"nsoe.transaction.nodePort":{"ui:description":"Specify the port used to expose COE service outside cluster for transaction endpoint."},"nsoe.elasticsearch.server":{"ui:description":"The Elasticsearch server api endpoint. Note: To use ElasticSearch make sure Kafka is disabled"},"nsoe.kafka.broker":{"ui:description":"The kafka broker IP or FQDN details. Note: To use Kafka make sure Elasticsearch is disabled"},"nsoe.kafka.topic":{"ui:description":"The kafka topic details to upload data"},"nsoe.timeseries.nodePort":{"ui:description":"Specify the port used to expose COE service outside cluster for timeseries endpoint."}},nsncSettings:{"ui:description":"Choose anyone. Select Node Watch to automatically configure routes on the NetScaler ADC to point to the pod networks on the nodes. Select CNC to create network between the Kubernetes cluster and ingress device.","nsnc.vxlan.id":{"ui:description":"A unique VXLAN VNID to create a VXLAN overlay between Kubernetes cluster and the ingress devices. Note: Ensure that the VXLAN VNID that you use does not conflict with the Kubernetes cluster or NetScaler ADC VXLAN VNID. You can use the show vxlan command on your NetScaler ADC to view the VXLAN VNID"},"nsnc.vxlan.port":{"ui:description":"The VXLAN port that you want to use for the overlay. Note: Ensure that the VXLAN PORT that you use does not conflict with the Kubernetes cluster or NetScaler ADC VXLAN PORT. You can use the show vxlan command on your NetScaler ADC to view the VXLAN PORT. "},"nsnc.image":{"ui:description":"CNC Image"},"nsnc.pullPolicy":{"ui:description":"CNC image pull policy"},"nsnc.vtepIP":{"ui:description":"The Ingress NetScaler ADC SNIP. This IP address is used to establish an overlay network between the Kubernetes clusters."},"nsnc.network":{"ui:description":"The IP address range (for example, 192.128.1.0/24) that NetScaler node controller uses to configure the VTEP overlay end points on the Kubernetes nodes. Note: Ensure that the subnet that you provide is different from your Kubernetes cluster."},"nsic.nodeWatch":{"ui:description":"When checked, routes on the NetScaler ADC are automatically configured to point to the pod networks on the nodes"}},cpxSettings:{"cpx.enabled":{"ui:widget":"hidden"},"cpx.license.accept":{"ui:widget":"hidden"},"cpx.entityPrefix":{"ui:description":"Resources created on the CPX will have this prefix in their name"},"cpx.defaultSSLCertSecret":{"ui:description":"Kubernetes secret resource name which to be used as default SSL certificate in NetScaler ADC."},"cpx.image":{"ui:description":"CPX Image"},"cpx.pullPolicy":{"ui:description":"CPX Image Pull Policy"}},cpxexporterSettings:{"ui:description":"NetScaler metrics exporter scrapes NetScaler ADC stats and exports them via HTTP to Prometheus. For info:<https://github.com/citrix/citrix-adc-metrics-exporter>","cpx.exporter.image":{"ui:description":"NetScaler ADC Metrics Exporter Image"},"cpx.exporter.pullPolicy":{"ui:description":"NetScaler ADC Metrics Exporter image pull policy"},"cpx.exporter.ports.containerPort":{"ui:description":"Specify on which port metrics collected by the exporter should be exposed. Agents like Prometheus will need to scrape this port of the container to collected metrics"}},cpxdeploymentSettings:{"cpx.ingressClass":{"ui:description":"Ingress class ensures that a particular set of ingress resources would be processed by CIC."},"cpx.logLevel":{"ui:description":"Log Level for CIC Logs"}},nodeSelectorSettings:{"nsic.nodeSelector.key":{"ui:description":"Node label key to be used for nodeSelector option for CPX-CIC deployment."},"nsic.nodeSelector.value":{"ui:description":"Node label value to be used for nodeSelector option in CPX-CIC deployment."}},cpxnodeSelectorSettings:{"cpx.nodeSelector.key":{"ui:description":"Node label key to be used for nodeSelector option for CPX-CIC deployment."},"cpx.nodeSelector.value":{"ui:description":"Node label value to be used for nodeSelector option in CPX-CIC deployment."}},admSettings:{"cpx.ADMSettings.licenseServerIP":{"ui:description":"NetScaler Application Delivery Management (ADM) IP address to license NetScaler ADC CPX. For more information, see <https://developer-docs.citrix.com/projects/citrix-k8s-ingress-controller/en/latest/licensing/>"},"cpx.ADMSettings.licenseServerPort":{"ui:description":"License Server Port"},"cpx.ADMSettings.ADMIP":{"ui:description":"NetScaler Application Delivery Management (ADM) IP address for generating ServiceGraph"},"cpx.ADMSettings.ADMFingerPrint":{"ui:description":"NetScaler ADM FingerPrint"},"cpx.ADMSettings.loginSecret":{"ui:description":"The secret key to login to the ADM. Use 'kubectl create secret generic admlogin --from-literal=username=<adm-username> --from-literal=password=<adm-password> -n <namespace>'"},"cpx.ADMSettings.bandWidthLicense":{"ui:description":"Select to provide Bandwidth for CPX"},"cpx.ADMSettings.vCPULicense":{"ui:description":"Select to specify cores for CPX"},"cpx.ADMSettings.bandWidth":{"ui:description":"Provide bandwidth value in Mbps"},"cpx.ADMSettings.cpxCores":{"ui:description":"Number of Cores for CPX"}},cpxnsicAdvancedSettings:{"cpx.nsicSettings.nsicConfig.NS_HTTP2_SERVER_SIDE":{"ui:description":"Enables HTTP2 for NetScaler ADC service group configurations"},"cpx.nsicSettings.nsicConfig.NS_COOKIE_VERSION":{"ui:description":"Specify the persistence cookie version"}},exporterSettings:{"ui:description":"NetScaler metrics exporter scrapes NetScaler ADC stats and exports them via HTTP to Prometheus. For info:<https://github.com/citrix/citrix-adc-metrics-exporter>","nsic.exporter.image":{"ui:description":"NetScaler ADC Metrics Exporter Image"},"nsic.exporter.pullPolicy":{"ui:description":"NetScaler ADC Metrics Exporter image pull policy"},"nsic.exporter.ports.containerPort":{"ui:description":"Specify on which port metrics collected by the exporter should be exposed. Agents like Prometheus will need to scrape this port of the container to collected metrics"}},entitySettings:{"cpx.entityPrefix":{"ui:description":"Resources created on the CPX will have this prefix in their name"},"cpx.defaultSSLCertSecret":{"ui:description":"Kubernetes secret resource name which to be used as default SSL certificate in NetScaler ADC."}}},ee={properties:{xDSAdaptoSettings:{type:"object",title:"NetScaler xDS Adaptor Settings",properties:{"iaEgress.enabled":{type:"boolean",title:"iaEgress",default:!0},"iaEgress.xDSAdaptor.image":{type:"string",title:"NetScaler xDS Adaptor Image",default:"quay.io/citrix/citrix-xds-adaptor:0.9.5"},"iaEgress.pullPolicy":{type:"object",title:"NetScaler xDS Adaptor Image Pull Policy",properties:{pullPolicy:{type:"string",default:"IfNotPresent",enum:["Always","IfNotPresent","Never"]}}},"iaEgress.xDSAdaptor.proxyType":{type:"string",title:"Proxy Type",default:"router"},"iaEgress.xDSAdaptor.secureConnect":{type:"boolean",title:"secureConnect",default:!0}}},egressGatewaySettings:{type:"object",title:"NetScaler ADC as EgressGateway",required:["iaEgress.egressGateway.vserverIP","iaEgress.egressGateway.netscalerUrl"],properties:{"iaEgress.netscalerCPX":{type:"boolean",title:"Deploy NetScaler ADC CPX as Egress Gateway",default:!0},"iaEgress.egressGateway.label":{type:"string",title:"Label for NetScaler egressGateway ",default:"citrix-egressgateway"}},dependencies:{"iaEgress.netscalerCPX":{oneOf:[{properties:{"iaEgress.netscalerCPX":{const:!1}}},{properties:{"iaEgress.netscalerCPX":{const:!0},"iaEgress.egressGateway.image":{type:"string",title:"NetScaler ADC CPX Image ",default:"quay.io/citrix/citrix-k8s-cpx-ingress:13.0-64.35"},"iaEgress.egressGateway.EULA":{type:"boolean",title:"EULA",default:!0},"iaEgress.egressGateway.mgmtHttpPort":{type:"number",title:"NetScaler ADC CPX Mgmt HTTP Port",default:10080,minimum:1,maximum:65535},"iaEgress.egressGateway.mgmtHttpsPort":{type:"number",title:"NetScaler ADC CPX Mgmt HTTPSPort",default:10443,minimum:1,maximum:65535},"iaEgress.egressGateway.httpNodePort":{type:"number",title:"HTTP Node Port for NetScaler CPX ",default:30180,minimum:1,maximum:65535},"iaEgress.egressGateway.httpsNodePort":{type:"number",title:"HTTPS Node Port for NetScaler CPX ",default:31443,minimum:1,maximum:65535},"iaEgress.egressGateway.lightWeightCPX":{type:"string",title:"Deploy Light Weight NetScaler ADC CPX",default:"1"},"iaEgress.ADMSettings.ADMIP":{type:"string",title:"NetScaler ADM IP",format:"ipv4"},"iaEgress.ADMSettings.ADMFingerPrint":{type:"string",title:"NetScaler ADM FingerPrint"},"iaEgress.ADMSettings.licenseServerIP":{type:"string",title:"License Server IP",format:"ipv4"},"iaEgress.ADMSettings.bandWidthLicense":{type:"boolean",title:"Apply Bandwidth Based License",default:!1}},dependencies:{"iaEgress.ADMSettings.bandWidthLicense":{oneOf:[{properties:{"iaEgress.ADMSettings.bandWidthLicense":{const:!1}}},{properties:{"iaEgress.ADMSettings.bandWidthLicense":{const:!0},"iaEgress.ADMSettings.bandWidth":{type:"number",title:"Bandwidth value in Mbps",default:1e3,minimum:1e3}}}]}}}]}}},istioPilotSettings:{type:"object",title:"Istio Pilot Settings",properties:{"iaEgress.istioPilot.name":{type:"string",title:"Name",default:"istiod"},"iaEgress.istioPilot.namespace":{type:"string",title:"Namespace of Istio Pilot",default:"istio-system"},"iaEgress.istioPilot.secureGrpcPort":{type:"number",title:"Secure gRPS Port",default:15012},"iaEgress.istioPilot.insecureGrpcPort":{type:"number",title:"Insecure gRPC Port",default:15010},"iaEgress.istioPilot.SAN":{type:"string",title:"SAN",default:""}}},certProviderSettings:{type:"object",title:"Certificate Provider",properties:{"iaEgress.certProvider.caAddr":{type:"string",title:"CA Cert Address",default:"istiod.istio-system.svc"},"iaEgress.certProvider.caPort":{type:"number",title:"CA Port listening for CSR",default:15012},"iaEgress.certProvider.trustDomain":{type:"string",title:"Trust domain",default:"cluster.local"},"iaEgress.certProvider.certTTLinHours":{type:"number",title:"TTL for Certificates in Hours",default:720},"iaEgress.certProvider.clusterId":{type:"string",title:"Cluster ID",default:"Kubernetes"}}},exporterSettings:{type:"object",title:"NetScaler ADC Metrics Exporter Settings",properties:{"iaEgress.metricExporter.required":{type:"boolean",title:"Deploy NetScaler ADC Metrics Exporter",default:!1}},dependencies:{"iaEgress.metricExporter.required":{oneOf:[{properties:{"iaEgress.metricExporter.required":{const:!1}}},{properties:{"iaEgress.metricExporter.required":{const:!0},"iaEgress.metricExporter.image":{type:"string",title:"NetScaler ADC Metrics Exporter Image",default:"quay.io/citrix/citrix-adc-metrics-exporter:1.4.6"},"iaEgress.metricExporter.pullPolicy":{type:"object",title:"Image Pull Policy",properties:{pullPolicy:{type:"string",default:"IfNotPresent",enum:["Always","IfNotPresent","Never"]}}},"iaEgress.metricExporter.ports.containerPort":{type:"number",title:"Exporter Container Port",default:8888,minimum:1,maximum:65535}}}]}}}}},te={xDSAdaptoSettings:{"iaEgress.enabled":{"ui:widget":"hidden"},"iaEgress.xDSAdaptor.proxyType":{"ui:widget":"hidden"},"iaEgress.xDSAdaptor.image":{"ui:description":"NetScaler ADC xDS Adaptor Image"},"iaEgress.xDSAdaptor.secureConnect":{"ui:description":"When set to true, xDS-adaptor establishes secure gRPC channel with Istio Pilot"}},egressGatewaySettings:{"iaEgress.netscalerCPX":{"ui:widget":"hidden"},"iaEgress.egressGateway.lightWeightCPX":{"ui:widget":"hidden"},"iaEgress.egressGateway.secretVolume":{"ui:description":"A map of user defined volumes to be mounted using Kubernetes secrets."},"iaEgress.egressGateway.label":{"ui:description":"Custom label for the Egress Gateway service"},"iaEgress.egressGateway.tcpPort":{"ui:description":"For exposing multiple TCP Egress"},"iaEgress.egressGateway.vserverIP":{"ui:description":"Virtual server IP address on NetScaler ADC VPX/MPX"},"iaEgress.egressGateway.netscalerUrl":{"ui:description":"URL or IP address of the NetScaler ADC which Istio-adaptor configures "},"iaEgress.egressGateway.adcServerName":{"ui:description":"NetScaler ADC ServerName used in the NetScaler ADC certificate"},"iaEgress.egressGateway.netProfile":{"ui:description":"Network profile name used by NetScaler Node Controller to configure NetScaler ADC VPX or MPX which is deployed as Egress Gateway"},"iaEgress.egressGateway.image":{"ui:description":"NetScaler ADC CPX Image"},"iaEgress.egressGateway.EULA":{"ui:widget":"hidden"},"iaEgress.egressGateway.mgmtHttpPort":{"ui:description":"Management port of the NetScaler ADC CPX"},"iaEgress.egressGateway.mgmtHttpsPort":{"ui:description":"Secure Management port of the NetScaler ADC CPX"},"iaEgress.egressGateway.httpNodePort":{"ui:description":"Port on host machine which is used to expose HTTP port (80) of NetScaler ADC CPX"},"iaEgress.egressGateway.httpsNodePort":{"ui:description":"Port on host machine which is used to expose HTTPS port (443) of NetScaler ADC CPX"},"iaEgress.ADMSettings.ADMIP":{"ui:description":"NetScaler Application Delivery Management (ADM) IP address"},"iaEgress.ADMSettings.ADMFingerPrint":{"ui:description":"NetScaler Application Delivery Management (ADM) FingerPrint. For more information, visit <https://docs.citrix.com/en-us/citrix-application-delivery-management-service/application-analytics-and-management/service-graph.html>"},"iaEgress.ADMSettings.licenseServerIP":{"ui:description":"NetScaler License Server IP address"},"iaEgress.ADMSettings.licenseServerPort":{"ui:description":"NetScaler License Server {Port}"},"iaEgress.ADMSettings.bandWidthLicense":{"ui:description":"To specify bandwidth based licensing"},"iaEgress.ADMSettings.bandWidth":{"ui:description":"Desired bandwidth capacity to be set for NetScaler ADC CPX in Mbps\t"}},certProviderSettings:{"iaEgress.certProvider.clusterId":{"ui:widget":"hidden"},"iaEgress.certProvider.caAddr":{"ui:description":"Certificate Authority (CA) address issuing certificate to application"},"iaEgress.certProvider.caPort":{"ui:description":"Certificate Authority (CA) port issuing certificate to application"},"iaEgress.certProvider.trustDomain":{"ui:description":"SPIFFE Trust Domain"},"iaEgress.certProvider.certTTLinHours":{"ui:description":"Validity of certificate generated by xds-adaptor and signed by Istiod (Istio Citadel) in hours. Default is 30 days validity"}},nsoeSettings:{"iaEgress.nsoe.nsoeURL":{"ui:description":" Name of NetScaler Observability Exporter Service in the form of ' . '"}},exporterSettings:{"ui:description":"NetScaler metrics exporter scrapes NetScaler ADC stats and exports them via HTTP to Prometheus. For info:<https://github.com/citrix/citrix-adc-metrics-exporter>","iaEgress.metricExporter.image":{"ui:description":"NetScaler ADC Metrics Exporter Image"},"iaEgress.metricExporter.pullPolicy":{"ui:description":"NetScaler ADC Metrics Exporter image pull policy"},"iaEgress.metricExporter.ports.containerPort":{"ui:description":"Specify on which port metrics collected by the exporter should be exposed. Agents like Prometheus will need to scrape this port of the container to collected metrics"}},istioPilotSettings:{"iaEgress.istioPilot.name":{"ui:description":"Name of the Istio Pilot (Istiod) service"},"iaEgress.istioPilot.namespace":{"ui:description":"Namespace where Istio Pilot is running"},"iaEgress.istioPilot.secureGrpcPort":{"ui:description":"Secure GRPC port where Istiod (Istio Pilot) is listening (default setting)"},"iaEgress.istioPilot.insecureGrpcPort":{"ui:description":"Insecure GRPC port where Istio Pilot is listening"},"iaEgress.istioPilot.SAN":{"ui:description":"Subject alternative name for Istio Pilot which is the secure production identity framework for everyone (SPIFFE) ID of Istio Pilot"}},nsncSettings:{"nsnc.vxlan.id":{"ui:description":"A unique VXLAN VNID to create a VXLAN overlay between Kubernetes cluster and the Egress devices."},"nsnc.vxlan.port":{"ui:description":"The VXLAN port that you want to use for the overlay. Note: Ensure that the VXLAN PORT that you use does not conflict with the Kubernetes cluster or NetScaler ADC VXLAN PORT. You can use the show vxlan command on your NetScaler ADC to view the VXLAN PORT. "},"nsnc.image":{"ui:description":"CNC Image"},"nsnc.pullPolicy":{"ui:description":"CNC image pull policy"},"nsnc.vtepIP":{"ui:description":"SNIP of NetScaler ADC VPX or MPX"},"nsnc.network":{"ui:description":"The IP address range (for example, 192.128.1.0/24) that NetScaler node controller uses to configure the VTEP overlay end points on the Kubernetes nodes. Note: Ensure that the subnet that you provide is different from your Kubernetes cluster."},"nsnc.nsIP":{"ui:description":"The Management IP address of the NetScaler ADC device VPX or MPX"}}},ie={properties:{gslbadcSettings:{type:"object",title:"Common NetScaler ADC Settings",properties:{"gslb.enabled":{type:"boolean",default:!0},"gslb.nsPort":{type:"number",title:"Management Port for NetScaler ADC",default:443,maximum:65535,minimum:1},"gslb.nsProtocol":{type:"object",title:"NetScaler ADC Management Protocol",properties:{nsProtocol:{type:"string",default:"HTTPS",enum:["HTTPS","HTTP"]}}}}},entity:{type:"object",title:"Entity related",properties:{"gslb.entityPrefix":{type:"string",title:"NetScaler ADC Entity Prefix",default:"k8s"}}},platformSetting:{type:"object",title:"Platform Setting",properties:{"gslb.openshift":{type:"boolean",title:"Openshift",default:!1}}},gslbnsicSettings:{type:"object",title:"NetScaler Gslb Ingress Controller Settings",required:["gslb.localRegion","gslb.localCluster"],properties:{"gslb.image":{type:"string",title:"NetScaler Gslb Ingress Controller Image",default:"quay.io/citrix/citrix-k8s-ingress-controller:1.9.20"},"gslb.pullPolicy":{type:"object",title:"Image Pull Policy",properties:{pullPolicy:{type:"string",default:"IfNotPresent",enum:["Always","IfNotPresent","Never"]}}},"gslb.kubernetesURL":{type:"string",title:"Kubernetes API-server URL",format:"url"},"gslb.license.accept":{type:"string",default:"Yes"},"gslb.logLevel":{type:"object",title:"Ingress Controller Log Level",properties:{logLevel:{type:"string",default:"INFO",enum:["DEBUG","INFO","WARN","ERROR","TRACE"]}}},"gslb.localRegion":{type:"string",title:"Local Region"},"gslb.localCluster":{type:"string",title:"Local ClusterName"}}},siteSettings:{type:"object",title:"Site Settings",required:["gslb.sitedata"],properties:{"gslb.sitedata":{type:"array",title:"Site Data",items:{type:"object",properties:{siteName:{type:"string",title:"Site Name"},secretName:{type:"string",title:"Secret Name"},siteIp:{type:"string",title:"Site IP",format:"ipv4"},siteRegion:{type:"string",title:"Site Region"}}}}}},crdsSettings:{type:"object",title:"NetScaler CRDs Settings",properties:{"gslb.crds.install":{type:"boolean",title:"Install NetScaler CRDs",default:!0}},dependencies:{"gslb.crds.install":{oneOf:[{properties:{"gslb.crds.install":{const:!1}}},{properties:{"gslb.crds.install":{const:!0},"gslb.crds.retainOnDelete":{type:"boolean",title:"Retain NetScaler CRDs on delete",default:!1}}}]}}}}},re={gslbadcSettings:{"gslb.enabled":{"ui:widget":"hidden"},"gslb.nsIP":{"ui:placeholder":"X.X.X.X","ui:autofocus":!0,"ui:description":"NetScaler ADC NSIP/SNIP, SNIP in case of HA (mgmt has to be enabled)"},"gslb.nsPort":{"ui:description":"NetScaler ADC Management Port"},"gslb.nsProtocol":{"ui:description":"Protocol used for NetScaler ADC Management"},"gslb.adcCredentialSecret":{"ui:description":"Create a Kubernetes secret for the credentials of NetScaler ADC MPX or VPX using the following command: <kubectl create secret generic nslogin --from-literal=username='username' --from-literal=password='password'>"},"gslb.http2ServerSide":{"ui:description":"Enables HTTP2 for NetScaler ADC service group configurations"}},entity:{"gslb.entityPrefix":{"ui:description":"Resources created on the NetScaler ADC will have this prefix in their name. Only alphanumeric string is valid."},"gslb.defaultSSLCertSecret":{"ui:description":"Kubernetes secret resource name which to be used as default SSL certificate in NetScaler ADC"}},platformSetting:{"ui:description":"Set to true if charts are being deployed in OpenShift environment","gslb.openshift":{"ui:description":"Openshift is set to true if charts are being deployed in OpenShift environment."}},gslbnsicSettings:{"gslb.license.accept":{"ui:widget":"hidden"},"gslb.kubernetesURL":{"ui:description":"The kube-apiserver url that NetScaler Gslb Ingress Controller uses to register the events. If the value is not specified, CIC uses the internal kube-apiserver IP address."},"gslb.logLevel":{"ui:description":"Log Level for NetScaler Gslb Ingress Controller Logs"},"gslb.ingressClass":{"ui:description":"Ingress class ensures that a particular set of ingress resources would be processed by NetScaler Gslb Ingress Controller."},"gslb.image":{"ui:description":"NetScaler Gslb Ingress Controller image"},"gslb.pullPolicy":{"ui:description":"Image Pull Policy for NetScaler Gslb Ingress Controller Image Pull Policy"},"gslb.localRegion":{"ui:description":"The region where this controller is deployed"},"gslb.localCluster":{"ui:description":"The Cluster Name where this controller is deployed"}},crdsSettings:{"gslb.crds.retainOnDelete":{"ui:description":"if set to true, then NetScaler CRDs will not be deleted during helm delete"}},siteSettings:{"gslb.sitedata":{"ui:description":"List containing ADC Site details IP, Name, Region, Secret",items:{siteName:{"ui:description":"Site Name of the GSLB site"},siteIp:{"ui:description":"Site IP of the GSLB site"},secretName:{"ui:description":"Kubernetes secret name for login credentials of Site"},siteRegion:{"ui:description":"SiteRegion of site"}}}}},se={properties:{gslbadcSettings:{type:"object",title:"Common NetScaler ADCs Settings for multi cluster",properties:{"gslb.enabled":{type:"boolean",default:!0},"gslb.nsPort":{type:"number",title:"Management Port for NetScaler ADC",default:443,maximum:65535,minimum:1},"gslb.nsProtocol":{type:"object",title:"NetScaler ADC Management Protocol",properties:{nsProtocol:{type:"string",default:"HTTPS",enum:["HTTPS","HTTP"]}}}}},gslbentity:{type:"object",title:"Common NetScaler ADCs Entity related Settings",properties:{"gslb.entityPrefix":{type:"string",title:"NetScaler ADC Entity Prefix",default:"k8s"}}},gslbplatformSetting:{type:"object",title:"Platform Setting",properties:{"gslb.openshift":{type:"boolean",title:"Openshift",default:!1}}},gslbnsicSettings:{type:"object",title:"NetScaler Gslb Ingress Controller Settings",required:["gslb.localRegion","gslb.localCluster"],properties:{"gslb.image":{type:"string",title:"NetScaler Gslb Ingress Controller Image",default:"quay.io/citrix/citrix-k8s-ingress-controller:1.9.20"},"gslb.pullPolicy":{type:"object",title:"Image Pull Policy",properties:{pullPolicy:{type:"string",default:"IfNotPresent",enum:["Always","IfNotPresent","Never"]}}},"gslb.kubernetesURL":{type:"string",title:"Kubernetes API-server URL",format:"url"},"gslb.license.accept":{type:"string",default:"Yes"},"gslb.logLevel":{type:"object",title:"Ingress Controller Log Level",properties:{logLevel:{type:"string",default:"INFO",enum:["DEBUG","INFO","WARN","ERROR","TRACE"]}}},"gslb.localRegion":{type:"string",title:"Local Region"},"gslb.localCluster":{type:"string",title:"Local ClusterName"}}},siteSettings:{type:"object",title:"Site Settings",required:["gslb.sitedata"],properties:{"gslb.sitedata":{type:"array",title:"Site Data",items:{type:"object",properties:{siteName:{type:"string",title:"Site Name"},secretName:{type:"string",title:"Secret Name"},siteIp:{type:"string",title:"Site IP",format:"ipv4"},siteRegion:{type:"string",title:"Site Region"}}}}}},nsicSettings:{type:"object",title:"NetScaler Ingress Controller Settings",properties:{"nsic.image":{type:"string",title:"NetScaler Ingress Controller Image",default:"quay.io/citrix/citrix-k8s-ingress-controller:1.9.20"},"nsic.pullPolicy":{type:"object",title:"Image Pull Policy",properties:{pullPolicy:{type:"string",default:"IfNotPresent",enum:["Always","IfNotPresent","Never"]}}},"nsic.kubernetesURL":{type:"string",title:"Kubernetes API-server URL",format:"url"},"nsic.license.accept":{type:"string",default:"Yes"},"nsic.ingressClass":{type:"array",title:"Ingress Classes for Controller",items:{type:"object",properties:{"Ingress Class:":{type:"string"}}}},"nsic.logLevel":{type:"object",title:"Ingress Controller Log Level",properties:{logLevel:{type:"string",default:"INFO",enum:["DEBUG","INFO","WARN","ERROR","TRACE"]}}}}},adcSettings:{type:"object",title:"NetScaler ADC for Ingress Controller Settings ",required:["nsic.nsIP","nsic.adcCredentialSecret"],properties:{"nsic.enabled":{type:"boolean",default:!0},"nsic.nsIP":{type:"string",title:"NetScaler ADC Management IP",format:"ipv4"},"nsic.nsPort":{type:"number",title:"Management Port for NetScaler ADC",default:443,maximum:65535,minimum:1},"nsic.nsProtocol":{type:"object",title:"NetScaler ADC Management Protocol",properties:{nsProtocol:{type:"string",default:"HTTPS",enum:["HTTPS","HTTP"]}}},"nsic.adcCredentialSecret":{type:"string",title:"Kubernetes Secret Name"}}},entity:{type:"object",title:"NetScaler ADC for Ingress Controller Entity related Settings",properties:{"nsic.entityPrefix":{type:"string",title:"NetScaler ADC Entity Prefix",default:"k8s"},"nsic.defaultSSLCertSecret":{type:"string",title:"Default SSL Certificate"}}},nodeSelectorSettings:{type:"object",title:"NetScaler ADC for Ingress Controller Node Selector Settings",properties:{"nsic.nodeSelector.key":{type:"string",title:"Key"},"nsic.nodeSelector.value":{type:"string",title:"Value"}}},nsicAdvancedSettings:{type:"object",title:"NetScaler Ingress Controller Advanced Settings",properties:{"nsic.nsicSettings.required":{type:"boolean",title:"Use NetScaler Ingress Controller Advanced Settings",default:!1}},dependencies:{"nsic.nsicSettings.required":{oneOf:[{properties:{"nsic.nsicSettings.required":{const:!1}}},{properties:{"nsic.nsicSettings.required":{const:!0},"nsic.nsicSettings.nsicConfig.NS_HTTP2_SERVER_SIDE":{type:"object",title:"Enable HTTP2 in Server Side",properties:{NS_HTTP2_SERVER_SIDE:{type:"string",default:"OFF",enum:["ON","OFF"]}}},"nsic.nsicSettings.nsicConfig.NS_COOKIE_VERSION":{type:"object",title:"Persistence cookie version",properties:{NS_COOKIE_VERSION:{type:"string",default:"0",enum:["0","1"]}}}}}]}}},nsncSettings:{type:"object",title:"Routing Settings",required:["nsnc.vtepIP","nsnc.network","nsnc.vxlan.id","nsnc.vxlan.port"],properties:{"nsnc.enabled":{type:"boolean",title:"Deploy NetScaler Node Controller",default:!1}},dependencies:{"nsnc.enabled":{oneOf:[{properties:{"nsnc.enabled":{const:!1},"nsic.nodeWatch":{type:"boolean",title:"Node Watch",default:!1}}},{properties:{"nsnc.enabled":{const:!0},"nsnc.image":{type:"string",title:"NetScaler Node Controller Image",default:"quay.io/citrix/citrix-k8s-node-controller:2.0.0"},"nsnc.pullPolicy":{type:"object",title:"Image Pull Policy",properties:{pullPolicy:{type:"string",default:"IfNotPresent",enum:["Always","IfNotPresent","Never"]}}},"nsnc.vtepIP":{type:"string",title:"NetScaler ADC SNIP",format:"ipv4"},"nsnc.vxlan.id":{type:"number",title:"VxLAN ID",default:2,minimum:2,maximum:16777215},"nsnc.vxlan.port":{type:"number",title:"VxLAN Port",minimum:1,maximum:65434},"nsnc.network":{type:"string",title:"Network"}}}]}}},exporterSettings:{type:"object",title:"NetScaler ADC Metrics Exporter Settings for NetScaler ADC for Ingress Controller ",properties:{"nsic.exporter.required":{type:"boolean",title:"Deploy NetScaler ADC Metrics Exporter"}},dependencies:{"nsic.exporter.required":{oneOf:[{properties:{"nsic.exporter.required":{const:!1}}},{properties:{"nsic.exporter.required":{const:!0},"nsic.exporter.image":{type:"string",title:"NetScaler ADC Metrics Exporter Image",default:"quay.io/citrix/citrix-adc-metrics-exporter:1.4.6"},"nsic.exporter.pullPolicy":{type:"object",title:"Image Pull Policy",properties:{pullPolicy:{type:"string",default:"IfNotPresent",enum:["Always","IfNotPresent","Never"]}}},"nsic.exporter.ports.containerPort":{type:"number",title:"Exporter Container Port",default:8888,minimum:1,maximum:65535}}}]}}},nsoeConfig:{type:"object",title:"NetScaler Observability Exporter Config for NetScaler Ingress Controller",properties:{"nsic.nsoeConfig.required":{type:"boolean",title:"COE ConfigMap for NetScaler Ingress Controller",default:!1}},dependencies:{"nsic.nsoeConfig.required":{oneOf:[{properties:{"nsic.nsoeConfig.required":{const:!1}}},{properties:{"nsic.nsoeConfig.required":{const:!0},"nsic.nsoeConfig.endpoint.server":{type:"string",title:"DNS/IPAddress of the analytics server"},"nsic.nsoeConfig.timeseries.port":{type:"number",title:"Port number of timeseries endpoint of the analytics server.",default:30002,minimum:1,maximum:65535},"nsic.nsoeConfig.distributedTracing.enable":{type:"boolean",title:"Enable Tracing",default:!1},"nsic.nsoeConfig.timeseries.metrics.enable":{type:"boolean",title:"Enable sending metrics from NetScaler ADC to prometheus",default:!0},"nsic.nsoeConfig.timeseries.auditlogs.enable":{type:"boolean",title:"Export auditlog from NetScaler ADC",default:!0},"nsic.nsoeConfig.timeseries.events.enable":{type:"boolean",title:"Export events from NetScaler ADC",default:!0},"nsic.nsoeConfig.transactions.enable":{type:"boolean",title:"Export transactions from NetScaler ADC ",default:!0}},dependencies:{"nsic.nsoeConfig.transactions.enable":{oneOf:[{properties:{"nsic.nsoeConfig.transactions.enable":{const:!1}}},{properties:{"nsic.nsoeConfig.transactions.enable":{const:!0},"nsic.nsoeConfig.transactions.port":{type:"number",title:"Port number of transactional endpoint of analytics server",default:30001,minimum:1,maximum:65535}}}]},"nsic.nsoeConfig.timeseries.metrics.enable":{oneOf:[{properties:{"nsic.nsoeConfig.timeseries.metrics.enable":{const:!1}}},{properties:{"nsic.nsoeConfig.timeseries.metrics.enable":{const:!0},"nsic.nsoeConfig.timeseries.metrics.mode":{type:"string",title:"Mode of metric endpoint.",default:"prometheus"}}}]},"nsic.nsoeConfig.distributedTracing.enable":{oneOf:[{properties:{"nsic.nsoeConfig.distributedTracing.enable":{const:!1}}},{properties:{"nsic.nsoeConfig.distributedTracing.enable":{const:!0},"nsic.nsoeConfig.distributedTracing.samplingrate":{type:"number",title:"OpenTracing sampling rate",default:100,minimum:1,maximum:100}}}]}}}]}}},nsoeSettings:{type:"object",title:"NetScaler Observability Exporter Settings",properties:{"nsoe.enabled":{type:"boolean",title:"Deploy NetScaler Observability Exporter",default:!1}},dependencies:{"nsoe.enabled":{oneOf:[{properties:{"nsoe.enabled":{const:!1}}},{properties:{"nsoe.enabled":{const:!0},"nsoe.image":{type:"string",title:"NetScaler Observability Exporter",default:"quay.io/citrix/citrix-observability-exporter:1.2.001"},"nsoe.pullPolicy":{type:"object",title:"Image Pull Policy",properties:{pullPolicy:{type:"string",default:"IfNotPresent",enum:["Always","IfNotPresent","Never"]}}},"nsoe.transaction.nodePort":{type:"number",title:"Transaction NodePort",default:30001,minimum:1,maximum:65535},"nsoe.timeseries.enabled":{type:"boolean",title:"TimeSeries",default:!0},"nsoe.ns_tracing.enabled":{type:"boolean",title:"Tracing",default:!1},"nsoe.elasticsearch.enabled":{type:"boolean",title:"ElasticSearch",default:!1},"nsoe.kafka.enabled":{type:"boolean",title:"Kafka",default:!1}},dependencies:{"nsoe.ns_tracing.enabled":{oneOf:[{properties:{"nsoe.ns_tracing.enabled":{const:!1}}},{properties:{"nsoe.ns_tracing.enabled":{const:!0},"nsoe.ns_tracing.server":{type:"string",title:"Tracing Server",default:"zipkin:9411/api/v1/spans"}}}]},"nsoe.elasticsearch.enabled":{oneOf:[{properties:{"nsoe.elasticsearch.enabled":{const:!1}}},{properties:{"nsoe.elasticsearch.enabled":{const:!0},"nsoe.elasticsearch.server":{type:"string",title:"ElasticSearch Server EndPoint",default:"elasticsearch:9200"}}}]},"nsoe.kafka.enabled":{oneOf:[{properties:{"nsoe.kafka.enabled":{const:!1}}},{properties:{"nsoe.kafka.enabled":{const:!0},"nsoe.kafka.broker":{type:"string",title:"Kafka Broker"},"nsoe.kafka.topic":{type:"string",title:"Kafka Topic",default:"HTTP"}}}]},"nsoe.timeseries.enabled":{oneOf:[{properties:{"nsoe.timeseries.enabled":{const:!1}}},{properties:{"nsoe.timeseries.enabled":{const:!0},"nsoe.timeseries.nodePort":{type:"number",title:"Timeseries NodePort",default:30002,minimum:1,maximum:65535}}}]}}}]}}},crdsSettings:{type:"object",title:"NetScaler CRDs Settings",properties:{"gslb.crds.install":{type:"boolean",title:"Install NetScaler CRDs",default:!0}},dependencies:{"gslb.crds.install":{oneOf:[{properties:{"gslb.crds.install":{const:!1}}},{properties:{"gslb.crds.install":{const:!0},"gslb.crds.retainOnDelete":{type:"boolean",title:"Retain NetScaler CRDs on delete",default:!1}}}]}}}}},ne={gslbadcSettings:{"gslb.enabled":{"ui:widget":"hidden"},"gslb.nsIP":{"ui:placeholder":"X.X.X.X","ui:autofocus":!0,"ui:description":"NetScaler ADC NSIP/SNIP, SNIP in case of HA (mgmt has to be enabled)"},"gslb.nsPort":{"ui:description":"NetScaler ADC Management Port"},"gslb.nsProtocol":{"ui:description":"Protocol used for NetScaler ADC Management"},"gslb.adcCredentialSecret":{"ui:description":"Create a Kubernetes secret for the credentials of NetScaler ADC MPX or VPX using the following command: <kubectl create secret generic nslogin --from-literal=username='username' --from-literal=password='password'>"}},gslbentity:{"gslb.entityPrefix":{"ui:description":"Resources created on the NetScaler ADC will have this prefix in their name. Only alphanumeric string is valid."},"gslb.defaultSSLCertSecret":{"ui:description":"Kubernetes secret resource name which to be used as default SSL certificate in NetScaler ADC"}},gslbplatformSetting:{"ui:description":"Set to true if charts are being deployed in OpenShift environment","gslb.openshift":{"ui:description":"Openshift is set to true if charts are being deployed in OpenShift environment."}},gslbnsicSettings:{"gslb.license.accept":{"ui:widget":"hidden"},"gslb.kubernetesURL":{"ui:description":"The kube-apiserver url that NetScaler Gslb Ingress Controller uses to register the events. If the value is not specified, CIC uses the internal kube-apiserver IP address."},"gslb.logLevel":{"ui:description":"Log Level for NetScaler Gslb Ingress Controller Logs"},"gslb.ingressClass":{"ui:description":"Ingress class ensures that a particular set of ingress resources would be processed by NetScaler Gslb Ingress Controller."},"gslb.image":{"ui:description":"NetScaler Gslb Ingress Controller image"},"gslb.pullPolicy":{"ui:description":"Image Pull Policy for NetScaler Gslb Ingress Controller Image Pull Policy"},"gslb.localRegion":{"ui:description":"The region where this controller is deployed"},"gslb.localCluster":{"ui:description":"The Cluster Name where this controller is deployed"}},crdsSettings:{"gslb.crds.retainOnDelete":{"ui:description":"if set to true, then NetScaler CRDs will not be deleted during helm delete"}},siteSettings:{"gslb.sitedata":{"ui:description":"List containing ADC Site details IP, Name, Region, Secret",items:{siteName:{"ui:description":"Site Name of the GSLB site"},siteIp:{"ui:description":"Site IP of the GSLB site"},secretName:{"ui:description":"Kubernetes secret name for login credentials of Site"},siteRegion:{"ui:description":"SiteRegion of site"}}}},adcSettings:{"nsic.enabled":{"ui:widget":"hidden"},"nsic.nsIP":{"ui:placeholder":"X.X.X.X","ui:autofocus":!0,"ui:description":"NetScaler ADC NSIP/SNIP, SNIP in case of HA (mgmt has to be enabled)"},"nsic.nsPort":{"ui:description":"NetScaler ADC Management Port"},"nsic.nsProtocol":{"ui:description":"Protocol used for NetScaler ADC Management"},"nsic.adcCredentialSecret":{"ui:description":"Create a Kubernetes secret for the credentials of NetScaler ADC MPX or VPX using the following command: <kubectl create secret generic nslogin --from-literal=username='username' --from-literal=password='password'>"}},entity:{"nsic.entityPrefix":{"ui:description":"Resources created on the NetScaler ADC will have this prefix in their name. Only alphanumeric string is valid."},"nsic.defaultSSLCertSecret":{"ui:description":"Kubernetes secret resource name which to be used as default SSL certificate in NetScaler ADC"}},nsicSettings:{"nsic.license.accept":{"ui:widget":"hidden"},"nsic.kubernetesURL":{"ui:description":"The kube-apiserver url that NetScaler Ingress Controller uses to register the events. If the value is not specified, CIC uses the internal kube-apiserver IP address."},"nsic.logLevel":{"ui:description":"Log Level for NetScaler Ingress Controller Logs"},"nsic.ingressClass":{"ui:description":"Ingress class ensures that a particular set of ingress resources would be processed by NetScaler Ingress Controller."},"nsic.image":{"ui:description":"NetScaler Ingress Controller image"},"nsic.pullPolicy":{"ui:description":"Image Pull Policy for NetScaler Ingress Controller Image Pull Policy"}},nsoeConfig:{"ui:description":"Select below settings to send metrics, events, transactions to NetScaler Observability Exporter from NetScaler ADC","nsic.nsoeConfig.endpoint.server":{"ui:description":"Specify the DNS or IP address of the analytics server (NetScaler Observability Exporter)"},"nsic.nsoeConfig.timeseries.metrics.mode":{"ui:widget":"hidden"}},nsoeSettings:{"ui:description":"NetScaler Observability Exporter collects metrics and transactions from NetScaler ADCs and transforms them to suitable formats (such as JSON, AVRO) for supported endpoints. For info <https://github.com/citrix/citrix-observability-exporter>","nsoe.image":{"ui:description":"COE Image"},"nsoe.pullPolicy":{"ui:description":"COE Image pull policy"},"nsoe.timeseries.enabled":{"ui:description":"Set true to enable sending timeseries data to prometheus."},"nsoe.ns_tracing.server":{"ui:description":"The tracing server api endpoint."},"nsoe.transaction.nodePort":{"ui:description":"Specify the port used to expose COE service outside cluster for transaction endpoint."},"nsoe.elasticsearch.server":{"ui:description":"The Elasticsearch server api endpoint. Note: To use ElasticSearch make sure Kafka is disabled"},"nsoe.kafka.broker":{"ui:description":"The kafka broker IP or FQDN details. Note: To use Kafka make sure Elasticsearch is disabled"},"nsoe.kafka.topic":{"ui:description":"The kafka topic details to upload data"},"nsoe.timeseries.nodePort":{"ui:description":"Specify the port used to expose COE service outside cluster for timeseries endpoint."}},nsncSettings:{"ui:description":"Choose anyone. Select Node Watch to automatically configure routes on the NetScaler ADC to point to the pod networks on the nodes. Select CNC to create network between the Kubernetes cluster and ingress device.","nsnc.vxlan.id":{"ui:description":"A unique VXLAN VNID to create a VXLAN overlay between Kubernetes cluster and the ingress devices. Note: Ensure that the VXLAN VNID that you use does not conflict with the Kubernetes cluster or NetScaler ADC VXLAN VNID. You can use the show vxlan command on your NetScaler ADC to view the VXLAN VNID"},"nsnc.vxlan.port":{"ui:description":"The VXLAN port that you want to use for the overlay. Note: Ensure that the VXLAN PORT that you use does not conflict with the Kubernetes cluster or NetScaler ADC VXLAN PORT. You can use the show vxlan command on your NetScaler ADC to view the VXLAN PORT. "},"nsnc.image":{"ui:description":"CNC Image"},"nsnc.pullPolicy":{"ui:description":"CNC image pull policy"},"nsnc.vtepIP":{"ui:description":"The Ingress NetScaler ADC SNIP. This IP address is used to establish an overlay network between the Kubernetes clusters."},"nsnc.network":{"ui:description":"The IP address range (for example, 192.128.1.0/24) that NetScaler node controller uses to configure the VTEP overlay end points on the Kubernetes nodes. Note: Ensure that the subnet that you provide is different from your Kubernetes cluster."},"nsic.nodeWatch":{"ui:description":"When checked, routes on the NetScaler ADC are automatically configured to point to the pod networks on the nodes"}},exporterSettings:{"ui:description":"NetScaler metrics exporter scrapes NetScaler ADC stats and exports them via HTTP to Prometheus. For info:<https://github.com/citrix/citrix-adc-metrics-exporter>","nsic.exporter.image":{"ui:description":"NetScaler ADC Metrics Exporter Image"},"nsic.exporter.pullPolicy":{"ui:description":"NetScaler ADC Metrics Exporter image pull policy"},"nsic.exporter.ports.containerPort":{"ui:description":"Specify on which port metrics collected by the exporter should be exposed. Agents like Prometheus will need to scrape this port of the container to collected metrics"}},nodeSelectorSettings:{"nsic.nodeSelector.key":{"ui:description":"Node label key to be used for nodeSelector option in NetScaler Ingress Controller deployment.."},"nsic.nodeSelector.value":{"ui:description":"Node label value to be used for nodeSelector option in NetScaler Ingress Controller deployment."}},nsicAdvancedSettings:{"nsic.nsicSettings.nsicConfig.NS_HTTP2_SERVER_SIDE":{"ui:description":"Enables HTTP2 for NetScaler ADC service group configurations"},"nsic.nsicSettings.nsicConfig.NS_COOKIE_VERSION":{"ui:description":"Specify the persistence cookie version"}}};function oe(){return s.a.createElement(S.a,{attached:"bottom",basic:!0,padded:!0,className:"ut_border_none",style:{marginLeft:"1.4rem"}},"Copyright \xa9 ",s.a.createElement(y.a,{as:"a",href:"https://citrix.com/"},"NetScaler Systems")," ",(new Date).getFullYear(),".")}var ae=function(e){Object(p.a)(i,e);var t=Object(c.a)(i);function i(e){var r;return Object(a.a)(this,i),(r=t.call(this,e)).panels=[{key:"prerequisite",title:"Prerequisites",content:[r.props.description]}],r}return Object(l.a)(i,[{key:"componentDidUpdate",value:function(e,t,i){e.description!==this.props.description&&(this.panels=[{key:"prerequisite",title:"Prerequisites",content:[this.props.description]}])}},{key:"render",value:function(){return s.a.createElement(s.a.Fragment,null,s.a.createElement(d.a,{panels:this.panels}),s.a.createElement(b.a.Row,null,s.a.createElement(L,{groupId:this.props.groupId,formId:this.props.formId,schema:this.props.schema,uischema:this.props.uischema,formData:this.props.formData,yamlStr:this.props.yamlStr,setParentState:this.props.setParentState})))}}]),i}(s.a.Component),le=function(e){Object(p.a)(r,e);var t=Object(c.a)(r);function r(e){var n;return Object(a.a)(this,r),(n=t.call(this,e)).itemClick=function(e,t,i){console.log("Clicked on "+e+" formId= "+t),n.setState({groupId:e}),n.setState({formId:t})},n.setParentState=function(e,t,i,r){n.setState((function(s,n){return s.config[e].forms[t].formData=i,s.config[e].forms[t].yamlStr=r,{config:s.config}})),console.log("setParentState Group index= "+e+", Form index= "+t),console.log("setParentState Form data= ",n.state.config[e].forms[t].formData),console.log("setParentState Yaml: ",r)},n.state={groupId:0,formId:0,config:[{groupTitle:"Tier-1 Ingress",groupTooltip:"NetScaler ADC MPX or VPX outside the cluster",groupImage:i(920),forms:[{title:"Ingress",schema:M,uischema:R,formData:{},yamlStr:"",itemTooltip:"Deploy NetScaler ADC MPX or VPX as an Ingress",prerequisite:s.a.createElement(P.a,{as:"ol"},s.a.createElement(P.a.Item,{as:"li"},"Kubernetes version 1.14.0+ or OpenShift version 3.11+"),s.a.createElement(P.a.Item,{as:"li"},"Helm Version 3.x"),s.a.createElement(P.a.Item,{as:"li"},"To use NetScaler Metrics Exporter, install the ",s.a.createElement("a",{href:"https://github.com/prometheus-operator/prometheus-operator",target:"_blank",rel:"noopener noreferrer"},"Prometheus Operator")),s.a.createElement(P.a.Item,{as:"li"},"Create a Kubernetes secret for credentials of the NetScaler ADC VPX or MPX using:",s.a.createElement(S.a,{inverted:!0},"kubectl create secret generic ",s.a.createElement("i",null,"your_secret_name")," --from-literal=username='",s.a.createElement("i",null,"ADC_username"),"' --from-literal=password='",s.a.createElement("i",null,"ADC_password"),"'"),s.a.createElement("i",null,"Note: please use your own values for the secret name, ADC_username and ADC_password"),s.a.createElement("p",null,"Use the ",s.a.createElement("i",null,"your_secret_name")," in the form where Kubernetes Secret name is required.")))},{title:"ServiceType LoadBalancer",schema:U,uischema:B,formData:{},yamlStr:"",itemTooltip:"Deploy Service of type Load Balancer",prerequisite:s.a.createElement(P.a,{as:"ol"},s.a.createElement(P.a.Item,{as:"li"},"Kubernetes version 1.14+ or OpenShift version 3.11+"),s.a.createElement(P.a.Item,{as:"li"},"Helm Version 3.x"),s.a.createElement(P.a.Item,{as:"li"},"To use NetScaler Metrics Exporter, install the ",s.a.createElement("a",{href:"https://github.com/prometheus-operator/prometheus-operator",target:"_blank",rel:"noopener noreferrer"},"Prometheus Operator")),s.a.createElement(P.a.Item,{as:"li"},"Create a Kubernetes secret for credentials of the NetScaler ADC VPX or MPX using:",s.a.createElement(S.a,{inverted:!0},"kubectl create secret generic ",s.a.createElement("i",null,"your_secret_name")," --from-literal=username='",s.a.createElement("i",null,"ADC_username"),"' --from-literal=password='",s.a.createElement("i",null,"ADC_password"),"'"),s.a.createElement("i",null,"Note: please use your own values for the secret name, ADC_username and ADC_password"),s.a.createElement("p",null,"Use the ",s.a.createElement("i",null,"your_secret_name")," in the form where Kubernetes Secret name is required.")))}]},{groupTitle:"Dual Tier Deployment",groupTooltip:"NetScaler ADC MPX or VPX outside the cluster with CPX inside the cluster",groupImage:i(921),forms:[{title:"NetScaler ADC CPX as NodePort",itemTooltip:"Dual Tier with NetScaler ADC CPX Service Exposed as NodePort",schema:X,uischema:_,formData:{},yamlStr:"",prerequisite:s.a.createElement(P.a,{as:"ol"},s.a.createElement(P.a.Item,{as:"li"},"Kubernetes version 1.14+ or OpenShift version 3.11+"),s.a.createElement(P.a.Item,{as:"li"},"Helm Version 3.x"),s.a.createElement(P.a.Item,{as:"li"},"To use NetScaler Metrics Exporter, install the ",s.a.createElement("a",{href:"https://github.com/prometheus-operator/prometheus-operator",target:"_blank",rel:"noopener noreferrer"},"Prometheus Operator")),s.a.createElement(P.a.Item,{as:"li"},"Create a Kubernetes secret for credentials of the NetScaler ADC VPX or MPX using:",s.a.createElement(S.a,{inverted:!0},"kubectl create secret generic ",s.a.createElement("i",null,"your_secret_name")," --from-literal=username='",s.a.createElement("i",null,"ADC_username"),"' --from-literal=password='",s.a.createElement("i",null,"ADC_password"),"'"),s.a.createElement("i",null,"Note: please use your own values for the secret name, ADC_username and ADC_password"),s.a.createElement("p",null,"Use the ",s.a.createElement("i",null,"your_secret_name")," in the form where Kubernetes Secret name is required.")),s.a.createElement(P.a.Item,{as:"li"}," For Registration of NetScaler ADC CPX in ADM, create Kubernetes Secret for credentials of NetScaler ADM using:",s.a.createElement(S.a,{inverted:!0},"kubectl create secret generic  ",s.a.createElement("i",null,"your_secret_name"),"  --from-literal=username='",s.a.createElement("i",null,"adm_username"),"'  --from-literal=password='",s.a.createElement("i",null,"adm_password"),"'"),s.a.createElement("i",null,"Note: please use your own values for the secret name, adm_username and adm_password"),s.a.createElement("p",null,"Use the ",s.a.createElement("i",null,"Login Secret for ADM")," in the form where is required.")))},{title:"NetScaler ADC CPX as TypeLB",itemTooltip:"Dual Tier ServiceType LB",schema:V,uischema:j,formData:{},yamlStr:"",prerequisite:s.a.createElement(P.a,{as:"ol"},s.a.createElement(P.a.Item,{as:"li"},"Kubernetes version 1.14+ or OpenShift version 3.11+"),s.a.createElement(P.a.Item,{as:"li"},"Helm Version 3.x"),s.a.createElement(P.a.Item,{as:"li"},"To use NetScaler Metrics Exporter, install the ",s.a.createElement("a",{href:"https://github.com/prometheus-operator/prometheus-operator",target:"_blank",rel:"noopener noreferrer"},"Prometheus Operator")),s.a.createElement(P.a.Item,{as:"li"},"Create a Kubernetes secret for credentials of the NetScaler ADC VPX or MPX using:",s.a.createElement(S.a,{inverted:!0},"kubectl create secret generic ",s.a.createElement("i",null,"your_secret_name")," --from-literal=username='",s.a.createElement("i",null,"ADC_username"),"' --from-literal=password='",s.a.createElement("i",null,"ADC_password"),"'"),s.a.createElement("i",null,"Note: please use your own values for the secret name, ADC_username and ADC_password"),s.a.createElement("p",null,"Use the ",s.a.createElement("i",null,"your_secret_name")," in the form where Kubernetes Secret name is required.")),s.a.createElement(P.a.Item,{as:"li"}," For Registration of NetScaler ADC CPX in ADM, create Kubernetes Secret for credentials of NetScaler ADM using:",s.a.createElement(S.a,{inverted:!0},"kubectl create secret generic  ",s.a.createElement("i",null,"your_secret_name"),"  --from-literal=username='",s.a.createElement("i",null,"adm_username"),"'  --from-literal=password='",s.a.createElement("i",null,"adm_password"),"'"),s.a.createElement("i",null,"Note: please use your own values for the secret name, adm_username and adm_password"),s.a.createElement("p",null,"Use the ",s.a.createElement("i",null,"Login Secret for ADM")," in the form where is required.")))},{title:"NetScaler ADC CPX as ClusterIP",itemTooltip:"Dual Tier with NetScaler ADC CPX as ClusterIP",schema:$,uischema:Z,formData:{},yamlStr:"",prerequisite:s.a.createElement(P.a,{as:"ol"},s.a.createElement(P.a.Item,{as:"li"},"Kubernetes version 1.14+ or OpenShift version 3.11+"),s.a.createElement(P.a.Item,{as:"li"},"Helm Version 3.x"),s.a.createElement(P.a.Item,{as:"li"},"To use NetScaler Metrics Exporter, install the ",s.a.createElement("a",{href:"https://github.com/prometheus-operator/prometheus-operator",target:"_blank",rel:"noopener noreferrer"},"Prometheus Operator")),s.a.createElement(P.a.Item,{as:"li"},"Create a Kubernetes secret for credentials of the NetScaler ADC VPX or MPX using:",s.a.createElement(S.a,{inverted:!0},"kubectl create secret generic ",s.a.createElement("i",null,"your_secret_name")," --from-literal=username='",s.a.createElement("i",null,"ADC_username"),"' --from-literal=password='",s.a.createElement("i",null,"ADC_password"),"'"),s.a.createElement("i",null,"Note: please use your own values for the secret name, ADC_username and ADC_password"),s.a.createElement("p",null,"Use the ",s.a.createElement("i",null,"your_secret_name")," in the form where Kubernetes Secret name is required.")),s.a.createElement(P.a.Item,{as:"li"}," For Registration of NetScaler ADC CPX in ADM, create Kubernetes Secret for credentials of NetScaler ADM using:",s.a.createElement(S.a,{inverted:!0},"kubectl create secret generic  ",s.a.createElement("i",null,"your_secret_name"),"  --from-literal=username='",s.a.createElement("i",null,"adm_username"),"'  --from-literal=password='",s.a.createElement("i",null,"adm_password"),"'"),s.a.createElement("i",null,"Note: please use your own values for the secret name, adm_username and adm_password"),s.a.createElement("p",null,"Use the ",s.a.createElement("i",null,"Login Secret for ADM")," in the form where is required.")))}]},{groupTitle:"GSLB Ingress",groupTooltip:"GSLB ingress and load balancing solution using the NetScaler ingress controller",groupImage:i(922),forms:[{title:"NetScaler GSLB with Ingress Controller",schema:se,uischema:ne,formData:{},yamlStr:"",itemTooltip:"GSLB ingress and load balancing solution using the NetScaler ingress controller'",prerequisite:s.a.createElement(P.a,{as:"ol"},s.a.createElement(P.a.Item,{as:"li"},"Kubernetes version 1.14.0+ or OpenShift version 3.11+"),s.a.createElement(P.a.Item,{as:"li"},"Helm Version 3.x"),s.a.createElement(P.a.Item,{as:"li"},"To use NetScaler Metrics Exporter, install the ",s.a.createElement("a",{href:"https://github.com/prometheus-operator/prometheus-operator",target:"_blank",rel:"noopener noreferrer"},"Prometheus Operator")),s.a.createElement(P.a.Item,{as:"li"},"Create a Kubernetes secret for credentials of the NetScaler ADC VPX or MPX using:",s.a.createElement(S.a,{inverted:!0},"kubectl create secret generic ",s.a.createElement("i",null,"your_secret_name")," --from-literal=username='",s.a.createElement("i",null,"ADC_username"),"' --from-literal=password='",s.a.createElement("i",null,"ADC_password"),"'"),s.a.createElement("i",null,"Note: please use your own values for the secret name, ADC_username and ADC_password"),s.a.createElement("p",null,"Use the ",s.a.createElement("i",null,"your_secret_name")," in the form where Sitedata SecretName is required."),s.a.createElement("b",null,"The secrets with credentials needs to be created for all the ADC Nodes")),s.a.createElement(P.a.Item,{as:"li"},"Following configurations needs to be done on the ADC's",s.a.createElement("p",null,"Add a SNIP (The subnet IP address). For more information, see ",s.a.createElement("a",{href:"(https://docs.citrix.com/en-us/citrix-adc/12-1/networking/ip-addressing.html",target:"_blank",rel:"noopener noreferrer"},"IP Addressing in NetScaler ADC")),s.a.createElement(S.a,{inverted:!0},"add ip ",s.a.createElement("i",null,"snip"),"  ",s.a.createElement("i",null,"netmask")),s.a.createElement("p",null,"GSLB sites needs to be configured on all the NetScaler ADC which acts as the GSLB Node."),s.a.createElement(S.a,{inverted:!0},"add gslb site ",s.a.createElement("i",null,"sitename"),"  ",s.a.createElement("i",null,"snip"),"    "),s.a.createElement("p",null,"Features like content switching(CS),Load Balancing(LB), SSL, GSLB should be enabled on all the ADC Nodes"),s.a.createElement(S.a,{inverted:!0},"en feature lb,cs,ssl,gslb"),s.a.createElement("p",null,"For static proximity, the location database has to be applied externally"),s.a.createElement(S.a,{inverted:!0},"add locationfile /var/netscaler/inbuilt_db/Citrix_Netscaler_InBuilt_GeoIP_DB_IPv4")))},{title:"NetScaler GSLB without Ingress Controller",itemTooltip:"Install NetScaler gslb without ingress controller",schema:ie,uischema:re,formData:{},yamlStr:"",prerequisite:s.a.createElement(P.a,{as:"ol"},s.a.createElement(P.a.Item,{as:"li"},"Kubernetes version 1.14.0+ or OpenShift version 3.11+"),s.a.createElement(P.a.Item,{as:"li"},"Helm Version 3.x"),s.a.createElement(P.a.Item,{as:"li"},"Create a Kubernetes secret for credentials of the NetScaler ADC VPX or MPX using:",s.a.createElement(S.a,{inverted:!0},"kubectl create secret generic ",s.a.createElement("i",null,"your_secret_name")," --from-literal=username='",s.a.createElement("i",null,"ADC_username"),"' --from-literal=password='",s.a.createElement("i",null,"ADC_password"),"'"),s.a.createElement("i",null,"Note: please use your own values for the secret name, ADC_username and ADC_password"),s.a.createElement("p",null,"Use the ",s.a.createElement("i",null,"your_secret_name")," in the form where Sitedata SecretName is required."),s.a.createElement("b",null,"The secrets with credentials needs to be created for all the ADC Nodes")),s.a.createElement(P.a.Item,{as:"li"},"Following configurations needs to be done on the ADC's",s.a.createElement("p",null,"Add a SNIP (The subnet IP address). For more information, see ",s.a.createElement("a",{href:"(https://docs.citrix.com/en-us/citrix-adc/12-1/networking/ip-addressing.html",target:"_blank",rel:"noopener noreferrer"},"IP Addressing in NetScaler ADC")),s.a.createElement(S.a,{inverted:!0},"add ip ",s.a.createElement("i",null,"snip"),"  ",s.a.createElement("i",null,"netmask")),s.a.createElement("p",null,"GSLB sites needs to be configured on all the NetScaler ADC which acts as the GSLB Node."),s.a.createElement(S.a,{inverted:!0},"add gslb site ",s.a.createElement("i",null,"sitename"),"  ",s.a.createElement("i",null,"snip"),"    "),s.a.createElement("p",null,"Features like content switching(CS),Load Balancing(LB), SSL, GSLB should be enabled on all the ADC Nodes"),s.a.createElement(S.a,{inverted:!0},"en feature lb,cs,ssl,gslb"),s.a.createElement("p",null,"For static proximity, the location database has to be applied externally"),s.a.createElement(S.a,{inverted:!0},"add locationfile /var/netscaler/inbuilt_db/Citrix_Netscaler_InBuilt_GeoIP_DB_IPv4")))}]},{groupTitle:"Service Mesh",groupTooltip:"Service Mesh solutions",groupImage:i(923),forms:[{title:"Ingress Gateway (with Istio)",schema:Y,uischema:J,formData:{},yamlStr:"",itemTooltip:"Deploy NetScaler ADC as an Ingress Gateway in Istio Service Mesh",prerequisite:s.a.createElement(P.a,{as:"ol"},s.a.createElement(P.a.Item,{as:"li"},"Istio version 1.6.0+"),s.a.createElement(P.a.Item,{as:"li"},"Kubernetes version 1.14+ "),s.a.createElement(P.a.Item,{as:"li"},"Helm Version 3.x"),s.a.createElement(P.a.Item,{as:"li"}," ",s.a.createElement("i",null,"`admissionregistration.k8s.io/v1beta1`")," API should be enabled"),s.a.createElement(P.a.Item,{as:"li"},"Create a Kubernetes secret for credentials of the NetScaler ADC VPX or MPX using:",s.a.createElement(S.a,{inverted:!0},"kubectl create secret generic ",s.a.createElement("i",null,"nslogin")," --from-literal=username='",s.a.createElement("i",null,"ADC_username"),"' --from-literal=password='",s.a.createElement("i",null,"ADC_password"),"'"),s.a.createElement("i",null,"Note: please use your own values for the secret name, ADC_username and ADC_password"),s.a.createElement("p",null,"Use the ",s.a.createElement("i",null,"nslogin")," as secret name.")),s.a.createElement(P.a.Item,{as:"li"}," For Registration of NetScaler ADC CPX in ADM, create Kubernetes Secret for credentials of NetScaler ADM using:",s.a.createElement(S.a,{inverted:!0},"kubectl create secret generic  ",s.a.createElement("i",null,"admlogin"),"  --from-literal=username='",s.a.createElement("i",null,"adm_username"),"'  --from-literal=password='",s.a.createElement("i",null,"adm_password"),"'"),s.a.createElement("i",null,"Note: please use your own values for the adm_username and adm_password"),s.a.createElement("p",null,"Use the ",s.a.createElement("i",null,"admlogin")," as secret name.")))},{title:"CPX as Sidecar (with Istio)",schema:z,uischema:Q,formData:{},yamlStr:"",itemTooltip:"Deploy NetScaler ADC as a Sidecar Proxy in Istio Service Mesh",prerequisite:s.a.createElement(P.a,{as:"ol"},s.a.createElement(P.a.Item,{as:"li"},"Istio version 1.6.0+"),s.a.createElement(P.a.Item,{as:"li"},"Kubernetes version 1.14+ "),s.a.createElement(P.a.Item,{as:"li"},"Helm Version 3.x"),s.a.createElement(P.a.Item,{as:"li"}," ",s.a.createElement("i",null,"`admissionregistration.k8s.io/v1beta1`")," API should be enabled"),s.a.createElement(P.a.Item,{as:"li"}," For Registration of NetScaler ADC CPX in ADM, create Kubernetes Secret for credentials of NetScaler ADM using:",s.a.createElement(S.a,{inverted:!0},"kubectl create secret generic  ",s.a.createElement("i",null,"admlogin"),"  --from-literal=username='",s.a.createElement("i",null,"adm_username"),"'  --from-literal=password='",s.a.createElement("i",null,"adm_password"),"'"),s.a.createElement("i",null,"Note: please use your own values for the adm_username and adm_password"),s.a.createElement("p",null,"Use the ",s.a.createElement("i",null,"admlogin")," as secret name.")))},{title:"Egress Gateway (with Istio)",schema:ee,uischema:te,formData:{},yamlStr:"",itemTooltip:"Deploy NetScaler ADC as a Egress Gateway in Istio Service Mesh",prerequisite:s.a.createElement(P.a,{as:"ol"},s.a.createElement(P.a.Item,{as:"li"},"Istio version 1.6.0+"),s.a.createElement(P.a.Item,{as:"li"},"Kubernetes version 1.14+ "),s.a.createElement(P.a.Item,{as:"li"},"Helm Version 3.x"),s.a.createElement(P.a.Item,{as:"li"}," ",s.a.createElement("i",null,"`admissionregistration.k8s.io/v1beta1`")," API should be enabled"),s.a.createElement(P.a.Item,{as:"li"}," For Registration of NetScaler ADC CPX in ADM, create Kubernetes Secret for credentials of NetScaler ADM using:",s.a.createElement(S.a,{inverted:!0},"kubectl create secret generic  ",s.a.createElement("i",null,"admlogin"),"  --from-literal=username='",s.a.createElement("i",null,"adm_username"),"'  --from-literal=password='",s.a.createElement("i",null,"adm_password"),"'"),s.a.createElement("i",null,"Note: please use your own values for the adm_username and adm_password"),s.a.createElement("p",null,"Use the ",s.a.createElement("i",null,"admlogin")," as secret name.")))}]},{groupTitle:"Components",groupTooltip:"Deploy various NetScaler Cloud Native Products",forms:[{title:"NetScaler IPAM Controller",itemTooltip:"IP address management for service type LB",schema:q,uischema:K,formData:{},yamlStr:"",prerequisite:s.a.createElement(P.a,{as:"ol"},s.a.createElement(P.a.Item,{as:"li"},"Kubernetes version 1.14+"),s.a.createElement(P.a.Item,{as:"li"},"Helm Version 3.x"))},{title:"NetScaler Node Controller",itemTooltip:" CNC creates network between the Kubernetes cluster and ingress device",schema:H,uischema:G,formData:{},yamlStr:"",prerequisite:s.a.createElement(P.a,{as:"ol"},s.a.createElement(P.a.Item,{as:"li"},"Kubernetes version 1.14+"),s.a.createElement(P.a.Item,{as:"li"},"Helm Version 3.x"),s.a.createElement(P.a.Item,{as:"li"},"Create a Kubernetes secret for credentials of the NetScaler ADC VPX or MPX using:",s.a.createElement(S.a,{inverted:!0},"kubectl create secret generic ",s.a.createElement("i",null,"your_secret_name")," --from-literal=username='",s.a.createElement("i",null,"ADC_username"),"' --from-literal=password='",s.a.createElement("i",null,"ADC_password"),"'"),s.a.createElement("i",null,"Note: please use your own values for the secret name, ADC_username and ADC_password"),s.a.createElement("p",null,"Use the ",s.a.createElement("i",null,"Secret Name")," in the form where Kubernetes Secret name is required.")))},{title:"NetScaler Observability Exporter",itemTooltip:"COE collects metrics and transactions from NetScaler ADCs",schema:F,uischema:W,formData:{},yamlStr:"",prerequisite:s.a.createElement(P.a,{as:"ol"},s.a.createElement(P.a.Item,{as:"li"},"Kubernetes version 1.14+"),s.a.createElement(P.a.Item,{as:"li"},"Helm Version 3.x"))}]}]},n}return Object(l.a)(r,[{key:"render",value:function(){return s.a.createElement(s.a.Fragment,null,s.a.createElement(h.a,{inverted:!0,attached:"top",as:"h1",className:"mastHead"},"NetScaler Deployment Builder"),s.a.createElement(C.a.Pushable,{attached:"top",basic:!0,as:S.a,style:{marginTop:"0",borderRadius:"0",borderTop:"0",borderBottom:"0"}},s.a.createElement(C.a,{as:u.a,vertical:!0,visible:!0,width:"wide"},s.a.createElement(f,{config:this.state.config,onClick:this.itemClick})),s.a.createElement(C.a.Pusher,null,s.a.createElement(h.a,{className:"titleHeader ut_border_none",as:"h3",attached:"top"},this.state.config[this.state.groupId].forms[this.state.formId].title),s.a.createElement(b.a,{className:"mainlayout"},s.a.createElement(ae,{description:this.state.config[this.state.groupId].forms[this.state.formId].prerequisite,groupId:this.state.groupId,formId:this.state.formId,schema:this.state.config[this.state.groupId].forms[this.state.formId].schema,uischema:this.state.config[this.state.groupId].forms[this.state.formId].uischema,formData:this.state.config[this.state.groupId].forms[this.state.formId].formData,yamlStr:this.state.config[this.state.groupId].forms[this.state.formId].yamlStr,setParentState:this.setParentState})),s.a.createElement(oe,null))))}}]),r}(s.a.Component),ce=i(241),pe=function(e){Object(p.a)(i,e);var t=Object(c.a)(i);function i(){return Object(a.a)(this,i),t.apply(this,arguments)}return Object(l.a)(i,[{key:"componentDidMount",value:function(){ce.a.initialize("UA-59929653-54"),ce.a.pageview(window.location.pathname+window.location.search),console.log(window.location.pathname)}},{key:"render",value:function(){return s.a.createElement(le,null)}}]),i}(s.a.Component);Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));o.a.render(s.a.createElement(pe,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()})).catch((function(e){console.error(e.message)}))}},[[402,1,2]]]);
//# sourceMappingURL=main.5ed3f8a5.chunk.js.map